/* Step 1: Transpose only the EOM_ columns */
proc transpose data=your_input_dataset out=eom_long(rename=(col1=EOM_BAL)) name=month_var;
    by cust_id MAX_LIMIT DELQ_DATE; /* Add here all non-EOM variables */
    var EOM_:; /* Only transpose the EOM_ variables */
run;

/* Step 2: Extract month_key (YYYYMM) from the variable name */
data final;
    set eom_long;
    length month_key $6;

    /* Extract MMYY from EOM_XXXX and convert to YYYYMM */
    mm = substr(month_var, 5, 2);
    yy = substr(month_var, 7, 2);
    year_full = put(2000 + input(yy, 2.), 4.);
    month_key = cats(year_full, mm);

    drop mm yy year_full;
run;









%macro PLOC(mm);
    %local lib;

    /* Set LIBNAME based on month year */
    %if %substr(&mm., 3, 2) < 25 %then %let lib = SRC2024;
    %else %let lib = SRC2025;

    proc sql;
        create table final_ploc_&mm. as
        select 
            (DFCTCD || DFGMAB || put(DFACB, z3.) || put(DFACS, z6.) || put(DFACX, z3.)) as Accnt_no,
            (DFDEBC || put(DFDCS, z3.) || put(DFDCS, z6.)) as Cust_id,
            DFSTUS     as Accnt_STATUS,
            DFDTAO     as ACCNT_OPN_DT,
            DFBLLME    as LAST_MNTH_BAL,
            DFRLBL     as LEDGER_BAL,
            DFVELB     as VALUE_BAL,
            DFTTHD     as TOTAL_HOLDS,
            DFDLIN     as LAST_TRN_DATE,
            DUOHT0 * 0.01 as OOD_LIMIT,

            D1HOLM * 0.01 as MAX_LIMIT,
            D1LOLM * 0.01 as LOW_LIMIT,
            ZZCRSC     as CRED_SEGMENT,
            ZZSBSC     as BEHAV_SEGMENT,
            SSADD1     as ADDRESS_LINE1,
            SSADD2     as ADDRESS_LINE2,
            SSNAME     as CUSTOMER_NAME,
            SSSTTS     as STATUS,
            SSBRCN     as BRANCH_NAME

        from &lib..DDACMSP_&mm.

        left join &lib..DCACMSP_&mm.
        on compress(DFCTCD || DFGMAB || put(DFACB, z3.) || put(DFACS, z6.) || put(DFACX, z3.)) =
           compress(DFCTCD || DFGMAB || put(DFACB, z3.) || put(DFACS, z6.) || put(DFACX, z3.))

        left join &lib..DCCRMNP_&mm.
        on compress(DFCTCD || DFGMAB || put(DFACB, z3.) || put(DFACS, z6.) || put(DFACX, z3.)) =
           compress(DFCTCD || DFGMAB || put(DFACB, z3.) || put(DFACS, z6.) || put(DFACX, z3.))

        left join &lib..SSADDRP_PLB_&mm.
        on compress(DFDEBC || put(DFDCS, z3.) || put(DFDCS, z6.)) =
           compress(SSCUNO || put(SSCSCD, z3.) || put(SSCSID, z6.))

        left join &lib..SSCUSTP_PLB_&mm.
        on compress(DFDEBC || put(DFDCS, z3.) || put(DFDCS, z6.)) =
           compress(SSCUNO || put(SSCSCD, z3.) || put(SSCSID, z6.))

        left join &lib..SSSTTPP_&mm.
        on compress(DFDEBC || put(DFDCS, z3.) || put(DFDCS, z6.)) =
           compress(SSCUNO || put(SSCSCD, z3.) || put(SSCSID, z6.))

        where DFAPTY in ('PCN','PCI')
          and DFSTUS in ('1','2','3')
          and DFPMDEL ne 'S'
          and ZBABID = 'P1';
    quit;

    %put NOTE: final_ploc_&mm. created without aliases using %upcase(&lib.) tables.;
%mend;