Inc TMD Lift =
VAR SummaryTable =
    SUMMARIZE (
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[GA_CUST_ID],
        'DateDim_MSD'[MonthStart],
        "PostTRB", MAX ( 'MSD Trigger Conversion'[POST_2_MON_AVG_TMD] ),
        "PreTRB",  MAX ( 'MSD Trigger Conversion'[PRE_2_MON_AVG_TMD] ),
        "Contacted", MAX ( 'MSD Trigger Conversion'[CONTACTED_FLAG] )
    )

/* ---- Contacted averages ---- */
VAR A_Post =
    DIVIDE (
        SUMX ( FILTER ( SummaryTable, [Contacted] = 1 ), [PostTRB] ),
        COUNTROWS ( FILTER ( SummaryTable, [Contacted] = 1 ) )
    )
VAR A_Pre =
    DIVIDE (
        SUMX ( FILTER ( SummaryTable, [Contacted] = 1 ), [PreTRB] ),
        COUNTROWS ( FILTER ( SummaryTable, [Contacted] = 1 ) )
    )
VAR A = A_Post - A_Pre

/* ---- Non-contacted averages ---- */
VAR B_Post =
    DIVIDE (
        SUMX ( FILTER ( SummaryTable, [Contacted] <> 1 ), [PostTRB] ),
        COUNTROWS ( FILTER ( SummaryTable, [Contacted] <> 1 ) )
    )
VAR B_Pre =
    DIVIDE (
        SUMX ( FILTER ( SummaryTable, [Contacted] <> 1 ), [PreTRB] ),
        COUNTROWS ( FILTER ( SummaryTable, [Contacted] <> 1 ) )
    )
VAR B = B_Post - B_Pre

/* ---- Contacted count ---- */
VAR ContactedCount =
    COUNTROWS ( FILTER ( SummaryTable, [Contacted] = 1 ) )

/* ---- New: Outlier-trimmed variable (Contacted set only) ---- */
VAR DiffTable =
    ADDCOLUMNS (
        FILTER ( SummaryTable, [Contacted] = 1 ),
        "TMD_DIFF", [PostTRB] - [PreTRB]
    )

VAR PctlLow  = PERCENTILEX.INC ( DiffTable, [TMD_DIFF], 0.02 )
VAR PctlHigh = PERCENTILEX.INC ( DiffTable, [TMD_DIFF], 0.98 )

VAR DiffTableTrim =
    FILTER ( DiffTable, [TMD_DIFF] >= PctlLow && [TMD_DIFF] <= PctlHigh )

VAR TrimmedCount = COUNTROWS ( DiffTableTrim )
VAR AvgDiffTrim  = DIVIDE ( SUMX ( DiffTableTrim, [TMD_DIFF] ), TrimmedCount )

/* ---- Final Result (with trimming uplift applied) ---- */
VAR Result =
    IF (
        ContactedCount <> 0,
        "₹" &
            FORMAT (
                MAX ( 0, (AvgDiffTrim - B) * ContactedCount / 10000000 ),
                "0.00"
            ) & " Cr",
        BLANK ()
    )

RETURN
    Result








Inc_TMD_Lift_no_outlier =
VAR SelMonths :=
    DISTINCT ( ALLSELECTED ( 'Datedim_msd'[MonthStart] ) )

/* ----- CONTACTED across selected months (Customer × Month collapse) ----- */
VAR CBase :=
    CALCULATETABLE (
        'MSD Trigger Conversion',
        KEEPFILTERS ( 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 ),
        TREATAS ( SelMonths, 'MSD Trigger Conversion'[MonthStart] )
    )
VAR C_ByCustMonth :=
    SUMMARIZE (
        CBase,
        'Datedim_msd'[MonthStart],
        'MSD Trigger Conversion'[GA_CUST_ID],
        "Post", MAX ( 'MSD Trigger Conversion'[POST_2_MON_AVG_TMD] ),
        "Pre",  MAX ( 'MSD Trigger Conversion'[PRE_2_MON_AVG_TMD] )
    )
VAR C_WithDiff := ADDCOLUMNS ( C_ByCustMonth, "TMD_DIFF", [Post] - [Pre] )
VAR C_Clean    := FILTER ( C_WithDiff, NOT ISBLANK ( [TMD_DIFF] ) )

/* Trim 2%–98% on the combined (multi-month) contacted distribution */
VAR C_p10 := PERCENTILEX.INC ( C_Clean, [TMD_DIFF], 0.02 )
VAR C_p98 := PERCENTILEX.INC ( C_Clean, [TMD_DIFF], 0.98 )
VAR C_Trim :=
    IF ( COUNTROWS ( C_Clean ) <= 1, C_Clean,
        FILTER ( C_Clean, [TMD_DIFF] >= C_p10 && [TMD_DIFF] <= C_p98 )
    )
VAR C_Cnt := COUNTROWS ( C_Trim )
VAR C_Avg := DIVIDE ( SUMX ( C_Trim, [TMD_DIFF] ), C_Cnt )

/* ----- NON-CONTACTED across selected months ----- */
VAR NCBase :=
    CALCULATETABLE (
        'MSD Trigger Conversion',
        KEEPFILTERS ( 'MSD Trigger Conversion'[CONTACTED_FLAG] = 0 ),
        TREATAS ( SelMonths, 'MSD Trigger Conversion'[MonthStart] )
    )
VAR NC_ByCustMonth :=
    SUMMARIZE (
        NCBase,
        'Datedim_msd'[MonthStart],
        'MSD Trigger Conversion'[GA_CUST_ID],
        "Post", MAX ( 'MSD Trigger Conversion'[POST_2_MON_AVG_TMD] ),
        "Pre",  MAX ( 'MSD Trigger Conversion'[PRE_2_MON_AVG_TMD] )
    )
VAR NC_WithDiff := ADDCOLUMNS ( NC_ByCustMonth, "TMD_DIFF", [Post] - [Pre] )
VAR NC_Clean    := FILTER ( NC_WithDiff, NOT ISBLANK ( [TMD_DIFF] ) )

VAR NC_p10 := PERCENTILEX.INC ( NC_Clean, [TMD_DIFF], 0.02 )
VAR NC_p98 := PERCENTILEX.INC ( NC_Clean, [TMD_DIFF], 0.98 )
VAR NC_Trim :=
    IF ( COUNTROWS ( NC_Clean ) <= 1, NC_Clean,
        FILTER ( NC_Clean, [TMD_DIFF] >= NC_p10 && [TMD_DIFF] <= NC_p98 )
    )
VAR NC_Avg := DIVIDE ( SUMX ( NC_Trim, [TMD_DIFF] ), COUNTROWS ( NC_Trim ) )

/* ----- One combined uplift over the selection; scale by contacted base ----- */
VAR Uplift   := C_Avg - NC_Avg
VAR ImpactRs := Uplift * C_Cnt
VAR ImpactCr := DIVIDE ( ImpactRs, 10000000 )

RETURN
    IF ( ISBLANK ( ImpactCr ) || ImpactCr <= 0,
        "₹0 Cr",
        "₹" & FORMAT ( ImpactCr, "0.00" ) & " Cr"
    )






Inc_TMD_lift_no_outlier =
VAR Months =
    VALUES ( 'Datedim_msd'[MonthStart] )   -- months selected on the slicer

VAR ImpactCrTotal =
    SUMX (
        Months,
        VAR m = 'Datedim_msd'[MonthStart]

        /* ===== CONTACTED cohort, month m ===== */
        VAR CBase =
            CALCULATETABLE (
                'MSD Trigger Conversion',
                KEEPFILTERS ( 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 ),
                KEEPFILTERS ( 'MSD Trigger Conversion'[MonthStart] = m )   -- robust even if relationship is inactive
            )

        /* Collapse to Customer (for this month) and take MAX per customer */
        VAR C_ByCust =
            GROUPBY (
                CBase,
                'MSD Trigger Conversion'[GA_CUST_ID],
                "Post", MAXX ( CURRENTGROUP (), 'MSD Trigger Conversion'[POST_2_MON_AVG_TMD] ),
                "Pre",  MAXX ( CURRENTGROUP (), 'MSD Trigger Conversion'[PRE_2_MON_AVG_TMD] )
            )
        VAR C_WithDiff = ADDCOLUMNS ( C_ByCust, "TMD_DIFF", [Post] - [Pre] )

        /* Trim 2%–98% within month m */
        VAR C_p10 = PERCENTILEX.INC ( C_WithDiff, [TMD_DIFF], 0.02 )
        VAR C_p98 = PERCENTILEX.INC ( C_WithDiff, [TMD_DIFF], 0.98 )
        VAR C_Trim =
            FILTER ( C_WithDiff, NOT ISBLANK ( [TMD_DIFF] ) && [TMD_DIFF] >= C_p10 && [TMD_DIFF] <= C_p98 )

        VAR C_Cnt = COUNTROWS ( C_Trim )
        VAR C_Avg = DIVIDE ( SUMX ( C_Trim, [TMD_DIFF] ), C_Cnt )

        /* ===== NON-CONTACTED cohort, month m ===== */
        VAR NCBase =
            CALCULATETABLE (
                'MSD Trigger Conversion',
                KEEPFILTERS ( 'MSD Trigger Conversion'[CONTACTED_FLAG] = 0 ),
                KEEPFILTERS ( 'MSD Trigger Conversion'[MonthStart] = m )
            )

        VAR NC_ByCust =
            GROUPBY (
                NCBase,
                'MSD Trigger Conversion'[GA_CUST_ID],
                "Post", MAXX ( CURRENTGROUP (), 'MSD Trigger Conversion'[POST_2_MON_AVG_TMD] ),
                "Pre",  MAXX ( CURRENTGROUP (), 'MSD Trigger Conversion'[PRE_2_MON_AVG_TMD] )
            )
        VAR NC_WithDiff = ADDCOLUMNS ( NC_ByCust, "TMD_DIFF", [Post] - [Pre] )

        VAR NC_p10 = PERCENTILEX.INC ( NC_WithDiff, [TMD_DIFF], 0.02 )
        VAR NC_p98 = PERCENTILEX.INC ( NC_WithDiff, [TMD_DIFF], 0.98 )
        VAR NC_Trim =
            FILTER ( NC_WithDiff, NOT ISBLANK ( [TMD_DIFF] ) && [TMD_DIFF] >= NC_p10 && [TMD_DIFF] <= NC_p98 )

        VAR NC_Avg = DIVIDE ( SUMX ( NC_Trim, [TMD_DIFF] ), COUNTROWS ( NC_Trim ) )

        /* ===== Month m impact (₹) and convert to Cr ===== */
        VAR Uplift_m   = C_Avg - NC_Avg
        VAR ImpactRs_m = Uplift_m * C_Cnt            -- scale uplift by contacted base for month m
        VAR ImpactCr_m = DIVIDE ( ImpactRs_m, 10000000 )
        RETURN COALESCE ( ImpactCr_m, 0 )
    )

RETURN
    IF ( ISBLANK ( ImpactCrTotal ) || ImpactCrTotal <= 0,
        "₹0 Cr",
        "₹" & FORMAT ( ImpactCrTotal, "0.00" ) & " Cr"
    )







Inc_TMD_lift_no_outlier =
VAR Months =
    VALUES ( 'Datedim_msd'[MonthStart] )        -- months currently selected

/* Sum impact across each selected month */
VAR ImpactCrTotal =
    SUMX (
        Months,
        VAR m = 'Datedim_msd'[MonthStart]

        /* -------- Contacted cohort for month m (Customer × Month collapse) -------- */
        VAR ContactedBase =
            CALCULATETABLE (
                'MSD Trigger Conversion',
                KEEPFILTERS ( 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 ),
                KEEPFILTERS ( 'Datedim_msd'[MonthStart] = m )
            )

        VAR Cust_C_ThisMonth =
            ADDCOLUMNS (
                SUMMARIZE (
                    ContactedBase,
                    'MSD Trigger Conversion'[GA_CUST_ID],
                    "Post", MAX ( 'MSD Trigger Conversion'[POST_2_MON_AVG_TMD] ),
                    "Pre",  MAX ( 'MSD Trigger Conversion'[PRE_2_MON_AVG_TMD] )
                ),
                "TMD_DIFF", [Post] - [Pre]
            )

        VAR p10C = PERCENTILEX.INC ( Cust_C_ThisMonth, [TMD_DIFF], 0.02 )
        VAR p98C = PERCENTILEX.INC ( Cust_C_ThisMonth, [TMD_DIFF], 0.98 )
        VAR TrimC =
            FILTER ( Cust_C_ThisMonth, [TMD_DIFF] >= p10C && [TMD_DIFF] <= p98C )

        VAR CntC   = COUNTROWS ( TrimC )
        VAR AvgC   = DIVIDE ( SUMX ( TrimC, [TMD_DIFF] ), CntC )

        /* -------- Non-contacted cohort for month m (Customer × Month collapse) -------- */
        VAR NonContactedBase =
            CALCULATETABLE (
                'MSD Trigger Conversion',
                KEEPFILTERS ( 'MSD Trigger Conversion'[CONTACTED_FLAG] = 0 ),
                KEEPFILTERS ( 'Datedim_msd'[MonthStart] = m )
            )

        VAR Cust_NC_ThisMonth =
            ADDCOLUMNS (
                SUMMARIZE (
                    NonContactedBase,
                    'MSD Trigger Conversion'[GA_CUST_ID],
                    "Post", MAX ( 'MSD Trigger Conversion'[POST_2_MON_AVG_TMD] ),
                    "Pre",  MAX ( 'MSD Trigger Conversion'[PRE_2_MON_AVG_TMD] )
                ),
                "TMD_DIFF", [Post] - [Pre]
            )

        VAR p10NC = PERCENTILEX.INC ( Cust_NC_ThisMonth, [TMD_DIFF], 0.02 )
        VAR p98NC = PERCENTILEX.INC ( Cust_NC_ThisMonth, [TMD_DIFF], 0.98 )
        VAR TrimNC =
            FILTER ( Cust_NC_ThisMonth, [TMD_DIFF] >= p10NC && [TMD_DIFF] <= p98NC )

        VAR AvgNC = DIVIDE ( SUMX ( TrimNC, [TMD_DIFF] ), COUNTROWS ( TrimNC ) )

        /* -------- Month impact and to Crore -------- */
        VAR Uplift_m   = AvgC - AvgNC
        VAR ImpactRs_m = Uplift_m * CntC                     -- scale by contacted base of month m
        VAR ImpactCr_m = DIVIDE ( ImpactRs_m, 10000000 )     -- ₹ to Cr
        RETURN COALESCE ( ImpactCr_m, 0 )
    )

RETURN
    IF (
        ISBLANK ( ImpactCrTotal ) || ImpactCrTotal <= 0,
        "₹0 Cr",
        "₹" & FORMAT ( ImpactCrTotal, "0.00" ) & " Cr"
    )







Inc_TMD_lift_no_outlier =
/* ---------- Build contacted customer–month table ---------- */
VAR ContactedBase =
    CALCULATETABLE (
        'MSD Trigger Conversion',
        KEEPFILTERS ( 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 )
    )

VAR CustMonth_Contacted =
    ADDCOLUMNS (
        SUMMARIZE (
            ContactedBase,
            'Datedim_msd'[MonthStart],
            'MSD Trigger Conversion'[GA_CUST_ID],
            "Post", MAX ( 'MSD Trigger Conversion'[POST_2_MON_AVG_TMD] ),
            "Pre",  MAX ( 'MSD Trigger Conversion'[PRE_2_MON_AVG_TMD] )
        ),
        "TMD_DIFF", [Post] - [Pre]
    )

/* Trim contacted by 2%–98% */
VAR Perc10_C = PERCENTILEX.INC ( CustMonth_Contacted, [TMD_DIFF], 0.02 )
VAR Perc95_C = PERCENTILEX.INC ( CustMonth_Contacted, [TMD_DIFF], 0.98 )
VAR Trimmed_C =
    FILTER ( CustMonth_Contacted, [TMD_DIFF] >= Perc10_C && [TMD_DIFF] <= Perc95_C )

VAR SumDiff_C   = SUMX ( Trimmed_C, [TMD_DIFF] )
VAR Cnt_C       = COUNTROWS ( Trimmed_C )
VAR AvgDiff_C   = DIVIDE ( SumDiff_C, Cnt_C )

/* ---------- Build non-contacted customer–month table ---------- */
VAR NonContactedBase =
    CALCULATETABLE (
        'MSD Trigger Conversion',
        KEEPFILTERS ( 'MSD Trigger Conversion'[CONTACTED_FLAG] = 0 )
    )

VAR CustMonth_NC =
    ADDCOLUMNS (
        SUMMARIZE (
            NonContactedBase,
            'Datedim_msd'[MonthStart],
            'MSD Trigger Conversion'[GA_CUST_ID],
            "Post", MAX ( 'MSD Trigger Conversion'[POST_2_MON_AVG_TMD] ),
            "Pre",  MAX ( 'MSD Trigger Conversion'[PRE_2_MON_AVG_TMD] )
        ),
        "TMD_DIFF", [Post] - [Pre]
    )

/* Trim non-contacted by 2%–98% */
VAR Perc10_NC = PERCENTILEX.INC ( CustMonth_NC, [TMD_DIFF], 0.02 )
VAR Perc95_NC = PERCENTILEX.INC ( CustMonth_NC, [TMD_DIFF], 0.98 )
VAR Trimmed_NC =
    FILTER ( CustMonth_NC, [TMD_DIFF] >= Perc10_NC && [TMD_DIFF] <= Perc95_NC )

VAR SumDiff_NC = SUMX ( Trimmed_NC, [TMD_DIFF] )
VAR Cnt_NC     = COUNTROWS ( Trimmed_NC )
VAR AvgDiff_NC = DIVIDE ( SumDiff_NC, Cnt_NC )

/* ---------- Uplift and Impact ---------- */
VAR Uplift      = AvgDiff_C - AvgDiff_NC
VAR ImpactRs    = Uplift * Cnt_C                      -- apply uplift to contacted base
VAR ImpactCr    = DIVIDE ( ImpactRs, 10000000 )       -- convert to Crore

RETURN
    IF (
        ISBLANK ( ImpactCr ),
        "₹0 Cr",
        "₹" & FORMAT ( MAX ( ImpactCr, 0 ), "0.00" ) & " Cr"
    )










ABSOLUTE CASA =
VAR BaseTable =
    CALCULATETABLE (
        'MSD Trigger Conversion',
        KEEPFILTERS ( 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 )
    )

-- Collapse to Customer × Month and take one value per customer-month
VAR CustMonthAgg =
    SUMMARIZE (
        BaseTable,
        'Datedim_msd'[MonthStart],
        'MSD Trigger Conversion'[GA_CUST_ID],
        "Post", MAX ( 'MSD Trigger Conversion'[POST_2_MON_AVG_CASA] ),
        "Pre",  MAX ( 'MSD Trigger Conversion'[PRE_2_MON_AVG_CASA] )
    )

-- Sum of (Post - Pre) over selected months
VAR RawDiff = SUMX ( CustMonthAgg, [Post] - [Pre] )
VAR DiffCr  = DIVIDE ( RawDiff, 10000000 )

RETURN
    IF (
        ISBLANK ( DiffCr ) || DiffCr <= 0,
        "₹0 Cr",
        "₹" & FORMAT ( DiffCr, "0.00" ) & " Cr"
    )








KYC =
VAR BaseTable =
    CALCULATETABLE (
        'MSD Trigger Conversion',
        KEEPFILTERS ( 'MSD Trigger Conversion'[Contacted_Flag] = 1 )
    )

-- Collapse to Customer × Month and take one value per customer-month
VAR CustMonthAgg =
    SUMMARIZE (
        BaseTable,
        'Datedim_msd'[MonthStart],
        'MSD Trigger Conversion'[GA_CUST_ID],
        "Val", MAX ( 'MSD Trigger Conversion'[KYC_ACTIVATION] )
    )

VAR Result = SUMX ( CustMonthAgg, [Val] )
RETURN IF ( Result <= 0, 0, Result )






Xsell Product Gain =
VAR SelectedProduct =
    SELECTEDVALUE ( 'PRODUCT SELECTOR'[Metric] )

/* pick the product-specific Gain measure */
VAR RawValueAny =
    SWITCH (
        SelectedProduct,
        "TMD",        CALCULATE ( [TMD Gain] ),
        "INV",        CALCULATE ( [Inv Gain] ),
        "LI/GI",      CALCULATE ( [Ins Gain] ),
        "PIL",        CALCULATE ( [PIL Gain] ),
        "CARD",       CALCULATE ( [CARD Gain] ),
        "AIF/PMS",    CALCULATE ( [AIF_PMS Gain] ),
        "HML",        CALCULATE ( [HML Gain] ),
        "PREM CARD",  CALCULATE ( [PREMIER CARD Gain] ),
        BLANK ()
    )

/* ensure we have a numeric value in Crore even if source is already "₹… Cr" text */
VAR RawValueNum =
    IF (
        ISNUMBER ( RawValueAny ),
        RawValueAny,
        VAR Stripped1 = SUBSTITUTE ( RawValueAny, "₹", "" )
        VAR Stripped2 = SUBSTITUTE ( Stripped1, " Cr", "" )
        RETURN VALUE ( Stripped2 )
    )

VAR FinalValue = IF ( ISBLANK ( RawValueNum ) || RawValueNum <= 0, 0, RawValueNum )

RETURN
    "₹" & FORMAT ( FinalValue, "0.00" ) & " Cr"








TMD Gain =
/* Base under current report context */
VAR BaseAll =
    CALCULATETABLE ( 'MSD Trigger Conversion' )

/* Contacted vs Not Contacted splits */
VAR ContactedBase =
    FILTER ( BaseAll, 'MSD Trigger Conversion'[Contacted_Flag] = 1 )
VAR NotContactedBase =
    FILTER ( BaseAll, 'MSD Trigger Conversion'[Contacted_Flag] = 0 )

/* Customer × Month collapse */
VAR CustMonth_Contacted =
    SUMMARIZE (
        ContactedBase,
        'Datedim_msd'[MonthStart],
        'MSD Trigger Conversion'[GA_CUST_ID],
        "Cnt", MAX ( 'MSD Trigger Conversion'[TMD_SALES_COUNT] ),
        "Val", MAX ( 'MSD Trigger Conversion'[TMD_SALES_VALUE] )
    )

VAR CustMonth_NotContacted =
    SUMMARIZE (
        NotContactedBase,
        'Datedim_msd'[MonthStart],
        'MSD Trigger Conversion'[GA_CUST_ID],
        "Cnt", MAX ( 'MSD Trigger Conversion'[TMD_SALES_COUNT] )
    )

/* Conversions */
VAR ContactedSales    = SUMX ( CustMonth_Contacted, [Cnt] )
VAR TotalContacted    = COUNTROWS ( CustMonth_Contacted )

VAR NotContactedSales = SUMX ( CustMonth_NotContacted, [Cnt] )
VAR TotalNotContacted = COUNTROWS ( CustMonth_NotContacted )

VAR A = DIVIDE ( ContactedSales,    TotalContacted )
VAR B = DIVIDE ( NotContactedSales, TotalNotContacted )
VAR Uplift = A - B

/* Avg Cross-sell Value */
VAR CrossSaleValue_Contacted = SUMX ( CustMonth_Contacted, [Val] )
VAR CrossSaleCount_Contacted = SUMX ( CustMonth_Contacted, [Cnt] )
VAR AvgXsellPerCustomer      = DIVIDE ( CrossSaleValue_Contacted, CrossSaleCount_Contacted )

/* Final Impact in Crore */
VAR FinalImpact   = Uplift * AvgXsellPerCustomer * TotalContacted
VAR FinalImpactCr = DIVIDE ( FinalImpact, 10000000 )

RETURN
    IF (
        ISBLANK ( FinalImpactCr ) || FinalImpactCr <= 0,
        "₹0 Cr",
        "₹" & FORMAT ( FinalImpactCr, "0.00" ) & " Cr"
    )







TMD Gain =
/* Base under current report context (KM/Region, Month slicer, etc.) */
VAR BaseAll :=
    CALCULATETABLE ( 'MSD Trigger Conversion' )

/* Split by contact status */
VAR ContactedBase :=
    FILTER ( BaseAll, 'MSD Trigger Conversion'[Contacted_Flag] = 1 )
VAR NotContactedBase :=
    FILTER ( BaseAll, 'MSD Trigger Conversion'[Contacted_Flag] = 0 )

/* ---- Customer × Month collapse (take MAX at that grain) ---- */
VAR CustMonth_Contacted :=
    SUMMARIZE (
        ContactedBase,
        'Datedim_msd'[MonthStart],
        'MSD Trigger Conversion'[GA_CUST_ID],
        "Cnt",   MAX ( 'MSD Trigger Conversion'[TMD_SALES_COUNT] ),
        "Val",   MAX ( 'MSD Trigger Conversion'[TMD_SALES_VALUE] )
    )

VAR CustMonth_NotContacted :=
    SUMMARIZE (
        NotContactedBase,
        'Datedim_msd'[MonthStart],
        'MSD Trigger Conversion'[GA_CUST_ID],
        "Cnt",   MAX ( 'MSD Trigger Conversion'[TMD_SALES_COUNT] )
    )

/* ---- Conversions (A for contacted, B for not-contacted) ---- */
VAR ContactedSales     = SUMX ( CustMonth_Contacted, [Cnt] )
VAR TotalContacted     = COUNTROWS ( CustMonth_Contacted )

VAR NotContactedSales  = SUMX ( CustMonth_NotContacted, [Cnt] )
VAR TotalNotContacted  = COUNTROWS ( CustMonth_NotContacted )

VAR A = DIVIDE ( ContactedSales,    TotalContacted )
VAR B = DIVIDE ( NotContactedSales, TotalNotContacted )
VAR Uplift = A - B

/* ---- Avg x-sell value (₹ per sale) from contacted cohort ---- */
VAR CrossSaleValue_Contacted = SUMX ( CustMonth_Contacted, [Val] )
VAR CrossSaleCount_Contacted = SUMX ( CustMonth_Contacted, [Cnt] )
VAR AvgXsellPerCustomer = DIVIDE ( CrossSaleValue_Contacted, CrossSaleCount_Contacted )

/* ---- Final impact ---- */
VAR FinalImpact   = Uplift * AvgXsellPerCustomer * TotalContacted
VAR FinalImpactCr = DIVIDE ( FinalImpact, 10000000 )

RETURN
    COALESCE ( FinalImpactCr, 0 )









Xsell Product Sales Value Cr =
VAR SelectedProduct =
    SELECTEDVALUE ( 'PRODUCT SELECTOR'[Metric] )

/* Keep only contacted rows */
VAR BaseTable =
    CALCULATETABLE (
        'MSD Trigger Conversion',
        KEEPFILTERS ( 'MSD Trigger Conversion'[Contacted_Flag] = 1 )
    )

/* Collapse to Customer × Month with MAX value at that grain */
VAR CustMonthAgg =
    SUMMARIZE (
        BaseTable,
        'Datedim_msd'[MonthStart],
        'MSD Trigger Conversion'[Customer_ID],
        "Val",
            SWITCH (
                TRUE(),
                SelectedProduct = "TMD",
                    MAX ( 'MSD Trigger Conversion'[TMD_SALES_VALUE] ),
                SelectedProduct = "INV",
                    MAX ( 'MSD Trigger Conversion'[INV_SALES_VALUE] ),
                SelectedProduct = "LI/GI",
                    MAX ( 'MSD Trigger Conversion'[LI_GI_SALES_VALUE] ),
                SelectedProduct = "PIL",
                    MAX ( 'MSD Trigger Conversion'[PIL_SALES_VALUE] ),
                SelectedProduct = "AIF/PMS",
                    MAX ( 'MSD Trigger Conversion'[AIF_PMS_SALES_VALUE] ),
                SelectedProduct = "HML",
                    MAX ( 'MSD Trigger Conversion'[HML_SALES_VALUE] ),
                SelectedProduct = "CARD",
                    MAX ( 'MSD Trigger Conversion'[CARD_SALES_VALUE] ),
                SelectedProduct = "PREM CARD",
                    MAX ( 'MSD Trigger Conversion'[PREMIER_CARD_SALES_VALUE] ),
                0
            )
    )

/* Sum across the selected months (e.g., June + July) */
VAR RawValue = SUMX ( CustMonthAgg, [Val] )

/* Convert to Crore */
VAR FinalValue = DIVIDE ( RawValue, 10000000 )

RETURN
    IF (
        ISBLANK ( FinalValue ) || FinalValue <= 0,
        "₹0 Cr",
        "₹" & FORMAT ( FinalValue, "0.00" ) & " Cr"
    )






Xsell Product Sales Count =
VAR SelectedProduct =
    SELECTEDVALUE ( 'PRODUCT SELECTOR'[Metric] )

/* respect current slicers (month, region, etc.) and keep only contacted rows */
VAR BaseTable :=
    CALCULATETABLE (
        'MSD Trigger Conversion',
        KEEPFILTERS ( 'MSD Trigger Conversion'[Contacted_Flag] = 1 )
    )

/* build a Customer x Month table and take MAX at that grain */
VAR CustMonthAgg :=
    SUMMARIZE (
        BaseTable,
        'Datedim_msd'[MonthStart],
        'MSD Trigger Conversion'[Customer_ID],
        "Val",
            SWITCH (
                TRUE (),
                SelectedProduct = "TMD",
                    MAX ( 'MSD Trigger Conversion'[TMD_SALES_COUNT] ),
                SelectedProduct = "INV",
                    MAX ( 'MSD Trigger Conversion'[INV_SALES_COUNT] ),
                SelectedProduct = "LI/GI",
                    MAX ( 'MSD Trigger Conversion'[LI_GI_SALES_COUNT] ),
                SelectedProduct = "PIL",
                    MAX ( 'MSD Trigger Conversion'[PIL_SALES_COUNT] ),
                SelectedProduct = "AIF/PMS",
                    MAX ( 'MSD Trigger Conversion'[AIF_PMS_SALES_COUNT] ),
                SelectedProduct = "HML",
                    MAX ( 'MSD Trigger Conversion'[HML_SALES_COUNT] ),
                SelectedProduct = "CARD",
                    MAX ( 'MSD Trigger Conversion'[CARD_SALES_COUNT] ),
                SelectedProduct = "PREM CARD",
                    MAX ( 'MSD Trigger Conversion'[PREMIER_CARD_SALES_COUNT] ),
                0
            )
    )

RETURN
IF (
    ISBLANK ( SelectedProduct ),
    BLANK (),
    /* sum the customer-month maxima across the months currently selected (e.g., June + July) */
    VAR Result = SUMX ( CustMonthAgg, [Val] )
    RETURN IF ( Result <= 0, 0, Result )
)





Inc_TMD_Lift_no_outlier :=
VAR pLow  = 0.02   -- bottom 2%
VAR pHigh = 0.98   -- top 98%

/* 1) Make customer × month table (dedupe per month with MAX) */
VAR CustMonth =
    SUMMARIZE (
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[GA_CUST_ID],
        'DateDim_MSD'[MonthStart],                     -- month comes from date dim
        "Contacted", MAX ( 'MSD Trigger Conversion'[CONTACTED_FLAG] ),
        "PostTMD",  MAX ( 'MSD Trigger Conversion'[POST_2_MON_AVG_TMD] ),
        "PreTMD",   MAX ( 'MSD Trigger Conversion'[PRE_2_MON_AVG_TMD] )
    )

/* 2) Add per-row diff at this grain */
VAR WithDiff = ADDCOLUMNS ( CustMonth, "TMD_DIFF", [PostTMD] - [PreTMD] )

/* 3) Compute lift per month, then sum across selected months */
VAR TotalLift :=
    SUMX (
        VALUES ( 'DateDim_MSD'[MonthStart] ),
        VAR m = 'DateDim_MSD'[MonthStart]
        VAR MonthTbl = FILTER ( WithDiff, 'DateDim_MSD'[MonthStart] = m )

        /* ----- Contacted ----- */
        VAR C_Tbl   = FILTER ( MonthTbl, [Contacted] = 1 )
        VAR C_Low   = PERCENTILEX.INC ( C_Tbl, [TMD_DIFF], pLow )
        VAR C_High  = PERCENTILEX.INC ( C_Tbl, [TMD_DIFF], pHigh )
        VAR C_Trim  = FILTER ( C_Tbl, [TMD_DIFF] >= C_Low && [TMD_DIFF] <= C_High )
        VAR C_Sum   = SUMX ( C_Trim, [TMD_DIFF] )
        VAR C_Cnt   = COUNTROWS ( C_Trim )
        VAR C_Avg   = DIVIDE ( C_Sum, C_Cnt )

        /* scale by total contacted customers in that month (untrimmed, customer×month) */
        VAR ContactedCount = COUNTROWS ( C_Tbl )

        /* ----- Non-Contacted ----- */
        VAR NC_Tbl   = FILTER ( MonthTbl, [Contacted] <> 1 )
        VAR NC_Low   = PERCENTILEX.INC ( NC_Tbl, [TMD_DIFF], pLow )
        VAR NC_High  = PERCENTILEX.INC ( NC_Tbl, [TMD_DIFF], pHigh )
        VAR NC_Trim  = FILTER ( NC_Tbl, [TMD_DIFF] >= NC_Low && [TMD_DIFF] <= NC_High )
        VAR NC_Sum   = SUMX ( NC_Trim, [TMD_DIFF] )
        VAR NC_Cnt   = COUNTROWS ( NC_Trim )
        VAR NC_Avg   = DIVIDE ( NC_Sum, NC_Cnt )

        /* month lift (matches your Result block style) */
        VAR MonthLift =
            IF ( ContactedCount <> 0, MAX ( 0, C_Avg - NC_Avg ) * ContactedCount )

        RETURN MonthLift
    )

RETURN TotalLift







Inc_TMD_Lift_NoOutlier :=
VAR pLow  = 0.02     -- 2nd percentile
VAR pHigh = 0.98     -- 98th percentile

-- 1) Collapse to customer × month
VAR CustMonth =
    SUMMARIZE (
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[GA_CUST_ID],
        'DateDim_MSD'[MonthStart],
        "Contacted", MAX ( 'MSD Trigger Conversion'[CONTACTED_FLAG] ),
        "PostTMD",  MAX ( 'MSD Trigger Conversion'[POST_2_MON_AVG_TMD] ),
        "PreTMD",   MAX ( 'MSD Trigger Conversion'[PRE_2_MON_AVG_TMD] )
    )

-- 2) Add difference column
VAR WithDiff =
    ADDCOLUMNS ( CustMonth, "TMD_DIFF", [PostTMD] - [PreTMD] )

-- 3) Compute lift month by month
VAR ResultPerMonthSum =
    SUMX (
        VALUES ( 'DateDim_MSD'[MonthStart] ),
        VAR m = 'DateDim_MSD'[MonthStart]
        VAR MonthTbl = FILTER ( WithDiff, 'DateDim_MSD'[MonthStart] = m )

        /* Contacted */
        VAR C_Tbl = FILTER ( MonthTbl, [Contacted] = 1 )
        VAR PercLow_C  = PERCENTILEX.INC ( C_Tbl, [TMD_DIFF], pLow )
        VAR PercHigh_C = PERCENTILEX.INC ( C_Tbl, [TMD_DIFF], pHigh )
        VAR Trim_C = FILTER ( C_Tbl, [TMD_DIFF] >= PercLow_C && [TMD_DIFF] <= PercHigh_C )
        VAR Sum_C = SUMX ( Trim_C, [TMD_DIFF] )
        VAR Cnt_C = COUNTROWS ( Trim_C )
        VAR Avg_C = DIVIDE ( Sum_C, Cnt_C )

        /* Non-contacted */
        VAR NC_Tbl = FILTER ( MonthTbl, [Contacted] <> 1 )
        VAR PercLow_NC  = PERCENTILEX.INC ( NC_Tbl, [TMD_DIFF], pLow )
        VAR PercHigh_NC = PERCENTILEX.INC ( NC_Tbl, [TMD_DIFF], pHigh )
        VAR Trim_NC = FILTER ( NC_Tbl, [TMD_DIFF] >= PercLow_NC && [TMD_DIFF] <= PercHigh_NC )
        VAR Sum_NC = SUMX ( Trim_NC, [TMD_DIFF] )
        VAR Cnt_NC = COUNTROWS ( Trim_NC )
        VAR Avg_NC = DIVIDE ( Sum_NC, Cnt_NC )

        /* Use total contacted count (untrimmed) for scaling */
        VAR ContactedCount = COUNTROWS ( C_Tbl )

        /* Month-level Lift */
        VAR MonthLift =
            IF ( ContactedCount > 0, ( MAX ( 0, Avg_C - Avg_NC ) ) * ContactedCount )
        RETURN MonthLift
    )

-- 4) Return final lift across selected months
RETURN ResultPerMonthSum







Inc_TRB_Lift_NoOutlier :=
VAR pLow  = 0.002     -- bottom 0.2%
VAR pHigh = 0.998     -- top 99.8%

-- Step 1: Collapse to customer × month
VAR CustMonth =
    SUMMARIZE (
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[GA_CUST_ID],
        'Day Dim MSD'[Month Start],
        "Contacted", MAX ( 'MSD Trigger Conversion'[CONTACTED_FLAG] ),
        "PostTRB",  MAX ( 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB] ),
        "PreTRB",   MAX ( 'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] )
    )

-- Step 2: Add TRB difference
VAR WithDiff =
    ADDCOLUMNS ( CustMonth, "TRB_Diff", [PostTRB] - [PreTRB] )

-- Step 3: Iterate month-by-month
VAR ResultPerMonthSum =
    SUMX (
        VALUES ( 'Day Dim MSD'[Month Start] ),
        VAR m = 'Day Dim MSD'[Month Start]
        VAR MonthTbl = FILTER ( WithDiff, 'Day Dim MSD'[Month Start] = m )

        /* Contacted group */
        VAR C_Tbl = FILTER ( MonthTbl, [Contacted] = 1 )
        VAR C_Low  = PERCENTILEX.INC ( C_Tbl, [TRB_Diff], pLow )
        VAR C_High = PERCENTILEX.INC ( C_Tbl, [TRB_Diff], pHigh )
        VAR C_Trim =
            FILTER ( C_Tbl, [TRB_Diff] >= C_Low && [TRB_Diff] <= C_High )
        VAR C_TrimCnt = COUNTROWS ( C_Trim )
        VAR C_AvgDiff = DIVIDE ( SUMX ( C_Trim, [TRB_Diff] ), C_TrimCnt )

        /* Non-contacted group */
        VAR NC_Tbl = FILTER ( MonthTbl, [Contacted] <> 1 )
        VAR NC_Low  = PERCENTILEX.INC ( NC_Tbl, [TRB_Diff], pLow )
        VAR NC_High = PERCENTILEX.INC ( NC_Tbl, [TRB_Diff], pHigh )
        VAR NC_Trim =
            FILTER ( NC_Tbl, [TRB_Diff] >= NC_Low && [TRB_Diff] <= NC_High )
        VAR NC_AvgDiff = DIVIDE ( SUMX ( NC_Trim, [TRB_Diff] ), COUNTROWS ( NC_Trim ) )

        /* Month-level Lift */
        VAR MonthLift =
            IF ( C_TrimCnt > 0, ( C_AvgDiff - NC_AvgDiff ) * C_TrimCnt )
        RETURN MonthLift
    )

-- Step 4: Return final lift across all selected months
RETURN ResultPerMonthSum






Inc_TRB_Lift_NoOutlier :=
VAR SummaryTable =
    SUMMARIZE (
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[GA_CUST_ID],
        'Day Dim MSD'[Month Start],
        "PostTRB", MAX ( 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB] ),
        "PreTRB",  MAX ( 'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] ),
        "Contacted", MAX ( 'MSD Trigger Conversion'[CONTACTED_FLAG] ),
        "TRB_Diff", MAX ( 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB] )
                     - MAX ( 'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] )
    )

-- Contacted customers: trim outliers
VAR ContactedTable = FILTER ( SummaryTable, [Contacted] = 1 )
VAR Pct_Low_C = PERCENTILEX.INC ( ContactedTable, [TRB_Diff], 0.002 )
VAR Pct_High_C = PERCENTILEX.INC ( ContactedTable, [TRB_Diff], 0.998 )
VAR Trimmed_C =
    FILTER ( ContactedTable,
        [TRB_Diff] >= Pct_Low_C
        && [TRB_Diff] <= Pct_High_C
    )
VAR Avg_C = DIVIDE ( SUMX ( Trimmed_C, [TRB_Diff] ), COUNTROWS ( Trimmed_C ) )
VAR Count_C = COUNTROWS ( Trimmed_C )

-- Non-contacted customers: trim outliers
VAR NonContactedTable = FILTER ( SummaryTable, [Contacted] <> 1 )
VAR Pct_Low_NC = PERCENTILEX.INC ( NonContactedTable, [TRB_Diff], 0.002 )
VAR Pct_High_NC = PERCENTILEX.INC ( NonContactedTable, [TRB_Diff], 0.998 )
VAR Trimmed_NC =
    FILTER ( NonContactedTable,
        [TRB_Diff] >= Pct_Low_NC
        && [TRB_Diff] <= Pct_High_NC
    )
VAR Avg_NC = DIVIDE ( SUMX ( Trimmed_NC, [TRB_Diff] ), COUNTROWS ( Trimmed_NC ) )

-- Final Lift
RETURN
IF (
    Count_C > 0,
    ( Avg_C - Avg_NC ) * Count_C
)






Inc TRB Lift :=
VAR SummaryTable =
    SUMMARIZE (
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[GA_CUST_ID],
        'Day Dim MSD'[Month Start],
        "PostTRB", MAX ( 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB] ),
        "PreTRB",  MAX ( 'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] ),
        "Contacted", MAX ( 'MSD Trigger Conversion'[CONTACTED_FLAG] )
    )

VAR A_Post =
    DIVIDE(
        SUMX ( FILTER ( SummaryTable, [Contacted] = 1 ), [PostTRB] ),
        COUNTROWS ( FILTER ( SummaryTable, [Contacted] = 1 ) )
    )
VAR A_Pre  =
    DIVIDE(
        SUMX ( FILTER ( SummaryTable, [Contacted] = 1 ), [PreTRB] ),
        COUNTROWS ( FILTER ( SummaryTable, [Contacted] = 1 ) )
    )
VAR A = A_Post - A_Pre

VAR B_Post =
    DIVIDE(
        SUMX ( FILTER ( SummaryTable, [Contacted] <> 1 ), [PostTRB] ),
        COUNTROWS ( FILTER ( SummaryTable, [Contacted] <> 1 ) )
    )
VAR B_Pre  =
    DIVIDE(
        SUMX ( FILTER ( SummaryTable, [Contacted] <> 1 ), [PreTRB] ),
        COUNTROWS ( FILTER ( SummaryTable, [Contacted] <> 1 ) )
    )
VAR B = B_Post - B_Pre

VAR ContactedCount =
    COUNTROWS ( FILTER ( SummaryTable, [Contacted] = 1 ) )

RETURN IF ( ContactedCount > 0, (A - B) * ContactedCount )







Inc TRB Lift :=
VAR SummaryTable =
    SUMMARIZE (
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[GA_CUST_ID],
        'Day Dim MSD'[Month Start],  -- bring Month Start from date table
        "PostTRB", MAX ( 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB] ),
        "PreTRB",  MAX ( 'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] ),
        "Contacted", MAX ( 'MSD Trigger Conversion'[CONTACTED_FLAG] )
    )

-- Variable A: Contacted
VAR A_Post =
    CALCULATE ( AVERAGE ( [PostTRB] ), FILTER ( SummaryTable, [Contacted] = 1 ) )
VAR A_Pre =
    CALCULATE ( AVERAGE ( [PreTRB] ),  FILTER ( SummaryTable, [Contacted] = 1 ) )
VAR A = A_Post - A_Pre

-- Variable B: Non-Contacted
VAR B_Post =
    CALCULATE ( AVERAGE ( [PostTRB] ), FILTER ( SummaryTable, [Contacted] <> 1 ) )
VAR B_Pre =
    CALCULATE ( AVERAGE ( [PreTRB] ),  FILTER ( SummaryTable, [Contacted] <> 1 ) )
VAR B = B_Post - B_Pre

-- Distinct contacted customers
VAR ContactedCount =
    CALCULATE (
        DISTINCTCOUNT ( 'MSD Trigger Conversion'[GA_CUST_ID] ),
        FILTER ( SummaryTable, [Contacted] = 1 )
    )

RETURN
IF ( ContactedCount > 0, ( A - B ) * ContactedCount )









Inc TRB Lift :=
VAR SelMonths =
    VALUES ( 'Date'[Month Start] )

VAR SummaryTable =
    SUMMARIZE (
        CALCULATETABLE (
            'MSD Trigger Conversion',
            TREATAS ( SelMonths, 'MSD Trigger Conversion'[MONTH_START] )
        ),
        'MSD Trigger Conversion'[GA_CUST_ID],
        'MSD Trigger Conversion'[MONTH_START],
        "PostTRB", MAX ( 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB] ),
        "PreTRB",  MAX ( 'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] ),
        "Contacted", MAX ( 'MSD Trigger Conversion'[CONTACTED_FLAG] )
    )

-- Variable A: contacted customers
VAR A_Post =
    CALCULATE ( AVERAGE ( [PostTRB] ), FILTER ( SummaryTable, [Contacted] = 1 ) )
VAR A_Pre  =
    CALCULATE ( AVERAGE ( [PreTRB] ),  FILTER ( SummaryTable, [Contacted] = 1 ) )
VAR A = A_Post - A_Pre

-- Variable B: non-contacted customers
VAR B_Post =
    CALCULATE ( AVERAGE ( [PostTRB] ), FILTER ( SummaryTable, [Contacted] <> 1 ) )
VAR B_Pre  =
    CALCULATE ( AVERAGE ( [PreTRB] ),  FILTER ( SummaryTable, [Contacted] <> 1 ) )
VAR B = B_Post - B_Pre

-- Denominator: distinct contacted customers
VAR ContactedCount =
    CALCULATE (
        DISTINCTCOUNT ( 'MSD Trigger Conversion'[GA_CUST_ID] ),
        FILTER ( SummaryTable, [Contacted] = 1 )
    )

RETURN
IF ( ContactedCount > 0, ( A - B ) * ContactedCount )








Inc TRB Lift :=
VAR SelMonths =
    VALUES ( 'Date'[Month Start] )   -- picks June, July, or both

-- Step 1: collapse to unique customer × month
VAR SummaryTable =
    SUMMARIZE (
        CALCULATETABLE (
            'MSD Trigger Conversion',
            TREATAS ( SelMonths, 'MSD Trigger Conversion'[MONTH_START] )
        ),
        'MSD Trigger Conversion'[GA_CUST_ID],
        'MSD Trigger Conversion'[MONTH_START],
        "PostTRB", MAX ( 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB] ),
        "PreTRB",  MAX ( 'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] ),
        "Contacted", MAX ( 'MSD Trigger Conversion'[CONTACTED_FLAG] )
    )

-- Step 2: Variable A (Contacted customers)
VAR A =
    CALCULATE (
        AVERAGEX ( VALUES ( 'MSD Trigger Conversion'[MONTH_START] ),
            AVERAGE ( FILTER ( SummaryTable, [Contacted] = 1 )[PostTRB] )
            - 
            AVERAGE ( FILTER ( SummaryTable, [Contacted] = 1 )[PreTRB] )
        )
    )

-- Step 3: Variable B (Non-contacted customers)
VAR B =
    CALCULATE (
        AVERAGEX ( VALUES ( 'MSD Trigger Conversion'[MONTH_START] ),
            AVERAGE ( FILTER ( SummaryTable, [Contacted] <> 1 )[PostTRB] )
            - 
            AVERAGE ( FILTER ( SummaryTable, [Contacted] <> 1 )[PreTRB] )
        )
    )

-- Step 4: Denominator = distinct contacted customers
VAR ContactedCount =
    CALCULATE (
        DISTINCTCOUNT ( 'MSD Trigger Conversion'[GA_CUST_ID] ),
        FILTER ( SummaryTable, [Contacted] = 1 )
    )

RETURN
IF (
    ContactedCount > 0,
    ( A - B ) * ContactedCount
)







Inc TRB Lift :=
VAR SelMonths =
    VALUES ( 'Date'[Month Start] )   -- slicer from Date table

VAR SummaryTable =
    SUMMARIZE (
        CALCULATETABLE (
            'MSD Trigger Conversion',
            TREATAS ( SelMonths, 'MSD Trigger Conversion'[MONTH_START] )
        ),
        'MSD Trigger Conversion'[GA_CUST_ID],
        'MSD Trigger Conversion'[MONTH_START],
        "PostTRB", MAX ( 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB] ),
        "PreTRB",  MAX ( 'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] ),
        "Contacted", MAX ( 'MSD Trigger Conversion'[CONTACTED_FLAG] )
    )

VAR A =
    CALCULATE (
        AVERAGE ( [PostTRB] - [PreTRB] ),
        FILTER ( SummaryTable, [Contacted] = 1 )
    )

VAR B =
    CALCULATE (
        AVERAGE ( [PostTRB] - [PreTRB] ),
        FILTER ( SummaryTable, [Contacted] <> 1 )
    )

VAR ContactedCount =
    COUNTROWS ( FILTER ( SummaryTable, [Contacted] = 1 ) )

RETURN
IF (
    ContactedCount > 0,
    "₹ " &
    FORMAT ( MAX ( 0, ( A - B ) * ContactedCount ) / 10000000, "0.00" ) & " Cr"
)








Inc TRB Lift :=
VAR SummaryTable =
    SUMMARIZE(
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[GA_CUST_ID],
        'MSD Trigger Conversion'[MONTH_START],    -- your month field
        "PostTRB", MAX('MSD Trigger Conversion'[POST_2_MON_AVG_TRB]),
        "PreTRB",  MAX('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB]),
        "Contacted", MAX('MSD Trigger Conversion'[CONTACTED_FLAG])
    )

VAR A =
    CALCULATE(
        AVERAGE([PostTRB]) - AVERAGE([PreTRB]),
        FILTER(SummaryTable, [Contacted] = 1)
    )

VAR B =
    CALCULATE(
        AVERAGE([PostTRB]) - AVERAGE([PreTRB]),
        FILTER(SummaryTable, [Contacted] <> 1)
    )

VAR ContactedCount =
    CALCULATE(
        COUNTROWS(SummaryTable),
        FILTER(SummaryTable, [Contacted] = 1)
    )

RETURN
IF(
    ContactedCount > 0,
    "₹ " &
    FORMAT(
        MAX(0, (A - B) * ContactedCount / 10000000),
        "0.00"
    ) & " Cr"
)









Inc TRB Lift (num) :=
VAR SummaryTable =
    SUMMARIZE(
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[GA_CUST_ID],
        'MSD Trigger Conversion'[MONTH_START],          -- month grain
        "PostTRB", MAX('MSD Trigger Conversion'[POST_2_MON_AVG_TRB]),
        "PreTRB",  MAX('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB]),
        "Contacted", MAX('MSD Trigger Conversion'[CONTACTED_FLAG])
    )
VAR A =
    AVERAGEX(
        FILTER(SummaryTable, [Contacted] = 1),
        [PostTRB] - [PreTRB]
    )
VAR B =
    AVERAGEX(
        FILTER(SummaryTable, [Contacted] <> 1),
        [PostTRB] - [PreTRB]
    )
VAR ContactedCount =
    COUNTROWS( FILTER(SummaryTable, [Contacted] = 1) )
RETURN
IF( ContactedCount > 0, MAX(0, (A - B)) * ContactedCount )













Hi Souvik and Gennari,

Like every month, we’re again hitting a storage bottleneck that blocks our digital code runs. The two key datasets involved are large—~200+ GB and ~100+ GB—and the available space keeps getting exhausted mid-run. As a result, I’m repeatedly freeing space and re-running jobs, but by the time they progress, the space is occupied again. This is turning a simple scheduled run into multiple retries and delays.

Impact
	•	Monthly processing is delayed or fails due to insufficient space.
	•	Execution has to be restarted multiple times, increasing run time and operational effort.
	•	Downstream visibility and timelines slip.

Request
	1.	Provision additional disk space (persistent) sufficient to accommodate at least ~350–400 GB working headroom for these runs.
	2.	If persistent expansion isn’t possible immediately, please provide a temporary quota increase or a dedicated high-capacity scratch/work area for this month’s cycle.
	3.	(Optional but helpful) Set up an automated cleanup/retention policy for stale temp files in our workspace so reclaimed space stays available during the run window.

Timing
We need this before the upcoming monthly execution window so the code can complete on time without repeated restarts.

Please confirm the feasible option and ETA so I can align the run schedule.











TPPC Change :=
VAR PerMonth =
    SUMMARIZECOLUMNS (
        'DateDim_MSD'[MonthStart],

        /* PostAvg (per month) = average across DISTINCT customers of MAX(Post_TPPC) */
        "PostAvg",
            VAR CustsPost =
                CALCULATETABLE (
                    VALUES ( 'MSD Trigger Conversion'[GA_CUST_ID] ),
                    'MSD Trigger Conversion'[Contacted_Flag] = 1
                )
            RETURN
                DIVIDE (
                    SUMX ( CustsPost, CALCULATE ( MAX ( 'MSD Trigger Conversion'[Post_TPPC] ) ) ),
                    COUNTROWS ( CustsPost )
                ),

        /* PreAvg (per month) = average across DISTINCT customers of MAX(PRE_TPPC) */
        "PreAvg",
            VAR CustsPre =
                CALCULATETABLE (
                    VALUES ( 'MSD Trigger Conversion'[GA_CUST_ID] ),
                    'MSD Trigger Conversion'[Contacted_Flag] = 1
                )
            RETURN
                DIVIDE (
                    SUMX ( CustsPre, CALCULATE ( MAX ( 'MSD Trigger Conversion'[PRE_TPPC] ) ) ),
                    COUNTROWS ( CustsPre )
                )
    )

/* Average across the selected months (no AVERAGEX used) */
VAR AvgPostAcrossMonths = DIVIDE ( SUMX ( PerMonth, [PostAvg] ), COUNTROWS ( PerMonth ) )
VAR AvgPreAcrossMonths  = DIVIDE ( SUMX ( PerMonth, [PreAvg] ),  COUNTROWS ( PerMonth ) )
VAR DiffAvg             = AvgPostAcrossMonths - AvgPreAcrossMonths
VAR PctAvg              = DIVIDE ( DiffAvg, AvgPreAcrossMonths )

RETURN
IF (
    ISINSCOPE ( 'DateDim_MSD'[MonthStart] ),
    /* Month on axis → compute for that single month only */
    VAR Custs1 =
        CALCULATETABLE (
            VALUES ( 'MSD Trigger Conversion'[GA_CUST_ID] ),
            'MSD Trigger Conversion'[Contacted_Flag] = 1
        )
    VAR Post1 =
        DIVIDE (
            SUMX ( Custs1, CALCULATE ( MAX ( 'MSD Trigger Conversion'[Post_TPPC] ) ) ),
            COUNTROWS ( Custs1 )
        )
    VAR Pre1 =
        DIVIDE (
            SUMX ( Custs1, CALCULATE ( MAX ( 'MSD Trigger Conversion'[PRE_TPPC] ) ) ),
            COUNTROWS ( Custs1 )
        )
    VAR Diff1 = Post1 - Pre1
    VAR Pct1  = DIVIDE ( Diff1, Pre1 )
    RETURN FORMAT ( Diff1, "0.0#" ) & " (" & FORMAT ( Pct1, "0.0%" ) & " )",
    /* No month on axis → average of the monthly values */
    FORMAT ( DiffAvg, "0.0#" ) & " (" & FORMAT ( PctAvg, "0.0%" ) & " )"
)








TPPC Change :=
VAR PerMonth =
    SUMMARIZECOLUMNS (
        'DateDim_MSD'[MonthStart],
        "PostVal",
            CALCULATE (
                AVERAGE (
                    CALCULATE (
                        MAX ( 'MSD Trigger Conversion'[Post_TPPC] ),
                        ALLEXCEPT ( 'MSD Trigger Conversion', 'MSD Trigger Conversion'[GA_CUST_ID] )
                    )
                ),
                'MSD Trigger Conversion'[Contacted_Flag] = 1
            ),
        "PreVal",
            CALCULATE (
                AVERAGE (
                    CALCULATE (
                        MAX ( 'MSD Trigger Conversion'[PRE_TPPC] ),
                        ALLEXCEPT ( 'MSD Trigger Conversion', 'MSD Trigger Conversion'[GA_CUST_ID] )
                    )
                ),
                'MSD Trigger Conversion'[Contacted_Flag] = 1
            )
    )

-- average across selected months
VAR AvgPost = AVERAGE ( SELECTCOLUMNS ( PerMonth, "x", [PostVal] ) )
VAR AvgPre  = AVERAGE ( SELECTCOLUMNS ( PerMonth, "x", [PreVal] ) )
VAR Diff    = AvgPost - AvgPre
VAR Pct     = DIVIDE ( Diff, AvgPre )

RETURN
IF (
    ISINSCOPE ( 'DateDim_MSD'[MonthStart] ),
    -- Month on axis → single-month calc
    VAR Post1 =
        CALCULATE (
            AVERAGE (
                CALCULATE (
                    MAX ( 'MSD Trigger Conversion'[Post_TPPC] ),
                    ALLEXCEPT ( 'MSD Trigger Conversion', 'MSD Trigger Conversion'[GA_CUST_ID] )
                )
            ),
            'MSD Trigger Conversion'[Contacted_Flag] = 1
        )
    VAR Pre1 =
        CALCULATE (
            AVERAGE (
                CALCULATE (
                    MAX ( 'MSD Trigger Conversion'[PRE_TPPC] ),
                    ALLEXCEPT ( 'MSD Trigger Conversion', 'MSD Trigger Conversion'[GA_CUST_ID] )
                )
            ),
            'MSD Trigger Conversion'[Contacted_Flag] = 1
        )
    VAR Diff1 = Post1 - Pre1
    VAR Pct1  = DIVIDE ( Diff1, Pre1 )
    RETURN FORMAT ( Diff1, "0.0#" ) & "






TPPC Change :=
VAR PerMonth =
    SUMMARIZECOLUMNS (
        'DateDim_MSD'[MonthStart],
        "PostVal",
            CALCULATE (
                AVERAGE (
                    CALCULATE (
                        MAX ( 'MSD Trigger Conversion'[Post_TPPC] ),
                        ALLEXCEPT ( 'MSD Trigger Conversion', 'MSD Trigger Conversion'[GA_CUST_ID] )
                    )
                ),
                'MSD Trigger Conversion'[Contacted_Flag] = 1
            ),
        "PreVal",
            CALCULATE (
                AVERAGE (
                    CALCULATE (
                        MAX ( 'MSD Trigger Conversion'[PRE_TPPC] ),
                        ALLEXCEPT ( 'MSD Trigger Conversion', 'MSD Trigger Conversion'[GA_CUST_ID] )
                    )
                ),
                'MSD Trigger Conversion'[Contacted_Flag] = 1
            )
    )

-- average across months
VAR AvgPost = AVERAGE ( SELECTCOLUMNS ( PerMonth, "v", [PostVal] ) )
VAR AvgPre  = AVERAGE ( SELECTCOLUMNS ( PerMonth, "v", [PreVal] ) )
VAR Diff    = AvgPost - AvgPre
VAR Pct     = DIVIDE ( Diff, AvgPre )

RETURN
IF (
    ISINSCOPE ( 'DateDim_MSD'[MonthStart] ),
    -- show that month’s values directly
    VAR Post1 =
        CALCULATE (
            AVERAGE (
                CALCULATE (
                    MAX ( 'MSD Trigger Conversion'[Post_TPPC] ),
                    ALLEXCEPT ( 'MSD Trigger Conversion', 'MSD Trigger Conversion'[GA_CUST_ID] )
                )
            ),
            'MSD Trigger Conversion'[Contacted_Flag] = 1
        )
    VAR Pre1 =
        CALCULATE (
            AVERAGE (
                CALCULATE (
                    MAX ( 'MSD Trigger Conversion'[PRE_TPPC] ),
                    ALLEXCEPT ( 'MSD Trigger Conversion', 'MSD Trigger Conversion'[GA_CUST_ID] )
                )
            ),
            'MSD Trigger Conversion'[Contacted_Flag] = 1
        )
    VAR Diff1 = Post1 - Pre1
    VAR Pct1  = DIVIDE ( Diff1, Pre1 )
    RETURN FORMAT ( Diff1, "0.0#" ) & " (" & FORMAT ( Pct1, "0.0%" ) & ")",
    -- else: average across all selected months
    FORMAT ( Diff, "0.0#" ) & " (" & FORMAT ( Pct, "0.0%" ) & ")"
)




TPPC Change :=
VAR PerMonth =
    SUMMARIZECOLUMNS (
        'DateDim_MSD'[MonthStart],
        "PostAvg",
            CALCULATE (
                AVERAGE ( 'MSD Trigger Conversion'[Post_TPPC] ),
                'MSD Trigger Conversion'[Contacted_Flag] = 1
            ),
        "PreAvg",
            CALCULATE (
                AVERAGE ( 'MSD Trigger Conversion'[PRE_TPPC] ),
                'MSD Trigger Conversion'[Contacted_Flag] = 1
            )
    )

-- Average across the selected months (no AVERAGEX used)
VAR AvgPostAcrossMonths = DIVIDE ( SUMX ( PerMonth, [PostAvg] ), COUNTROWS ( PerMonth ) )
VAR AvgPreAcrossMonths  = DIVIDE ( SUMX ( PerMonth, [PreAvg] ),  COUNTROWS ( PerMonth ) )
VAR DiffAvg             = AvgPostAcrossMonths - AvgPreAcrossMonths
VAR PctAvg              = DIVIDE ( DiffAvg, AvgPreAcrossMonths )

RETURN
IF (
    ISINSCOPE ( 'DateDim_MSD'[MonthStart] ),
    -- Month on axis → single month only
    VAR Post1 =
        CALCULATE (
            AVERAGE ( 'MSD Trigger Conversion'[Post_TPPC] ),
            'MSD Trigger Conversion'[Contacted_Flag] = 1
        )
    VAR Pre1  =
        CALCULATE (
            AVERAGE ( 'MSD Trigger Conversion'[PRE_TPPC] ),
            'MSD Trigger Conversion'[Contacted_Flag] = 1
        )
    VAR Diff1 = Post1 - Pre1
    VAR Pct1  = DIVIDE ( Diff1, Pre1 )
    RETURN FORMAT ( Diff1, "0.0#" ) & " (" & FORMAT ( Pct1, "0.0%" ) & ")",
    -- No month on axis → averaged across selected months
    FORMAT ( DiffAvg, "0.0#" ) & " (" & FORMAT ( PctAvg, "0.0%" ) & ")"
)





TPPC Change :=
VAR PerMonth =
    SUMMARIZECOLUMNS (
        'DateDim_MSD'[MonthStart],
        "PostM",
            CALCULATE (
                SUMX (
                    VALUES ( 'MSD Trigger Conversion'[GA_CUST_ID] ),
                    MAX ( 'MSD Trigger Conversion'[Post_TPPC] )
                ),
                'MSD Trigger Conversion'[Contacted_Flag] = 1
            ),
        "PreM",
            CALCULATE (
                SUMX (
                    VALUES ( 'MSD Trigger Conversion'[GA_CUST_ID] ),
                    MAX ( 'MSD Trigger Conversion'[PRE_TPPC] )
                ),
                'MSD Trigger Conversion'[Contacted_Flag] = 1
            )
    )

VAR PostTot = SUMX ( PerMonth, [PostM] )
VAR PreTot  = SUMX ( PerMonth, [PreM] )
VAR DiffTot = PostTot - PreTot
VAR PctTot  = DIVIDE ( DiffTot, PreTot )

RETURN
IF (
    ISINSCOPE ( 'DateDim_MSD'[MonthStart] ),
    -- Month on axis → calculate directly for that one month
    VAR Post1 =
        CALCULATE (
            SUMX (
                VALUES ( 'MSD Trigger Conversion'[GA_CUST_ID] ),
                MAX ( 'MSD Trigger Conversion'[Post_TPPC] )
            ),
            'MSD Trigger Conversion'[Contacted_Flag] = 1
        )
    VAR Pre1 =
        CALCULATE (
            SUMX (
                VALUES ( 'MSD Trigger Conversion'[GA_CUST_ID] ),
                MAX ( 'MSD Trigger Conversion'[PRE_TPPC] )
            ),
            'MSD Trigger Conversion'[Contacted_Flag] = 1
        )
    VAR Diff1 = Post1 - Pre1
    VAR Pct1  = DIVIDE ( Diff1, Pre1 )
    RETURN FORMAT ( Diff1, "0.0#" ) & " (" & FORMAT ( Pct1, "0.0%" ) & ")",
    -- No month on axis → return totals across all selected months
    FORMAT ( DiffTot, "0.0#" ) & " (" & FORMAT ( PctTot, "0.0%" ) & ")"
)







TPPC Change :=
VAR Base = KEEPFILTERS ( 'MSD Trigger Conversion'[Contacted_Flag] = 1 )

/* Per-month totals: sum over DISTINCT customers of MAX Post/Pre */
VAR PerMonth =
    SUMMARIZECOLUMNS (
        'DateDim_MSD'[MonthStart],
        "PostM",
            CALCULATE (
                SUMX ( VALUES ( 'MSD Trigger Conversion'[GA_CUST_ID] ),
                       MAX ( 'MSD Trigger Conversion'[Post_TPPC] ) ),
                Base
            ),
        "PreM",
            CALCULATE (
                SUMX ( VALUES ( 'MSD Trigger Conversion'[GA_CUST_ID] ),
                       MAX ( 'MSD Trigger Conversion'[PRE_TPPC] ) ),
                Base
            )
    )

VAR PostTot = SUMX ( PerMonth, [PostM] )
VAR PreTot  = SUMX ( PerMonth, [PreM] )
VAR DiffTot = PostTot - PreTot
VAR PctTot  = DIVIDE ( DiffTot, PreTot )

RETURN
IF (
    ISINSCOPE ( 'DateDim_MSD'[MonthStart] ),
    VAR Post1 =
        CALCULATE (
            SUMX ( VALUES ( 'MSD Trigger Conversion'[GA_CUST_ID] ),
                   MAX ( 'MSD Trigger Conversion'[Post_TPPC] ) ),
            Base
        )
    VAR Pre1 =
        CALCULATE (
            SUMX ( VALUES ( 'MSD Trigger Conversion'[GA_CUST_ID] ),
                   MAX ( 'MSD Trigger Conversion'[PRE_TPPC] ) ),
            Base
        )
    VAR Diff1 = Post1 - Pre1
    VAR Pct1  = DIVIDE ( Diff1, Pre1 )
    RETURN FORMAT ( Diff1, "0.0#" ) & "  (" & FORMAT ( Pct1, "0.0%" ) & ")",
    FORMAT ( DiffTot, "0.0#" ) & "  (" & FORMAT ( PctTot, "0.0%" ) & ")"
)







TPPC Change :=
VAR BaseFilter =
    FILTER ( 'MSD Trigger Conversion', 'MSD Trigger Conversion'[Contacted_Flag] = 1 )

VAR MonthsSelected = VALUES ( 'DateDim_MSD'[MonthStart] )

VAR PerMonthTable =
    ADDCOLUMNS (
        MonthsSelected,
        "PostM",
            CALCULATE (
                SUMX (
                    VALUES ( 'MSD Trigger Conversion'[GA_CUST_ID] ),   -- one row per customer
                    MAX ( 'MSD Trigger Conversion'[Post_TPPC] )       -- collapse duplicates per customer
                ),
                BaseFilter
            ),
        "PreM",
            CALCULATE (
                SUMX (
                    VALUES ( 'MSD Trigger Conversion'[GA_CUST_ID] ),
                    MAX ( 'MSD Trigger Conversion'[PRE_TPPC] )
                ),
                BaseFilter
            )
    )

VAR PostTotal = SUMX ( PerMonthTable, [PostM] )
VAR PreTotal  = SUMX ( PerMonthTable, [PreM] )
VAR DiffTotal = PostTotal - PreTotal
VAR PctTotal  = DIVIDE ( DiffTotal, PreTotal )

RETURN
IF (
    ISINSCOPE ( 'DateDim_MSD'[MonthStart] ),
    VAR m   = SELECTEDVALUE ( 'DateDim_MSD'[MonthStart] )
    VAR row = FILTER ( PerMonthTable, 'DateDim_MSD'[MonthStart] = m )
    VAR Post1 = MAXX ( row, [PostM] )
    VAR Pre1  = MAXX ( row, [PreM] )
    VAR Diff1 = Post1 - Pre1
    VAR Pct1  = DIVIDE ( Diff1, Pre1 )
    RETURN FORMAT ( Diff1, "0.0#" ) & "  ( " & FORMAT ( Pct1, "0.0%" ) & " )",
    FORMAT ( DiffTotal, "0.0#" ) & "  ( " & FORMAT ( PctTotal, "0.0%" ) & " )"
)







TPPC Change :=
VAR BaseFilter =
    FILTER (
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[Contacted_Flag] = 1
    )

-- Selected months in current filter context
VAR MonthsSelected =
    VALUES ( 'DateDim_MSD'[MonthStart] )

-- Per-month Post & Pre using MAX, then we can sum across months
VAR PerMonthTable =
    ADDCOLUMNS (
        MonthsSelected,
        "PostM",
            CALCULATE (
                MAX ( 'MSD Trigger Conversion'[Post_TPPC] ),
                BaseFilter
            ),
        "PreM",
            CALCULATE (
                MAX ( 'MSD Trigger Conversion'[PRE_TPPC] ),
                BaseFilter
            )
    )

-- Totals across all selected months (June + July, etc.)
VAR PostTotal = SUMX ( PerMonthTable, [PostM] )
VAR PreTotal  = SUMX ( PerMonthTable, [PreM] )
VAR DiffTotal = PostTotal - PreTotal
VAR PctTotal  = DIVIDE ( DiffTotal, PreTotal )

RETURN
IF (
    ISINSCOPE ( 'DateDim_MSD'[MonthStart] ),
    -- Month on axis: compute for that single month only
    VAR ThisMonth = SELECTEDVALUE ( 'DateDim_MSD'[MonthStart] )
    VAR OneRow    = FILTER ( PerMonthTable, 'DateDim_MSD'[MonthStart] = ThisMonth )
    VAR Post1     = MAXX ( OneRow, [PostM] )
    VAR Pre1      = MAXX ( OneRow, [PreM] )
    VAR Diff1     = Post1 - Pre1
    VAR Pct1      = DIVIDE ( Diff1, Pre1 )
    RETURN
        FORMAT ( Diff1, "0.0#" ) & "  ( " & FORMAT ( Pct1, "0.0%" ) & " )",
    -- No month on axis: sum over selected months
    FORMAT ( DiffTotal, "0.0#" ) & "  ( " & FORMAT ( PctTotal, "0.0%" ) & " )"
)










Conversion % :=
VAR PerMonthTable =
    SUMMARIZECOLUMNS(
        'DateDim_MSD'[MonthStart],

        /* month-wise DISTINCT contacted customers */
        "Denominator",
            CALCULATE(
                DISTINCTCOUNT ( 'MSD Trigger Conversion'[GA_CUST_ID] ),
                KEEPFILTERS ( 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 )
            ),

        /* month-wise sum across customers of product MAX counts */
        "Numerator",
            CALCULATE(
                SUMX(
                    VALUES ( 'MSD Trigger Conversion'[GA_CUST_ID] ),
                    VAR aif  = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[AIF_SALES_COUNT] ) ), 0 )
                    VAR card = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[CARD_SALES_COUNT] ) ), 0 )
                    VAR gi   = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[GI_SALES_COUNT] ) ), 0 )
                    VAR hml  = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[HML_SALES_COUNT] ) ), 0 )
                    VAR inv  = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[INV_SALES_COUNT] ) ), 0 )
                    VAR li   = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[LI_SALES_COUNT] ) ), 0 )
                    VAR pil  = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[PIL_SALES_COUNT] ) ), 0 )
                    VAR pms  = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[PMS_SALES_COUNT] ) ), 0 )
                    VAR tmd  = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[TMD_SALES_COUNT] ) ), 0 )
                    RETURN aif + card + gi + hml + inv + li + pil + pms + tmd
                ),
                KEEPFILTERS ( 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 )
            )
    )

RETURN
IF (
    ISINSCOPE ( 'DateDim_MSD'[MonthStart] ),
    /* Month on axis: return that month’s % only */
    VAR ThisMonth = SELECTEDVALUE ( 'DateDim_MSD'[MonthStart] )
    VAR OneRow    = FILTER ( PerMonthTable, 'DateDim_MSD'[MonthStart] = ThisMonth )
    RETURN DIVIDE ( MAXX ( OneRow, [Numerator] ), MAXX ( OneRow, [Denominator] ) ),
    /* No month on axis: overall % across selected months = (Σ num) / (Σ den) */
    DIVIDE ( SUMX ( PerMonthTable, [Numerator] ), SUMX ( PerMonthTable, [Denominator] ) )
)









Conversion % :=
VAR MonthsSelected =
    VALUES ( 'DateDim_MSD'[MonthStart] )

/* Build a per-month table with Numerator & Denominator at month-grain */
VAR PerMonthTable =
    ADDCOLUMNS (
        MonthsSelected,
        "CustsContacted",
            CALCULATETABLE (
                VALUES ( 'MSD Trigger Conversion'[GA_CUST_ID] ),
                KEEPFILTERS ( 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 )
            ),
        "Numerator",
            VAR C = [CustsContacted]
            RETURN
                SUMX (
                    C,
                    VAR aif = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[AIF_SALES_COUNT] ) ), 0 )
                    VAR card = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[CARD_SALES_COUNT] ) ), 0 )
                    VAR gi = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[GI_SALES_COUNT] ) ), 0 )
                    VAR hml = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[HML_SALES_COUNT] ) ), 0 )
                    VAR inv = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[INV_SALES_COUNT] ) ), 0 )
                    VAR li  = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[LI_SALES_COUNT] ) ), 0 )
                    VAR pil = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[PIL_SALES_COUNT] ) ), 0 )
                    VAR pms = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[PMS_SALES_COUNT] ) ), 0 )
                    VAR tmd = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[TMD_SALES_COUNT] ) ), 0 )
                    RETURN aif + card + gi + hml + inv + li + pil + pms + tmd
                ),
        "Denominator",
            COUNTROWS ( [CustsContacted] )   -- month-wise DISTINCT contacted customers
    )

/* If MonthStart is on the axis, return that month's % only */
RETURN
IF (
    ISINSCOPE ( 'DateDim_MSD'[MonthStart] ),
    VAR OneMonth =
        FILTER ( PerMonthTable, 'DateDim_MSD'[MonthStart] = SELECTEDVALUE ( 'DateDim_MSD'[MonthStart] ) )
    RETURN
        DIVIDE ( MAXX ( OneMonth, [Numerator] ), MAXX ( OneMonth, [Denominator] ) ),
    /* Otherwise (e.g., card with June+July selected), return one overall %:
       (sum of monthly numerators) / (sum of monthly denominators) */
    VAR NumTotal = SUMX ( PerMonthTable, [Numerator] )
    VAR DenTotal = SUMX ( PerMonthTable, [Denominator] )
    RETURN DIVIDE ( NumTotal, DenTotal )
)






Conversion % (MonthStart summarized) :=
VAR PerMonthTable =
    SUMMARIZECOLUMNS(
        'DateDim_MSD'[MonthStart],
        "ConvPct",
            VAR CustsContacted =
                CALCULATETABLE(
                    VALUES ( 'MSD Trigger Conversion'[GA_CUST_ID] ),
                    KEEPFILTERS ( 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 )
                )
            VAR Numerator =
                SUMX(
                    CustsContacted,
                    VAR aif  = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[AIF_SALES_COUNT] ) ), 0 )
                    VAR card = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[CARD_SALES_COUNT] ) ), 0 )
                    VAR gi   = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[GI_SALES_COUNT] ) ), 0 )
                    VAR hml  = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[HML_SALES_COUNT] ) ), 0 )
                    VAR inv  = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[INV_SALES_COUNT] ) ), 0 )  -- rename if IMI_SALES_COUNT
                    VAR li   = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[LI_SALES_COUNT] ) ), 0 )   -- rename if LIL_SALES_COUNT
                    VAR pil  = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[PIL_SALES_COUNT] ) ), 0 )
                    VAR pms  = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[PMS_SALES_COUNT] ) ), 0 )
                    VAR tmd  = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[TMD_SALES_COUNT] ) ), 0 )
                    RETURN aif + card + gi + hml + inv + li + pil + pms + tmd
                )
            VAR Denominator = COUNTROWS ( CustsContacted )   -- month-wise DISTINCT customers contacted
            RETURN DIVIDE ( Numerator, Denominator )
    )
RETURN
IF(
    ISINSCOPE( 'DateDim_MSD'[MonthStart] ),
    -- Month on axis: return that month’s % only
    VAR ThisMonth = SELECTEDVALUE( 'DateDim_MSD'[MonthStart] )
    VAR OneRow = FILTER( PerMonthTable, 'DateDim_MSD'[MonthStart] = ThisMonth )
    RETURN MAXX( OneRow, [ConvPct] ),
    -- No Month on axis: average of the selected months' % (not a sum)
    AVERAGEX( PerMonthTable, [ConvPct] )
)






Conversion % :=
VAR CustsContacted =
    CALCULATETABLE (
        VALUES ( 'MSD Trigger Conversion'[GA_CUST_ID] ),
        KEEPFILTERS ( 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 )
    )
VAR Numerator :=
    SUMX (
        CustsContacted,
        VAR aif  = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[AIF_SALES_COUNT] ),  KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) ), 0 )
        VAR card = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[CARD_SALES_COUNT] ), KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) ), 0 )
        VAR gi   = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[GI_SALES_COUNT] ),   KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) ), 0 )
        VAR hml  = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[HML_SALES_COUNT] ),  KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) ), 0 )
        VAR inv  = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[IMI_SALES_COUNT] ),  KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) ), 0 )  -- use INV_SALES_COUNT if that's your column
        VAR li   = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[LIL_SALES_COUNT] ),  KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) ), 0 )  -- use LI_SALES_COUNT if that's your column
        VAR pil  = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[PIL_SALES_COUNT] ),  KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) ), 0 )
        VAR pms  = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[PMS_SALES_COUNT] ),  KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) ), 0 )
        VAR tmd  = COALESCE ( CALCULATE ( MAX ( 'MSD Trigger Conversion'[TMD_SALES_COUNT] ),  KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) ), 0 )
        RETURN aif + card + gi + hml + inv + li + pil + pms + tmd
    )
VAR Denominator := COUNTROWS ( CustsContacted )
RETURN DIVIDE ( Numerator, Denominator )






Conversion % Monthwise :=
AVERAGEX (
    SUMMARIZE (
        'DateDim_MSD',
        'DateDim_MSD'[MonthStart],
        "Conv%",
            VAR CustsContacted =
                CALCULATETABLE (
                    VALUES ( 'MSD Trigger Conversion'[GA_CUST_ID] ),
                    'MSD Trigger Conversion'[CONTACTED_FLAG] = 1
                )
            VAR Numerator =
                SUMX (
                    CustsContacted,
                    MAXX (
                        {
                            ROW ( "v", CALCULATE ( MAX ( 'MSD Trigger Conversion'[AIF_SALES_COUNT] ) ) ),
                            ROW ( "v", CALCULATE ( MAX ( 'MSD Trigger Conversion'[CARD_SALES_COUNT] ) ) ),
                            ROW ( "v", CALCULATE ( MAX ( 'MSD Trigger Conversion'[HIL_SALES_COUNT] ) ) ),
                            ROW ( "v", CALCULATE ( MAX ( 'MSD Trigger Conversion'[IMI_SALES_COUNT] ) ) ),
                            ROW ( "v", CALCULATE ( MAX ( 'MSD Trigger Conversion'[LIL_SALES_COUNT] ) ) ),
                            ROW ( "v", CALCULATE ( MAX ( 'MSD Trigger Conversion'[PIL_SALES_COUNT] ) ) ),
                            ROW ( "v", CALCULATE ( MAX ( 'MSD Trigger Conversion'[TMO_SALES_COUNT] ) ) )
                        },
                        [v]
                    )
                )
            VAR Denominator = COUNTROWS ( CustsContacted )
            RETURN DIVIDE ( Numerator, Denominator )
    ),
    [Conv%]
)





Conversion % :=
VAR CustsContacted =
    CALCULATETABLE(
        VALUES ( 'MSD Trigger Conversion'[GA_CUST_ID] ),
        KEEPFILTERS ( 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 )
    )
VAR Numerator =
    SUMX (
        CustsContacted,
        VAR MaxPerCust =
            MAXX (
                {
                    ROW ( "v", CALCULATE ( MAX ( 'MSD Trigger Conversion'[AIF_SALES_COUNT] ), KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) ) ),
                    ROW ( "v", CALCULATE ( MAX ( 'MSD Trigger Conversion'[CARD_SALES_COUNT] ), KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) ) ),
                    ROW ( "v", CALCULATE ( MAX ( 'MSD Trigger Conversion'[HIL_SALES_COUNT] ), KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) ) ),
                    ROW ( "v", CALCULATE ( MAX ( 'MSD Trigger Conversion'[IMI_SALES_COUNT] ), KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) ) ),
                    ROW ( "v", CALCULATE ( MAX ( 'MSD Trigger Conversion'[LIL_SALES_COUNT] ), KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) ) ),
                    ROW ( "v", CALCULATE ( MAX ( 'MSD Trigger Conversion'[PIL_SALES_COUNT] ), KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) ) ),
                    ROW ( "v", CALCULATE ( MAX ( 'MSD Trigger Conversion'[TMO_SALES_COUNT] ), KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) ) )
                },
                [v]
            )
        RETURN MaxPerCust
    )
VAR Denominator =
    COUNTROWS ( CustsContacted )
RETURN
    DIVIDE ( Numerator, Denominator )






Conversion % (Summed Across Months) =
DIVIDE(
    -- Numerator: sum over months of (sum over customers of product-wise MAX counts)
    SUMX(
        VALUES( DateDim_MSD[MonthStart] ),
        SUMX(
            SUMMARIZECOLUMNS(
                DateDim_MSD[MonthStart],
                'MSD Trigger Conversion'[GA_CUST_ID]
            ),
            SUMX(
                UNION(
                    ROW("v", CALCULATE( MAX('MSD Trigger Conversion'[AIF_SALES_COUNT]),  KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) )),
                    ROW("v", CALCULATE( MAX('MSD Trigger Conversion'[CARD_SALES_COUNT]), KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) )),
                    ROW("v", CALCULATE( MAX('MSD Trigger Conversion'[GI_SALES_COUNT]),   KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) )),
                    ROW("v", CALCULATE( MAX('MSD Trigger Conversion'[HML_SALES_COUNT]),  KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) )),
                    ROW("v", CALCULATE( MAX('MSD Trigger Conversion'[INV_SALES_COUNT]),  KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) )),
                    ROW("v", CALCULATE( MAX('MSD Trigger Conversion'[IL_SALES_COUNT]),   KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) )),
                    ROW("v", CALCULATE( MAX('MSD Trigger Conversion'[PIL_SALES_COUNT]),  KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) )),
                    ROW("v", CALCULATE( MAX('MSD Trigger Conversion'[PMS_SALES_COUNT]),  KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) )),
                    ROW("v", CALCULATE( MAX('MSD Trigger Conversion'[TMD_SALES_COUNT]),  KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1) ))
                ),
                [v]
            )
        )
    ),
    -- Denominator: sum over months of distinct contacted customers
    SUMX(
        VALUES( DateDim_MSD[MonthStart] ),
        CALCULATE(
            DISTINCTCOUNT('MSD Trigger Conversion'[GA_CUST_ID]),
            KEEPFILTERS('MSD Trigger Conversion'[CONTACTED_FLAG]=1)
        )
    ),
    0
)









Total Xsell (Prod MAX per Cust per Month) =
SUMX (
    SUMMARIZECOLUMNS (
        DateDim_MSD[MonthStart],                      -- month in your slicer
        'MSD Trigger Conversion'[GA_CUST_ID]          -- customer
    ),
    VAR vAIF = CALCULATE ( MAX ( 'MSD Trigger Conversion'[AIF_SALES_VALUE] ), KEEPFILTERS ( 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 ) )
    VAR vCARD= CALCULATE ( MAX ( 'MSD Trigger Conversion'[CARD_SALES_VALUE] ), KEEPFILTERS ( 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 ) )
    VAR vGI  = CALCULATE ( MAX ( 'MSD Trigger Conversion'[GI_SALES_VALUE] ),   KEEPFILTERS ( 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 ) )
    VAR vHML = CALCULATE ( MAX ( 'MSD Trigger Conversion'[HML_SALES_VALUE] ),  KEEPFILTERS ( 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 ) )
    VAR vINV = CALCULATE ( MAX ( 'MSD Trigger Conversion'[INV_SALES_VALUE] ),  KEEPFILTERS ( 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 ) )
    VAR vIL  = CALCULATE ( MAX ( 'MSD Trigger Conversion'[IL_SALES_VALUE] ),   KEEPFILTERS ( 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 ) )
    VAR vPIL = CALCULATE ( MAX ( 'MSD Trigger Conversion'[PIL_SALES_VALUE] ),  KEEPFILTERS ( 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 ) )
    VAR vPMS = CALCULATE ( MAX ( 'MSD Trigger Conversion'[PMS_SALES_VALUE] ),  KEEPFILTERS ( 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 ) )
    VAR vTMD = CALCULATE ( MAX ( 'MSD Trigger Conversion'[TMD_SALES_VALUE] ),  KEEPFILTERS ( 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 ) )
    RETURN
        COALESCE ( vAIF, 0 ) + COALESCE ( vCARD, 0 ) + COALESCE ( vGI, 0 ) + COALESCE ( vHML, 0 ) +
        COALESCE ( vINV, 0 ) + COALESCE ( vIL, 0 ) + COALESCE ( vPIL, 0 ) + COALESCE ( vPMS, 0 ) + COALESCE ( vTMD, 0 )
)






Total Xsell (Prod MAX per Cust per Month) =
SUMX (
    SUMMARIZECOLUMNS (
        DateDim_MSD[MonthStart],
        'MSD Trigger Conversion'[GA_CUST_ID]
    ),
    MAXX (
        {
            ( "AIF", CALCULATE ( MAX ( 'MSD Trigger Conversion'[AIF_SALES_VALUE] ), 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 ) ),
            ( "CARD", CALCULATE ( MAX ( 'MSD Trigger Conversion'[CARD_SALES_VALUE] ), 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 ) ),
            ( "GI",   CALCULATE ( MAX ( 'MSD Trigger Conversion'[GI_SALES_VALUE] ),   'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 ) ),
            ( "HML",  CALCULATE ( MAX ( 'MSD Trigger Conversion'[HML_SALES_VALUE] ),  'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 ) ),
            ( "INV",  CALCULATE ( MAX ( 'MSD Trigger Conversion'[INV_SALES_VALUE] ),  'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 ) ),
            ( "IL",   CALCULATE ( MAX ( 'MSD Trigger Conversion'[IL_SALES_VALUE] ),   'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 ) ),
            ( "PIL",  CALCULATE ( MAX ( 'MSD Trigger Conversion'[PIL_SALES_VALUE] ),  'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 ) ),
            ( "PMS",  CALCULATE ( MAX ( 'MSD Trigger Conversion'[PMS_SALES_VALUE] ),  'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 ) ),
            ( "TMD",  CALCULATE ( MAX ( 'MSD Trigger Conversion'[TMD_SALES_VALUE] ),  'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 ) )
        },
        [Value]
    )
)








Conversion % (Monthly Avg, Uniq CM + Products) :=
AVERAGEX (
    VALUES ( 'DateDim_MSD'[MonthStart] ),            -- compute month by month, then average
    VAR NumThisMonth :=
        SUMX(                                        -- sum unique product-count per Cust×Month
            SUMMARIZECOLUMNS(
                'DateDim_MSD'[MonthStart],
                'MSD Trigger Conversion'[GA_CUST_ID],
                "v",
                    MAXX(                            -- collapse duplicate rows within month
                        FILTER(
                            'MSD Trigger Conversion',
                            'MSD Trigger Conversion'[Contacted_Flag] = 1
                        ),
                          COALESCE('MSD Trigger Conversion'[AIF_SALES_COUNT],0)
                        + COALESCE('MSD Trigger Conversion'[CARD_SALES_COUNT],0)
                        + COALESCE('MSD Trigger Conversion'[GI_SALES_COUNT],0)
                        + COALESCE('MSD Trigger Conversion'[HML_SALES_COUNT],0)
                        + COALESCE('MSD Trigger Conversion'[INV_SALES_COUNT],0)
                        + COALESCE('MSD Trigger Conversion'[LIL_SALES_COUNT],0)
                        + COALESCE('MSD Trigger Conversion'[PIL_SALES_COUNT],0)
                        + COALESCE('MSD Trigger Conversion'[PMS_SALES_COUNT],0)
                        + COALESCE('MSD Trigger Conversion'[TMD_SALES_COUNT],0)
                    )
            ),
            [v]
        )
    VAR DenThisMonth :=
        CALCULATE(
            DISTINCTCOUNT('MSD Trigger Conversion'[GA_CUST_ID]),
            'MSD Trigger Conversion'[Contacted_Flag] = 1         -- unique contacted customers in that month
        )
    RETURN
        DIVIDE( NumThisMonth, DenThisMonth, 0 )
)










Conversion % (Monthly Avg, Uniq CM) :=
AVERAGEX(
  VALUES('DateDim_MSD'[MonthStart]),
  VAR T =
    SUMMARIZECOLUMNS(
      'DateDim_MSD'[MonthStart],
      'MSD Trigger Conversion'[GA_CUST_ID],
      "HasConv", MAX('MSD Trigger Conversion'[ConvertedFlag])   -- 1 if any row=1
    )
  VAR Num = COUNTROWS( FILTER(T, [HasConv] = 1) )
  VAR Den = COUNTROWS(T)
  RETURN DIVIDE( Num, Den, 0 )
)






Conversion % (Monthly Avg) :=
AVERAGEX (
    VALUES ( 'DateDim_MSD'[MonthStart] ),        -- iterate each month in the selection
    VAR NumThisMonth :=
        CALCULATE (
              SUM ( 'MSD Trigger Conversion'[AIF_SALES_COUNT] )
            + SUM ( 'MSD Trigger Conversion'[CARD_SALES_COUNT] )
            + SUM ( 'MSD Trigger Conversion'[GI_SALES_COUNT] )
            + SUM ( 'MSD Trigger Conversion'[HML_SALES_COUNT] )
            + SUM ( 'MSD Trigger Conversion'[INV_SALES_COUNT] )
            + SUM ( 'MSD Trigger Conversion'[LIL_SALES_COUNT] )
            + SUM ( 'MSD Trigger Conversion'[PIL_SALES_COUNT] )
            + SUM ( 'MSD Trigger Conversion'[PMS_SALES_COUNT] )
            + SUM ( 'MSD Trigger Conversion'[TMD_SALES_COUNT] ),
            'MSD Trigger Conversion'[Contacted_Flag] = 1
        )
    VAR DenThisMonth :=
        CALCULATE ( DISTINCTCOUNT ( 'MSD Trigger Conversion'[GA_CUST_ID] ) )
        -- If you want the same denominator you used elsewhere, replace the above with your
        -- month-wise distinct measure (per-month it evaluates correctly inside AVERAGEX).
    RETURN
        DIVIDE ( NumThisMonth, DenThisMonth, 0 )
)











Total Xsell :=
SUMX (
    SUMMARIZECOLUMNS (
        'DateDim_MSD'[MonthStart],
        'MSD Trigger Conversion'[GA_CUST_ID],
        "v",
            MAXX (
                FILTER ( 'MSD Trigger Conversion', 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 ),
                  COALESCE ( 'MSD Trigger Conversion'[AIF_SALES_VALUE], 0 )
                + COALESCE ( 'MSD Trigger Conversion'[CARD_SALES_VALUE], 0 )
                + COALESCE ( 'MSD Trigger Conversion'[GI_SALES_VALUE], 0 )
                + COALESCE ( 'MSD Trigger Conversion'[HML_SALES_VALUE], 0 )
                + COALESCE ( 'MSD Trigger Conversion'[INV_SALES_VALUE], 0 )
                + COALESCE ( 'MSD Trigger Conversion'[LIL_SALES_VALUE], 0 )
                + COALESCE ( 'MSD Trigger Conversion'[PIL_SALES_VALUE], 0 )
                + COALESCE ( 'MSD Trigger Conversion'[PMS_SALES_VALUE], 0 )
                + COALESCE ( 'MSD Trigger Conversion'[TMD_SALES_VALUE], 0 )
            )
    ),
    [v]
)







Total Xsell :=
SUMX (
    VALUES ( 'DateDim_MSD'[MonthStart] ),              -- iterate months in selection
    VAR T =
        SUMMARIZE (
            FILTER (
                'MSD Trigger Conversion',
                'MSD Trigger Conversion'[CONTACTED_FLAG] = 1
            ),
            'MSD Trigger Conversion'[GA_CUST_ID],
            "v",
                MAXX (
                    CURRENTGROUP(),
                      COALESCE('MSD Trigger Conversion'[AIF_SALES_VALUE],0)
                    + COALESCE('MSD Trigger Conversion'[CARD_SALES_VALUE],0)
                    + COALESCE('MSD Trigger Conversion'[GI_SALES_VALUE],0)
                    + COALESCE('MSD Trigger Conversion'[HML_SALES_VALUE],0)
                    + COALESCE('MSD Trigger Conversion'[INV_SALES_VALUE],0)
                    + COALESCE('MSD Trigger Conversion'[LIL_SALES_VALUE],0)
                    + COALESCE('MSD Trigger Conversion'[PIL_SALES_VALUE],0)
                    + COALESCE('MSD Trigger Conversion'[PMS_SALES_VALUE],0)
                    + COALESCE('MSD Trigger Conversion'[TMD_SALES_VALUE],0)
                )
        )
    RETURN
        SUMX ( T, [v] )
)






Monthly Value (uniq-per-cust, summed over months) :=
SUMX(
    VALUES('DateDim_MSD'[MonthStart]),                   -- iterate months in selection
    CALCULATE(
        SUMX(                                           -- sum unique customer values in this month
            SUMMARIZE(
                'MSD Trigger Conversion',
                'MSD Trigger Conversion'[GA_CUST_ID],
                "v", MAX( COALESCE('MSD Trigger Conversion'[<ValueColumn>], 0) )
            ),
            [v]
        )
    )
)





TPPC Change (Value) :=
VAR TPre =
    SUMMARIZECOLUMNS(
        'DateDim_MSD'[MonthStart],
        'MSD Trigger Conversion'[GA_CUST_ID],
        "vPre",
            MAXX(
                FILTER ( 'MSD Trigger Conversion', 'MSD Trigger Conversion'[Contacted_Flag] = 1 ),
                'MSD Trigger Conversion'[PRE_TPPC]
            )
    )
VAR TPost =
    SUMMARIZECOLUMNS(
        'DateDim_MSD'[MonthStart],
        'MSD Trigger Conversion'[GA_CUST_ID],
        "vPost",
            MAXX(
                FILTER ( 'MSD Trigger Conversion', 'MSD Trigger Conversion'[Contacted_Flag] = 1 ),
                'MSD Trigger Conversion'[POST_TPPC]
            )
    )
VAR SumPre  = SUMX ( TPre,  [vPre] )
VAR SumPost = SUMX ( TPost, [vPost] )
RETURN
SumPost - SumPre






Conversion % (uniq CM) :=
VAR T =
    SUMMARIZECOLUMNS(
        'DateDim_MSD'[MonthStart],
        'MSD Trigger Conversion'[GA_CUST_ID],
        "v",
            MAXX(
                FILTER(
                    'MSD Trigger Conversion',
                    'MSD Trigger Conversion'[Contacted_Flag] = 1
                ),
                  COALESCE('MSD Trigger Conversion'[AIF_SALES_COUNT],0)
                + COALESCE('MSD Trigger Conversion'[CARD_SALES_COUNT],0)
                + COALESCE('MSD Trigger Conversion'[HML_SALES_COUNT],0)
            )
    )
RETURN
DIVIDE( SUMX(T,[v]), COUNTROWS(T), 0 )





Total Xsell :=
SUMX(
    GROUPBY(
        FILTER ( 'MSD Trigger Conversion', 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 ),
        'DateDim_MSD'[MonthStart],
        'MSD Trigger Conversion'[GA_CUST_ID],
        "v",
            MAXX(
                CURRENTGROUP(),
                COALESCE('MSD Trigger Conversion'[AIF_SALES_VALUE],0) +
                COALESCE('MSD Trigger Conversion'[CARD_SALES_VALUE],0) +
                COALESCE('MSD Trigger Conversion'[HML_SALES_VALUE],0) +
                COALESCE('MSD Trigger Conversion'[INS_SALES_VALUE],0) +
                COALESCE('MSD Trigger Conversion'[PIL_SALES_VALUE],0) +
                COALESCE('MSD Trigger Conversion'[PPS_SALES_VALUE],0) +
                COALESCE('MSD Trigger Conversion'[TMD_SALES_VALUE],0)
            )
    ),
    [v]
)






MSD Conversion % :=
DIVIDE(
    DISTINCTCOUNTNOBLANK(
        FILTER(
            'MsD trigger conversion',
            'MsD trigger conversion'[ConvertedFlag] = 1
        )[GA_CustomerID]
    ),
    DISTINCTCOUNTNOBLANK ( 'MsD trigger conversion'[GA_CustomerID] ),
    0
)





I will provide the mapping file by the end of the day. If I receive the mapping by 10th September, I can refresh the dashboard by the 12th.”






Hi Gopal,

Once the mapping is completed, it will take me 1–2 days to refresh the dashboard. For a release on the 12th, I will need the mapping to be available by the 10th of September.










Hi Gopal,

As discussed on Wednesday, you mentioned that the mapping needs to be completed till 31st August in one go. As per confirmation, the missing data will be re-pushed by GupShup. I am refreshing the mapping catalog till 31st August today, and since one week is required for the mapping, it can be completed by 14th/15th September. Accordingly, the campaign base will also be refreshed till 31st August as per the agreed timeline.

Please confirm if we are aligned on this timeline to refresh the campaign dashboard.








Hi Gopal,

As discussed on Wednesday, you mentioned that the mapping needs to be completed till 31st August. Currently, the mapping has been provided till 15th August. We can proceed in either of the following ways:

Option 1:
	•	I will refresh the base and provide the mapping today.
	•	As discussed, one week is required for mapping, so by 14th/15th September, the mapping can be completed.
	•	The campaign base will be refreshed till 31st August as per the agreed timeline.

Option 2:
	•	I will refresh the base and mapping till 15th August today, so that the campaign dashboard will be refreshed till 15th August by tomorrow morning.
	•	Next week, once I receive the mapping/catalog file, the data till 31st August will be updated in line with the discussed timeline (by 14th/15th September).

Please confirm which option works best for you so that I can proceed accordingly.





Thanks for checking with the collection team. They are re-sharing the OSF file with us. Could you please let me know the process for updating the OSF file? Specifically, should the change be handled directly from the backend, or should the collection OSF file be treated like the other OSFs?

I noticed that there is no code in the location for the collection OSF. Could you please guide me on the end-to-end process to proceed with this? It would be really helpful.







In the waterfall, the last two exclusions are:
	1.	One-month exclusion for service-end customers – If a customer has already received an NPS survey, they are not eligible to receive another for one month. After the month, they become eligible again. This exclusion is applied across all NPS processes for all sent customers.
	2.	Exclusion for employees not in the OSF collection file – The OSF collection file refers to the staff file shared by the collection team. If there is any change in the staff list, the updated OSF file needs to be re-shared with us.

If you are observing a significant drop, it may be due to these exclusions. Request you to please share the latest OSF collection file with us.











Hi Tapabrata,

Regarding the Medallia server upload:
	•	On 9th August, 36 records got uploaded which were not from the file shared on 7th August. This happened due to system errors — the 7th August file was not picked up by the code, and instead, 36 records came from the previous day’s file.
	•	On 7th August, we shared 11,809 records, and on 11th August, we shared 1,343 records. Including the 36 records mentioned earlier, a total of 13,152 records were considered together for survey triggering.
	•	From the 7th August file (interaction dates 4th, 5th, 6th), 822 surveys were triggered.
	•	From the 11th August file (interaction dates 7th, 8th, 9th), 508 surveys were triggered.
	•	Together, this makes 1,330 surveys triggered across both input files.

Additionally, for global exclusions, we are currently not saving the waterfalls for this activity. Hence, we don’t have the exclusions bifurcation right now. However, starting with the Friday batch, we will capture and share the waterfall breakdown so you’ll have complete visibility of exclusions going forward.









Hi Prashant,

The input file you shared for the MSF BDM scorecard mapping is not in the agreed format, which caused the failure of both the daily and weekly code runs.

Please ensure that the formatting strictly follows what we discussed so that the code can align accordingly. For example, variable names must remain consistent (e.g., Area should remain as MSF Area). Any changes in variable naming or structure directly break the process.

Due to this format issue, our code failed, and we had to rerun it, which has led to a delay in today’s report delivery. Going forward, kindly make sure the file matches the set format to avoid such delays.










Hi Gopal,

For non-PEGA, I spoke with Smriti. She mentioned that she will only be able to complete the mapping next week. This means both the July 31st and August 15th mappings will be provided together in one go.

If I receive the July 31st mapping this week, I’ll update till July 31st. Otherwise, we will proceed with the combined mapping (July 31st + August 15th) next week, and I’ll update accordingly.









Hi Team,

I updated the campaign metlog on 11th August (Monday), but despite SS confirmation, the campaign mapping has still not been updated. This delay is directly impacting the dashboard refresh frequency and raising concerns from the business, as we had committed to deliver on time.

I request you to update the mapping catalog immediately. If there is any blocker preventing this, please share the exact reason along with a clear timeline so I can communicate it to the business. Lack of visibility is creating escalation risks, and we must close this gap at the earliest.

@Gopal and @Javed — I would appreciate your support in driving this to resolution quickly.












Total Xsell =
VAR XFiltered =
    CALCULATE (
        SUM ( 'MSD Trigger Conversion'[AIF_SALES_VALUE] ) +
        SUM ( 'MSD Trigger Conversion'[CARD_SALES_VALUE] ) +
        SUM ( 'MSD Trigger Conversion'[GI_SALES_VALUE] ) +
        SUM ( 'MSD Trigger Conversion'[HML_SALES_VALUE] ) +
        SUM ( 'MSD Trigger Conversion'[INV_SALES_VALUE] ) +
        SUM ( 'MSD Trigger Conversion'[LI_SALES_VALUE] ) +
        SUM ( 'MSD Trigger Conversion'[PIL_SALES_VALUE] ) +
        SUM ( 'MSD Trigger Conversion'[PMS_SALES_VALUE] ) +
        SUM ( 'MSD Trigger Conversion'[TMD_SALES_VALUE] ),
        FILTER (
            'MSD Trigger Conversion',
            [Trigger_display] = 1 &&
            [PROD_display] = 1 &&
            [OBJ_display] = 1 &&
            'MSD Trigger Conversion'[Contacted_Flag] = 1
        )
    )
RETURN
    FORMAT ( DIVIDE ( XFiltered, 10000000 ), "0.00" ) & " Cr"








Total Xsell (Cr) :=
VAR v =
    SUMX (
        FILTER (
            'MSD Trigger Conversion',
            CALCULATE ( [Trigger_display] ) = 1 &&
            CALCULATE ( [PROD_display] )    = 1 &&
            CALCULATE ( [OBJ_display] )     = 1 &&
            'MSD Trigger Conversion'[Contacted_Flag] = 1
        ),
        CALCULATE (
            [AIF_SALES_VALUE] + [CARD_SALES_VALUE] + [GI_SALES_VALUE] + [HML_SALES_VALUE] +
            [INV_SALES_VALUE] + [LI_SALES_VALUE]  + [PIL_SALES_VALUE] + [PMS_SALES_VALUE] +
            [TMD_SALES_VALUE]
        )
    )
RETURN FORMAT( DIVIDE( v, 10000000 ), "0.00" ) & " Cr"








Hi Bithika,

The Campaign Power BI dashboard has already been built and published in PROD. However, there are some enhancements to the report view that have now been completed and are ready for release.

Previously, Vrinda used to update PROD directly for any changes in the report view using the updated Power BI file. As discussed with you and Suhas, it has been agreed that all changes will first be deployed to UAT, and after successful validation, will be moved to PROD.

I am sharing the updated .pbix file. Please push it to UAT, and once signed off, proceed with the PROD deployment as per our discussion.

For this dashboard, we are currently using the UAT SharePoint. A PROD SharePoint also needs to be created—please share the process for this.

Jira Ticket: INMCLOUD-2222
AD Group: hsbc-multi-DACOMMS-Prod-Users









Hi Gopal,

At the moment, I’m not exactly aware of the issue since this report is being generated for the first time and I don’t have much background on it. Tomorrow, I’ll check with Kenare and Aishwarya, as they have been triggering these reports for months. I’ll review the details with them and get back to you regarding this discrepancy.







Hi, quick update on the dashboard:

All additional adjustments listed below have been implemented in the dashboard. The changes are now in place, and the final cut has been shared with the cloud team for publishing. It should be published today or by tomorrow morning.

The only item pending is the map view for the MSA, which will be completed next week.








Selected Metric Value =
VAR LMStart =
    DATE(
        YEAR(MAXX(ALL(DateDim_MSD), DateDim_MSD[Date])),
        MONTH(MAXX(ALL(DateDim_MSD), DateDim_MSD[Date])),
        1
    )
VAR SixBack = EOMONTH(LMStart, -5)
VAR BF =
    FILTER(
        'MSD Trigger Conversion',
        [Trigger_display] = 1 &&
        [PROD_display] = 1 &&
        [OBJ_display] = 1
    )
VAR DateInc =
    FILTER(
        ALL(DateDim_MSD),
        DateDim_MSD[Date] >= SixBack &&
        DateDim_MSD[Date] <= EOMONTH(LMStart, 0)
    )
VAR DateExc =
    FILTER(
        ALL(DateDim_MSD),
        DateDim_MSD[Date] >= SixBack &&
        DateDim_MSD[Date] < LMStart
    )
RETURN
SWITCH(
    [Selected Metric],
    "Contact Rate",    ROUND(CALCULATE([Contact Rate], BF, DateInc) * 100, 2),
    "Conversion Rate", ROUND(CALCULATE([Conversion %], BF, DateInc) * 100, 2),
    "Inc CASA Gain",   ROUND(CALCULATE([Inc Casa Lift_num], BF, DateExc), 2),
    "Inc TRB Gain",    ROUND(CALCULATE([Inc TRB Lift_num], BF, DateExc), 2)
)






Selected Metric Value =
VAR LMStart = DATE(YEAR(MAXX(ALL(DateDim_MSD), DateDim_MSD[Date])),
                   MONTH(MAXX(ALL(DateDim_MSD), DateDim_MSD[Date])), 1)
VAR SixBack = EOMONTH(LMStart, -5)
VAR BF = FILTER('MSD Trigger Conversion',
                [Trigger_display] = 1 &&
                [PROD_display] = 1 &&
                [OBJ_display] = 1)
VAR DateInc = FILTER(ALL(DateDim_MSD), DateDim_MSD[Date] >= SixBack && DateDim_MSD[Date] <= EOMONTH(LMStart, 0))
VAR DateExc = FILTER(ALL(DateDim_MSD), DateDim_MSD[Date] >= SixBack && DateDim_MSD[Date] < LMStart)
RETURN
SWITCH(
    [Selected Metric],
    "Contact Rate",   ROUND(CALCULATE([Contact Rate] * 100, BF, DateInc), 2),
    "Conversion Rate",ROUND(CALCULATE([Conversion %] * 100, BF, DateInc), 2),
    "Inc CASA Gain",  ROUND(CALCULATE([Inc Casa Lift_num], BF, DateExc), 2),
    "Inc TRB Gain",   ROUND(CALCULATE([Inc TRB Lift_num], BF, DateExc), 2)
)








Selected Metric Value Display =
SWITCH(
    [Selected Metric],
    "Contact Rate",    FORMAT([Selected Metric Value Num]/100, "0.00%"),
    "Conversion Rate", FORMAT([Selected Metric Value Num]/100, "0.00%"),
    "Inc CASA Gain",   FORMAT([Selected Metric Value Num], "0.00") & " Cr",
    "Inc TRB Gain",    FORMAT([Selected Metric Value Num], "0.00") & " Cr"
)






Selected Metric Value Num =
VAR LMStart = DATE(YEAR(MAXX(ALL(DateDim_MSD), DateDim_MSD[Date])),
                   MONTH(MAXX(ALL(DateDim_MSD), DateDim_MSD[Date])), 1)
VAR SixBack = EOMONTH(LMStart, -5)
VAR BF = FILTER('MSD Trigger Conversion',
                [Trigger_display] = 1 &&
                [PROD_display] = 1 &&
                [OBJ_display] = 1)
VAR DateInc = FILTER(ALL(DateDim_MSD), DateDim_MSD[Date] >= SixBack && DateDim_MSD[Date] <= EOMONTH(LMStart, 0))
VAR DateExc = FILTER(ALL(DateDim_MSD), DateDim_MSD[Date] >= SixBack && DateDim_MSD[Date] < LMStart)
RETURN
SWITCH(
    [Selected Metric],
    "Contact Rate",    ROUND(CALCULATE([Contact Rate], BF, DateInc) * 100, 2),
    "Conversion Rate", ROUND(CALCULATE([Conversion %], BF, DateInc) * 100, 2),
    "Inc CASA Gain",   ROUND(CALCULATE([Inc Casa Lift_num], BF, DateExc), 2),
    "Inc TRB Gain",    ROUND(CALCULATE([Inc TRB Lift_num], BF, DateExc), 2)
)








Selected Metric Value =
VAR LMStart = DATE(YEAR(MAXX(ALL(DateDim_MSD), DateDim_MSD[Date])),
                   MONTH(MAXX(ALL(DateDim_MSD), DateDim_MSD[Date])), 1)
VAR SixBack = EOMONTH(LMStart, -5)
VAR BF = FILTER('MSD Trigger Conversion',
                [Trigger_display] = 1 &&
                [PROD_display] = 1 &&
                [OBJ_display] = 1)
VAR DateInc = FILTER(ALL(DateDim_MSD), DateDim_MSD[Date] >= SixBack && DateDim_MSD[Date] <= EOMONTH(LMStart, 0))
VAR DateExc = FILTER(ALL(DateDim_MSD), DateDim_MSD[Date] >= SixBack && DateDim_MSD[Date] < LMStart)
RETURN
SWITCH(
    [Selected Metric],
    "Contact Rate",   FORMAT(CALCULATE([Contact Rate], BF, DateInc), "0.00%"), 
    "Conversion Rate",FORMAT(CALCULATE([Conversion %], BF, DateInc), "0.00%"),
    "Inc CASA Gain",  FORMAT(CALCULATE([Inc Casa Lift_num], BF, DateExc), "0.00") & " Cr",
    "Inc TRB Gain",   FORMAT(CALCULATE([Inc TRB Lift_num], BF, DateExc), "0.00") & " Cr"
)



Selected Metric Value =
VAR LatestMonthStart =
    DATE(YEAR(MAXX(ALL(DateDim_MSD), DateDim_MSD[Date])),
         MONTH(MAXX(ALL(DateDim_MSD), DateDim_MSD[Date])),
         1
    )
VAR SixMonthsBack = EOMONTH(LatestMonthStart, -5)
VAR BaseFilter =
    FILTER('MSD Trigger Conversion',
        [Trigger_display] = 1 &&
        [PROD_display] = 1 &&
        [OBJ_display] = 1
    )
RETURN
SWITCH(
    [Selected Metric],
    "Contact Rate", CALCULATE([Contact Rate] * 100, BaseFilter,
        FILTER(ALL(DateDim_MSD), DateDim_MSD[Date] >= SixMonthsBack && DateDim_MSD[Date] <= EOMONTH(LatestMonthStart,0))),
    "Conversion Rate", CALCULATE([Conversion %] * 100, BaseFilter,
        FILTER(ALL(DateDim_MSD), DateDim_MSD[Date] >= SixMonthsBack && DateDim_MSD[Date] <= EOMONTH(LatestMonthStart,0))),
    "Inc CASA Gain", CALCULATE([Inc Casa Lift_num], BaseFilter,
        FILTER(ALL(DateDim_MSD), DateDim_MSD[Date] >= SixMonthsBack && DateDim_MSD[Date] < LatestMonthStart)),
    "Inc TRB Gain", CALCULATE([Inc TRB Lift_num], BaseFilter,
        FILTER(ALL(DateDim_MSD), DateDim_MSD[Date] >= SixMonthsBack && DateDim_MSD[Date] < LatestMonthStart))
)







Selected Metric Value =
VAR LatestMonth = EOMONTH(MAXX(ALL(DateDim_MSD), DateDim_MSD[Date]), 0)
VAR SixMonthsBack = EOMONTH(LatestMonth, -5)
VAR BaseFilter =
    FILTER('MSD Trigger Conversion',
        [Trigger_display] = 1 &&
        [PROD_display] = 1 &&
        [OBJ_display] = 1
    )
RETURN
SWITCH(
    [Selected Metric],
    "Contact Rate", CALCULATE([Contact Rate] * 100, BaseFilter,
        FILTER(ALL(DateDim_MSD), DateDim_MSD[Date] >= SixMonthsBack && DateDim_MSD[Date] <= LatestMonth)),
    "Conversion Rate", CALCULATE([Conversion %] * 100, BaseFilter,
        FILTER(ALL(DateDim_MSD), DateDim_MSD[Date] >= SixMonthsBack && DateDim_MSD[Date] <= LatestMonth)),
    "Inc CASA Gain", CALCULATE([Inc Casa Lift_num], BaseFilter,
        FILTER(ALL(DateDim_MSD), DateDim_MSD[Date] >= SixMonthsBack && DateDim_MSD[Date] < LatestMonth)),
    "Inc TRB Gain", CALCULATE([Inc TRB Lift_num], BaseFilter,
        FILTER(ALL(DateDim_MSD), DateDim_MSD[Date] >= SixMonthsBack && DateDim_MSD[Date] < LatestMonth))
)





Selected Metric Value :=
VAR M = SELECTEDVALUE('MSD Trigger Conversion'[trg_month])
VAR AXM = EOMONTH(DATE(2000+RIGHT(M,2),
    SWITCH(LEFT(M,3),"Jan",1,"Feb",2,"Mar",3,"Apr",4,"May",5,"Jun",6,"Jul",7,"Aug",8,"Sep",9,"Oct",10,"Nov",11,"Dec",12)),0)
VAR LM  = EOMONTH(CALCULATE(MAX(DateDim_MSD[Date]),ALL(DateDim_MSD)),0)
VAR In6 = AXM >= EOMONTH(LM,-5) && AXM <= LM
RETURN
SWITCH(
    [Selected Metric],
    "Contact Rate",    IF(In6,[Contact Rate]*100),
    "Conversion Rate", IF(In6,[Conversion %]*100),
    "Inc CASA Gain",   IF(In6 && AXM<>LM,[Inc Casa Lift_num]),
    "Inc TRB Gain",    IF(In6 && AXM<>LM,[Inc TRB Lift_num])
)



Selected Metric Value :=
VAR FactMonth = VALUES ( 'MSD Trigger Conversion'[trg_month] )
VAR LM =
    EOMONTH (
        CALCULATE (
            MAX ( DateDim_MSD[Date] ),
            TREATAS ( FactMonth, FORMAT ( DateDim_MSD[Date], "MMM-yy" ) ),
            ALL ( DateDim_MSD )
        ), 0
    )
VAR AXM =
    EOMONTH (
        CALCULATE (
            MAX ( DateDim_MSD[Date] ),
            TREATAS ( FactMonth, FORMAT ( DateDim_MSD[Date], "MMM-yy" ) )
        ), 0
    )
VAR In6 = AXM >= EOMONTH ( LM, -5 ) && AXM <= LM
RETURN
SWITCH (
    [Selected Metric],
    "Contact Rate",    IF ( In6, [Contact Rate] * 100 ),
    "Conversion Rate", IF ( In6, [Conversion %] * 100 ),
    "Inc CASA Gain",   IF ( In6 && AXM <> LM, [Inc Casa Lift_num] ),
    "Inc TRB Gain",    IF ( In6 && AXM <> LM, [Inc TRB Lift_num] )
)



Selected Metric Value :=
VAR LM =
    EOMONTH (
        CALCULATE (
            MAX ( DateDim_MSD[Date] ),
            TREATAS ( VALUES ( 'MSD Trigger Conversion'[trg_month] ), DateDim_MSD[trg_month] ),
            ALL ( DateDim_MSD )
        ), 0
    )
VAR AXM =
    EOMONTH (
        CALCULATE (
            MAX ( DateDim_MSD[Date] ),
            TREATAS ( VALUES ( 'MSD Trigger Conversion'[trg_month] ), DateDim_MSD[trg_month] )
        ), 0
    )
VAR In6 = AXM >= EOMONTH ( LM, -5 ) && AXM <= LM
RETURN
SWITCH (
    [Selected Metric],
    "Contact Rate",    IF ( In6, [Contact Rate] * 100 ),
    "Conversion Rate", IF ( In6, [Conversion %] * 100 ),
    "Inc CASA Gain",   IF ( In6 && AXM <> LM, [Inc Casa Lift_num] ),
    "Inc TRB Gain",    IF ( In6 && AXM <> LM, [Inc TRB Lift_num] )
)







Selected Metric Value :=
VAR LatestMonth =
    EOMONTH ( CALCULATE ( MAX ( DateDim_MSD[Date] ), ALL ( DateDim_MSD ) ), 0 )
VAR SixMonthsBack = EOMONTH ( LatestMonth, -5 )
VAR AxisMonth = EOMONTH ( MAX ( DateDim_MSD[Date] ), 0 )
VAR InLast6 = AxisMonth >= SixMonthsBack && AxisMonth <= LatestMonth

RETURN
SWITCH (
    [Selected Metric],
    "Contact Rate",     IF ( InLast6, [Contact Rate] * 100 ),
    "Conversion Rate",  IF ( InLast6, [Conversion %] * 100 ),
    "Inc CASA Gain",    IF ( InLast6 && AxisMonth <> LatestMonth, [Inc Casa Lift_num] ),
    "Inc TRB Gain",     IF ( InLast6 && AxisMonth <> LatestMonth, [Inc TRB Lift_num] )
)





Selected Metric Value =
VAR LatestMonth =
    EOMONTH(
        CALCULATE( MAX ( DateDim_MSD[Date] ), ALL ( DateDim_MSD ) ),
        0
    )
VAR SixMonthsBack =
    EOMONTH( LatestMonth, -5 )            -- last 6 months window

RETURN
SWITCH (
    [Selected Metric],

    "Contact Rate",
        CALCULATE (
            [Contact Rate] * 100,
            FILTER (
                ALL ( DateDim_MSD ),
                DateDim_MSD[Date] >= SixMonthsBack
                    && DateDim_MSD[Date] <= LatestMonth        -- include latest
            )
        ),

    "Conversion Rate",
        CALCULATE (
            [Conversion %] * 100,
            FILTER (
                ALL ( DateDim_MSD ),
                DateDim_MSD[Date] >= SixMonthsBack
                    && DateDim_MSD[Date] <= LatestMonth        -- include latest
            )
        ),

    "Inc CASA Gain",
        CALCULATE (
            [Inc Casa Lift_num],
            FILTER (
                ALL ( DateDim_MSD ),
                DateDim_MSD[Date] >= SixMonthsBack
                    && DateDim_MSD[Date] < LatestMonth         -- EXCLUDE latest
            )
        ),

    "Inc TRB Gain",
        CALCULATE (
            [Inc TRB Lift_num],
            FILTER (
                ALL ( DateDim_MSD ),
                DateDim_MSD[Date] >= SixMonthsBack
                    && DateDim_MSD[Date] < LatestMonth         -- EXCLUDE latest
            )
        ),

    BLANK ()
)




Selected Metric Value =
VAR LatestMonth =
    EOMONTH( MAX( 'Date'[Date] ), 0 )
VAR SixMonthsBack =
    EOMONTH( LatestMonth, -5 ) -- This makes it last 6 months including current

RETURN
SWITCH(
    [Selected Metric],

    "Contact Rate",
        CALCULATE(
            [Contact Rate] * 100,
            'Date'[Date] >= SixMonthsBack
        ),

    "Conversion Rate",
        CALCULATE(
            [Conversion %] * 100,
            'Date'[Date] >= SixMonthsBack
        ),

    "Inc CASA Gain",
        CALCULATE(
            [Inc Casa Lift_num],
            'Date'[Date] >= SixMonthsBack &&
            'Date'[Date] < LatestMonth -- exclude latest month
        ),

    "Inc TRB Gain",
        CALCULATE(
            [Inc TRB Lift_num],
            'Date'[Date] >= SixMonthsBack &&
            'Date'[Date] < LatestMonth
        ),

    BLANK()
)





Pre_Post_Card :=
VAR BaseFilter =
    FILTER (
        'MSD Trigger Conversion',
        [Trigger_display] = 1
            && [PROD_display] = 1
            && [OBJ_display] = 1
            && 'MSD Trigger Conversion'[Contacted_Flag] = 1
    )
VAR AvgPre  =
    CALCULATE ( AVERAGE ( 'MSD Trigger Conversion'[Pre_TPPC] ),  BaseFilter )
VAR AvgPost =
    CALCULATE ( AVERAGE ( 'MSD Trigger Conversion'[Post_TPPC] ), BaseFilter )
VAR ValueDiff = AvgPre - AvgPost
VAR ValuePct  = DIVIDE ( ValueDiff, AvgPre )        -- handles /0 safely
RETURN
IF (
    ISBLANK ( AvgPre ),
    BLANK(),
    FORMAT ( ValueDiff / 10000000, "#,0" ) & " Cr (" &
    FORMAT ( ValuePct, "0.0%" ) & ")"
)








Hi Pranil,

We started the MSD dashboard with the initial ask to create different tasks for slicers and a few key metrics. As discussed, we planned to share the first cut by 25th July, and that version was ready on time.

However, there were some challenges:
	•	Slicer logic changes: Initially, the requirement was to use consolidated slicers, but later it was changed to individual slicers. This required redesigning the entire approach in Power BI. Due to this change, all related formulas and matrix structures had to be updated.
	•	Complex metrics: The requested metrics are advanced, requiring detailed validations. We have also calculated outliers and incremental TRBs.
	•	Data discrepancies: While the Power BI logic was working fine, the numbers did not match with your SES logic output, as SAS is calculating differently. Resolving these discrepancies took additional effort.

Currently, we are delivering based on the evolved requirements, which have become a highly customized, report-level Power BI view. I have been providing regular updates (daily or on alternate days), and there has been continuous progress.

At present, I’m working on the beautification and overall look and feel of the dashboard. By tomorrow morning, the dashboard will be ready for validation — you can validate the numbers at that stage. I’ll aim to complete the final look and feel by tomorrow, but if not, it will be finalized early next week.

The last and current weeks have been particularly occupied due to multiple critical priorities, including BAU activities and resolving discrepancies in brand sales MIS numbers. As Kennedy already mentioned, this is why the dashboard work has been deprioritized for this short week.

To clarify — the timeline impact is not due to delays, but rather due to the evolving requirements and the addition of new metrics and customizations during development.

Thanks,
[Your Name]









Conversion % :=
VAR BaseFilter =
    FILTER(
        'MSD Trigger Conversion',
        [Trigger_display] = 1 &&
        [PROD_display]    = 1 &&
        [OBJ_display]     = 1 &&
        'MSD Trigger Conversion'[Contacted_Flag] = 1   -- keep if needed
    )
RETURN
DIVIDE(
    CALCULATE([Total Sales Count], BaseFilter),
    CALCULATE([Leads Generated],  BaseFilter)
)





Conversion % :=
VAR SalesCnt :=
    CALCULATE(
          SUM('MSD Trigger Conversion'[AIF_SALES_COUNT])
        + SUM('MSD Trigger Conversion'[CARD_SALES_COUNT])
        + SUM('MSD Trigger Conversion'[GI_SALES_COUNT])
        + SUM('MSD Trigger Conversion'[HML_SALES_COUNT])
        + SUM('MSD Trigger Conversion'[INV_SALES_COUNT])
        + SUM('MSD Trigger Conversion'[LI_SALES_COUNT])
        + SUM('MSD Trigger Conversion'[PIL_SALES_COUNT])
        + SUM('MSD Trigger Conversion'[PMS_SALES_COUNT])
        + SUM('MSD Trigger Conversion'[TMD_SALES_COUNT]),
        FILTER(
            'MSD Trigger Conversion',
            [Trigger_display] = 1 &&
            [PROD_display]    = 1 &&
            [OBJ_display]     = 1
        ),
        'MSD Trigger Conversion'[Contacted_Flag] = 1
    )
VAR Leads :=
    CALCULATE(
        [Leads Generated],
        FILTER(
            'MSD Trigger Conversion',
            [Trigger_display] = 1 &&
            [PROD_display]    = 1 &&
            [OBJ_display]     = 1
        ),
        'MSD Trigger Conversion'[Contacted_Flag] = 1
    )
RETURN
DIVIDE(SalesCnt, Leads)








Total Xsell :=
VAR XValue =
      SUM('MSD Trigger Conversion'[AIF_SALES_VALUE])
    + SUM('MSD Trigger Conversion'[CARD_SALES_VALUE])
    + SUM('MSD Trigger Conversion'[GI_SALES_VALUE])
    + SUM('MSD Trigger Conversion'[HML_SALES_VALUE])
    + SUM('MSD Trigger Conversion'[INV_SALES_VALUE])
    + SUM('MSD Trigger Conversion'[LI_SALES_VALUE])
    + SUM('MSD Trigger Conversion'[PIL_SALES_VALUE])
    + SUM('MSD Trigger Conversion'[PMS_SALES_VALUE])
    + SUM('MSD Trigger Conversion'[TMD_SALES_VALUE])
VAR XFiltered :=
    CALCULATE(
        XValue,
        FILTER(
            'MSD Trigger Conversion',
            [Trigger_display] = 1 &&
            [PROD_display]    = 1 &&
            [OBJ_display]     = 1
        ),
        'MSD Trigger Conversion'[Contacted_Flag] = 1
    )
RETURN
"₹ " & FORMAT(DIVIDE(XFiltered, 10000000), "0.00") & " Cr"






A Power BI dashboard has already been built in PROD. Some enhancements to the report view have been completed, and we now need to publish it with the new updates.








Xsell Product Sales Value Cr =
VAR SelectedProduct = SELECTEDVALUE('PRODUCT SELECTOR'[Metric])
VAR ShowFlag =
    [Trigger_display] = 1 &&
    [PROD_display] = 1 &&
    [OBJ_display] = 1

VAR RawValue =
    SWITCH(
        TRUE(),
        ShowFlag && SelectedProduct = "TMD",
            CALCULATE(SUM('MSD Trigger Conversion'[TMD_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        ShowFlag && SelectedProduct = "INV",
            CALCULATE(SUM('MSD Trigger Conversion'[INV_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        ShowFlag && SelectedProduct = "LI/GI",
            CALCULATE(SUM('MSD Trigger Conversion'[LI_GI_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        ShowFlag && SelectedProduct = "PIL",
            CALCULATE(SUM('MSD Trigger Conversion'[PIL_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        ShowFlag && SelectedProduct = "AIF/PMS",
            CALCULATE(SUM('MSD Trigger Conversion'[AIF_PMS_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        ShowFlag && SelectedProduct = "CARD",
            CALCULATE(SUM('MSD Trigger Conversion'[CARD_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        ShowFlag && SelectedProduct = "HML",
            CALCULATE(SUM('MSD Trigger Conversion'[HML_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        ShowFlag && SelectedProduct = "PREM CARD",
            CALCULATE(SUM('MSD Trigger Conversion'[PREMIER_CARD_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        BLANK()
    )

VAR FinalValue = DIVIDE(RawValue, 10000000)

RETURN
    IF(ISBLANK(FinalValue) || FinalValue <= 0,
        "₹0 Cr",
        "₹" & FORMAT(FinalValue, "0.00") & " Cr"
    )






Xsell Product Sales Value Cr =
VAR SelectedProduct = SELECTEDVALUE('PRODUCT SELECTOR'[Metric])
VAR RawValue =
    IF (
        [Trigger_display] = 1 &&
        [PROD_display] = 1 &&
        [OBJ_display] = 1,
        SWITCH (
            SelectedProduct,
            "TMD", CALCULATE(SUM('MSD Trigger Conversion'[TMD_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),
            "INV", CALCULATE(SUM('MSD Trigger Conversion'[INV_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),
            "LI/GI", CALCULATE(SUM('MSD Trigger Conversion'[LI_GI_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),
            "PIL", CALCULATE(SUM('MSD Trigger Conversion'[PIL_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),
            "AIF/PMS", CALCULATE(SUM('MSD Trigger Conversion'[AIF_PMS_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),
            "CARD", CALCULATE(SUM('MSD Trigger Conversion'[CARD_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),
            "HML", CALCULATE(SUM('MSD Trigger Conversion'[HML_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),
            "PREM CARD", CALCULATE(SUM('MSD Trigger Conversion'[PREMIER_CARD_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),
            BLANK()
        )
    )
VAR FinalValue = DIVIDE(RawValue, 10000000)

RETURN
    IF(FinalValue <= 0, "₹0 Cr", "₹" & FORMAT(FinalValue, "0.00") & " Cr")





Xsell Product Sales Value Cr =
VAR SelectedProduct = SELECTEDVALUE('PRODUCT SELECTOR'[Metric])
VAR SalesColumn =
    SWITCH(
        SelectedProduct,
        "TMD", 'MSD Trigger Conversion'[TMD_SALES_VALUE],
        "INV", 'MSD Trigger Conversion'[INV_SALES_VALUE],
        "LI/GI", 'MSD Trigger Conversion'[LI_GI_SALES_VALUE],
        "PIL", 'MSD Trigger Conversion'[PIL_SALES_VALUE],
        "AIF/PMS", 'MSD Trigger Conversion'[AIF_PMS_SALES_VALUE],
        "CARD", 'MSD Trigger Conversion'[CARD_SALES_VALUE],
        "HML", 'MSD Trigger Conversion'[HML_SALES_VALUE],
        "PREM CARD", 'MSD Trigger Conversion'[PREMIER_CARD_SALES_VALUE],
        BLANK()
    )
VAR RawValue =
    IF(
        [Trigger_display] = 1 &&
        [PROD_display] = 1 &&
        [OBJ_display] = 1,
        CALCULATE(
            SUMX('MSD Trigger Conversion', SalesColumn),
            'MSD Trigger Conversion'[Contacted_Flag] = 1
        )
    )
VAR FinalValue = DIVIDE(RawValue, 10000000)

RETURN
    IF(FinalValue <= 0, "₹0 Cr", "₹" & FORMAT(FinalValue, "0.00") & " Cr")




Xsell Product Sales Value Cr =
VAR SelectedProduct = SELECTEDVALUE('PRODUCT SELECTOR'[Metric])
VAR RawValue =
    SWITCH (
        SelectedProduct,
        "TMD", CALCULATE(SUM('MSD Trigger Conversion'[TMD_SALES_VALUE]),
                         'MSD Trigger Conversion'[Contacted_Flag] = 1,
                         'Trigger Display'[Trigger_display] = 1,
                         'Trigger Display'[PROD_display] = 1,
                         'Trigger Display'[OBJ_display] = 1),
                         
        "INV", CALCULATE(SUM('MSD Trigger Conversion'[INV_SALES_VALUE]),
                         'MSD Trigger Conversion'[Contacted_Flag] = 1,
                         'Trigger Display'[Trigger_display] = 1,
                         'Trigger Display'[PROD_display] = 1,
                         'Trigger Display'[OBJ_display] = 1),

        "LI/GI", CALCULATE(SUM('MSD Trigger Conversion'[LI_GI_SALES_VALUE]),
                           'MSD Trigger Conversion'[Contacted_Flag] = 1,
                           'Trigger Display'[Trigger_display] = 1,
                           'Trigger Display'[PROD_display] = 1,
                           'Trigger Display'[OBJ_display] = 1),

        "PIL", CALCULATE(SUM('MSD Trigger Conversion'[PIL_SALES_VALUE]),
                         'MSD Trigger Conversion'[Contacted_Flag] = 1,
                         'Trigger Display'[Trigger_display] = 1,
                         'Trigger Display'[PROD_display] = 1,
                         'Trigger Display'[OBJ_display] = 1),

        "AIF/PMS", CALCULATE(SUM('MSD Trigger Conversion'[AIF_PMS_SALES_VALUE]),
                             'MSD Trigger Conversion'[Contacted_Flag] = 1,
                             'Trigger Display'[Trigger_display] = 1,
                             'Trigger Display'[PROD_display] = 1,
                             'Trigger Display'[OBJ_display] = 1),

        "CARD", CALCULATE(SUM('MSD Trigger Conversion'[CARD_SALES_VALUE]),
                          'MSD Trigger Conversion'[Contacted_Flag] = 1,
                          'Trigger Display'[Trigger_display] = 1,
                          'Trigger Display'[PROD_display] = 1,
                          'Trigger Display'[OBJ_display] = 1),

        "HML", CALCULATE(SUM('MSD Trigger Conversion'[HML_SALES_VALUE]),
                         'MSD Trigger Conversion'[Contacted_Flag] = 1,
                         'Trigger Display'[Trigger_display] = 1,
                         'Trigger Display'[PROD_display] = 1,
                         'Trigger Display'[OBJ_display] = 1),

        "PREM CARD", CALCULATE(SUM('MSD Trigger Conversion'[PREMIER_CARD_SALES_VALUE]),
                               'MSD Trigger Conversion'[Contacted_Flag] = 1,
                               'Trigger Display'[Trigger_display] = 1,
                               'Trigger Display'[PROD_display] = 1,
                               'Trigger Display'[OBJ_display] = 1),

        0
    )
VAR FinalValue = DIVIDE(RawValue, 10000000)

RETURN
    IF(FinalValue <= 0, "₹0 Cr", "₹" & FORMAT(FinalValue, "0.00") & " Cr")






Xsell Product Sales Value Cr =
VAR SelectedProduct = SELECTEDVALUE('PRODUCT SELECTOR'[Metric])
VAR SalesColumn =
    SWITCH (
        SelectedProduct,
        "TMD", 'MSD Trigger Conversion'[TMD_SALES_VALUE],
        "INV", 'MSD Trigger Conversion'[INV_SALES_VALUE],
        "LI/GI", 'MSD Trigger Conversion'[LI_GI_SALES_VALUE],
        "PIL", 'MSD Trigger Conversion'[PIL_SALES_VALUE],
        "AIF/PMS", 'MSD Trigger Conversion'[AIF_PMS_SALES_VALUE],
        "CARD", 'MSD Trigger Conversion'[CARD_SALES_VALUE],
        "HML", 'MSD Trigger Conversion'[HML_SALES_VALUE],
        "PREM CARD", 'MSD Trigger Conversion'[PREMIER_CARD_SALES_VALUE],
        BLANK()
    )
VAR RawValue =
    CALCULATE (
        SUMX('MSD Trigger Conversion', SalesColumn),
        'MSD Trigger Conversion'[Contacted_Flag] = 1,
        'Trigger Display'[Trigger_display] = 1,
        'Trigger Display'[PROD_display] = 1,
        'Trigger Display'[OBJ_display] = 1
    )
VAR FinalValue = DIVIDE(RawValue, 10000000)  -- Convert to ₹ Cr

RETURN
    IF (
        FinalValue <= 0,
        "₹0 Cr",
        "₹" & FORMAT(FinalValue, "0.00") & " Cr"
    )





Contact Rate =
VAR BF = FILTER('MSD Trigger Conversion', [Trigger_display] = 1 && [PROD_display] = 1 && [OBJ_display] = 1)
RETURN
DIVIDE(
    CALCULATE(COUNTROWS('MSD Trigger Conversion'), BF, 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1),
    CALCULATE(COUNTROWS('MSD Trigger Conversion'), BF),
    0
)





Xsell Product Sales Count =
VAR SelectedProduct = SELECTEDVALUE('PRODUCT SELECTOR'[Metric])

// Common filter block used for all products
VAR BaseFilter =
    FILTER(
        'MSD Trigger Conversion',
        [Trigger_display] = 1 &&
        [PROD_display] = 1 &&
        [OBJ_display] = 1 &&
        'MSD Trigger Conversion'[Contacted_Flag] = 1
    )

VAR RawCount =
    SWITCH(
        TRUE(),

        SelectedProduct = "TMD", 
            CALCULATE(SUM('MSD Trigger Conversion'[TMD_SALES_COUNT]), BaseFilter),

        SelectedProduct = "INV", 
            CALCULATE(SUM('MSD Trigger Conversion'[INV_SALES_COUNT]), BaseFilter),

        SelectedProduct = "LI/GI", 
            CALCULATE(SUM('MSD Trigger Conversion'[LI_GI_SALES_COUNT]), BaseFilter),

        SelectedProduct = "PIL", 
            CALCULATE(SUM('MSD Trigger Conversion'[PIL_SALES_COUNT]), BaseFilter),

        SelectedProduct = "AIF/PMS", 
            CALCULATE(SUM('MSD Trigger Conversion'[AIF_PMS_SALES_COUNT]), BaseFilter),

        SelectedProduct = "HML", 
            CALCULATE(SUM('MSD Trigger Conversion'[HML_SALES_COUNT]), BaseFilter),

        SelectedProduct = "CARD", 
            CALCULATE(SUM('MSD Trigger Conversion'[CARD_SALES_COUNT]), BaseFilter),

        SelectedProduct = "PREM CARD", 
            CALCULATE(SUM('MSD Trigger Conversion'[PREMIER_CARD_SALES_COUNT]), BaseFilter),

        0
    )

RETURN
IF(RawCount <= 0, 0, RawCount)







Contact Rate =
DIVIDE(
    CALCULATE(COUNTROWS('MSD Trigger Conversion'), 'MSD Trigger Conversion'[CONTACTED_FLAG] = 1),
    COUNTROWS('MSD Trigger Conversion'),
    0
)






Leads Generated =
CALCULATE(
    COUNT('MSD Trigger Conversion'[GA_CUST_ID]),

    // Apply Trigger Name selected in slicer
    TREATAS(
        VALUES('Trigger Slicer Table'[Trigger Name]),
        'MSD Trigger Conversion'[Trigger Name]
    ),

    // Apply Trigger_display flag
    TREATAS(
        VALUES('Trigger Slicer Table'[Trigger_display]),
        'MSD Trigger Conversion'[Trigger_display]
    ),

    // Apply PROD_display flag
    TREATAS(
        VALUES('Trigger Slicer Table'[PROD_display]),
        'MSD Trigger Conversion'[PROD_display]
    ),

    // Apply OBJ_display flag
    TREATAS(
        VALUES('Trigger Slicer Table'[OBJ_display]),
        'MSD Trigger Conversion'[OBJ_display]
    )
)






Leads Generated =
CALCULATE(
    COUNT('MSD Trigger Conversion'[GA_CUST_ID]),
    'MSD Trigger Conversion'[Trigger_display] = 1,
    TREATAS(
        VALUES('Trigger Slicer Table'[Trigger Name]), 
        'MSD Trigger Conversion'[Trigger Name]
    ),
    TREATAS(
        VALUES('Trigger Slicer Table'[PROD_display]), 
        'MSD Trigger Conversion'[PROD_display]
    ),
    TREATAS(
        VALUES('Trigger Slicer Table'[OBJ_display]), 
        'MSD Trigger Conversion'[OBJ_display]
    )
)






Hi Pavneet,

There are two RMS requests raised under two different IDs — one with the joint ID and the other with the sole ID.
Due to the joint ID, the system is resolving it to the primary holder, which is why the survey appears to have been triggered twice.
This occurred because the RMS was raised separately for both IDs.







Group = 
SWITCH(TRUE(),
    -- DBMI_RM group
    COMPRESS(UPPER('YourTable'[ROLE])) IN {"FRM","PPRM","SPRM","PRMCSUITE","EPRM","GPRM"}, "DBMI_RM",

    -- DBMI_GPB_RM
    COMPRESS(UPPER('YourTable'[ROLE])) IN {"TOP_TIER_RM","GPB_RM"}, "DBMI_GPB_RM",

    -- RM_OT
    COMPRESS(UPPER('YourTable'[ROLE])) IN {"RM-OT"}, "DBMI_OT_RM",

    -- DBS_RM
    COMPRESS(UPPER('YourTable'[ROLE])) IN {"DBS_RM"}, "DBMI_DBS_RM",

    -- PFC
    COMPRESS(UPPER('YourTable'[ROLE])) IN {"PFC"}, "DBMI_PFC_RM",

    -- RBB_RM
    COMPRESS(UPPER('YourTable'[ROLE])) IN {"RBB_RM"}, "DBMI_RBB_RM",

    -- BAS_TG etc.
    COMPRESS(UPPER('YourTable'[ROLE])) IN {"INS","BAS","REGIONALSUPPORT","BAS_LG","BAS_TG","BAS_GPB"}, "DBMI_BAS",

    -- DBMI_SM
    COMPRESS(UPPER('YourTable'[ROLE])) IN {"MANAGERBAS","REGIONALMANAGERBAS","BSM"}, "DBMI_SM",

    -- DBMI_GPB_RH
    COMPRESS(UPPER('YourTable'[ROLE])) IN {"TOPTIERREGIONALHEAD","GBREGIONALHEAD"}, "DBMI_GPB_RH",

    -- DBMI_PSM
    COMPRESS(UPPER('YourTable'[ROLE])) IN {"PSE","UB","JR_UB","SR_UB","SPE2","PSM","PSM1","TOP_TIER_PSM","MIHY","GPB_PSM"}, "DBMI_PSM",

    -- DBMI_CSM
    COMPRESS(UPPER('YourTable'[ROLE])) IN {"CSM","CSM_PSM","CSM_PSE","CSM_UB","UB_LEADER"}, "DBMI_CSM",

    -- DBMI_DBM
    COMPRESS(UPPER('YourTable'[ROLE])) = "DBM", "DBMI_DBM",

    -- Default case
    "None"
)








Total Sales Last 6 Months =
CALCULATE(
    SUM('SalesData'[SalesAmount]),
    FILTER(
        'DateTable',
        'DateTable'[Date] >= EOMONTH(MAX('SalesData'[TransactionDate]), -5) + 1 &&
        'DateTable'[Date] <= MAX('SalesData'[TransactionDate])
    )
)





Hi Shantanu,

In my current layout, I’m using three different text slicers. The issue I’m facing is that when I search using one slicer, it does not filter or interact with the others. This is limiting my ability to apply cross-slicer filtering.

Let me know if there’s a workaround or configuration to resolve this.










Product Value Title =
VAR Product = SELECTEDVALUE('PRODUCT SELECTOR'[Metric])
RETURN Product & " Sales Value (₹ Cr)"


Product Gain Title =
VAR Product = SELECTEDVALUE('PRODUCT SELECTOR'[Metric])
RETURN Product & " Gain (₹ Cr)"





Product Count Title =
VAR Product = SELECTEDVALUE('PRODUCT SELECTOR'[Metric])
RETURN Product & " Sales Count"






Selected Product Sales Count = 
VAR SelectedProduct = SELECTEDVALUE('PRODUCT SELECTOR'[Metric])

VAR RawCount =
    SWITCH(
        TRUE(),
        SelectedProduct = "TMD",
            CALCULATE(SUM('MSD Trigger Conversion'[TMD_SALES_COUNT]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        SelectedProduct = "INV",
            CALCULATE(SUM('MSD Trigger Conversion'[INV_SALES_COUNT]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        SelectedProduct = "INS",
            CALCULATE(SUM('MSD Trigger Conversion'[LT_GI_SALES_COUNT]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        SelectedProduct = "PIL",
            CALCULATE(SUM('MSD Trigger Conversion'[PIL_SALES_COUNT]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        SelectedProduct = "AIF_PMS",
            CALCULATE(SUM('MSD Trigger Conversion'[AIF_PMS_SALES_COUNT]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        0
    )

RETURN IF(RawCount <= 0, 0, RawCount)







Formatted Product Gain =
VAR SelectedProduct = SELECTEDVALUE('PRODUCT SELECTOR'[Metric])
VAR RawValue =
    SWITCH(
        TRUE(),
        SelectedProduct = "TMD", [TMD Gain],
        SelectedProduct = "INV", [Investment Gain],
        SelectedProduct = "INS", [Insurance Gain],
        SelectedProduct = "PIL", [PIL Gain],
        SelectedProduct = "CARD", [CARD Gain],
        SelectedProduct = "AIF PMS", [AIF PMS Gain]
    )
VAR FinalValue = IF(RawValue <= 0, 0, RawValue)
RETURN
    FORMAT(FinalValue, "₹#,##0.00") & " Cr"








Selected Product Gain Cr Formatted = 
VAR SelectedProduct = SELECTEDVALUE('PRODUCT SELECTOR'[Metric])

VAR RawGain =
    SWITCH(
        TRUE(),
        SelectedProduct = "TMD",
            CALCULATE(SUM('MSD Trigger Conversion'[TMD_GAIN]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        SelectedProduct = "INV",
            CALCULATE(SUM('MSD Trigger Conversion'[INV_GAIN]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        SelectedProduct = "INS",
            CALCULATE(SUM('MSD Trigger Conversion'[LT_GI_GAIN]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        SelectedProduct = "PIL",
            CALCULATE(SUM('MSD Trigger Conversion'[PIL_GAIN]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        SelectedProduct = "AIF_PMS",
            CALCULATE(SUM('MSD Trigger Conversion'[AIF_PMS_GAIN]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        0
    )

VAR FinalGain = DIVIDE(RawGain, 10000000)   -- Convert to ₹ Cr

RETURN 
    IF(FinalGain <= 0, 
        "₹0 Cr", 
        "₹" & FORMAT(FinalGain, "0.00") & " Cr"
    )




Selected Product Sales Value Cr = 
VAR SelectedProduct = SELECTEDVALUE('PRODUCT SELECTOR'[Metric])

VAR RawValue =
    SWITCH(
        TRUE(),
        SelectedProduct = "TMD",
            CALCULATE(SUM('MSD Trigger Conversion'[TMD_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        SelectedProduct = "INV",
            CALCULATE(SUM('MSD Trigger Conversion'[INV_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        SelectedProduct = "INS",
            CALCULATE(SUM('MSD Trigger Conversion'[LT_GI_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        SelectedProduct = "PIL",
            CALCULATE(SUM('MSD Trigger Conversion'[PIL_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        SelectedProduct = "AIF_PMS",
            CALCULATE(
                SUM('MSD Trigger Conversion'[AIF_PMS_SALES_VALUE]),
                'MSD Trigger Conversion'[Contacted_Flag] = 1
            ),

        0
    )

VAR FinalValue = DIVIDE(RawValue, 10000000)  -- convert to ₹ Cr

RETURN IF(FinalValue <= 0, 0, FinalValue)





Selected Product Sales Value = 
VAR SelectedProduct = SELECTEDVALUE('PRODUCT SELECTOR'[Metric])
VAR RawValue =
    SWITCH(
        TRUE(),
        SelectedProduct = "TMD", 
            CALCULATE(SUM('MSD Trigger Conversion'[TMD_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted Flag] = 1),

        SelectedProduct = "INV", 
            CALCULATE(SUM('MSD Trigger Conversion'[INV_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted Flag] = 1),

        SelectedProduct = "CASA", 
            CALCULATE(SUM('MSD Trigger Conversion'[CASA_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted Flag] = 1),

        SelectedProduct = "INS", 
            CALCULATE(SUM('MSD Trigger Conversion'[INS_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted Flag] = 1),

        SelectedProduct = "PIL", 
            CALCULATE(SUM('MSD Trigger Conversion'[PIL_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted Flag] = 1),

        SelectedProduct = "AIF_PMS", 
            CALCULATE(
                SUM('MSD Trigger Conversion'[AIF_SALES_VALUE]) + 
                SUM('MSD Trigger Conversion'[PMS_SALES_VALUE]),
                'MSD Trigger Conversion'[Contacted Flag] = 1
            ),

        0
    )
VAR FinalValue = DIVIDE(RawValue, 10000000)  -- convert to ₹ Cr
RETURN IF(FinalValue <= 0, 0, FinalValue)










TMD_Uplift_Impact_Cr =
VAR ContactedSales = CALCULATE(SUM('MSD Trigger Conversion'[TMD_Sales_Count]), 'MSD Trigger Conversion'[Contact_Flag] = 1)
VAR NotContactedSales = CALCULATE(SUM('MSD Trigger Conversion'[TMD_Sales_Count]), 'MSD Trigger Conversion'[Contact_Flag] = 0)

VAR TotalContacted = CALCULATE(COUNTROWS('MSD Trigger Conversion'), 'MSD Trigger Conversion'[Contact_Flag] = 1)
VAR TotalNotContacted = CALCULATE(COUNTROWS('MSD Trigger Conversion'), 'MSD Trigger Conversion'[Contact_Flag] = 0)

VAR A = DIVIDE(ContactedSales, TotalContacted)
VAR B = DIVIDE(NotContactedSales, TotalNotContacted)

VAR Uplift = A - B

VAR CrossSaleValue_Contacted = CALCULATE(SUM('MSD Trigger Conversion'[TMD_X_Sell_Value]), 'MSD Trigger Conversion'[Contact_Flag] = 1)
VAR CrossSaleCount_Contacted = CALCULATE(SUM('MSD Trigger Conversion'[TMD_X_Sell_Count]), 'MSD Trigger Conversion'[Contact_Flag] = 1)

VAR AvgXsellPerCustomer = DIVIDE(CrossSaleValue_Contacted, CrossSaleCount_Contacted)

VAR FinalImpact = Uplift * AvgXsellPerCustomer * TotalContacted
VAR FinalImpactCr = FinalImpact / 10000000

RETURN
IF(
    FinalImpactCr > 0,
    FORMAT(FinalImpactCr, "₹#,##0.00\ Cr"),
    "₹0.00 Cr"
)






TMD_Uplift_Impact =
VAR ContactedSales = CALCULATE(SUM('MSD Trigger Conversion'[TMD_Sales_Count]), 'MSD Trigger Conversion'[Contact_Flag] = 1)
VAR NotContactedSales = CALCULATE(SUM('MSD Trigger Conversion'[TMD_Sales_Count]), 'MSD Trigger Conversion'[Contact_Flag] = 0)

VAR TotalContacted = CALCULATE(COUNTROWS('MSD Trigger Conversion'), 'MSD Trigger Conversion'[Contact_Flag] = 1)
VAR TotalNotContacted = CALCULATE(COUNTROWS('MSD Trigger Conversion'), 'MSD Trigger Conversion'[Contact_Flag] = 0)

VAR A = DIVIDE(ContactedSales, TotalContacted)
VAR B = DIVIDE(NotContactedSales, TotalNotContacted)

VAR Uplift = A - B

VAR CrossSaleValue_Contacted = CALCULATE(SUM('MSD Trigger Conversion'[TMD_X_Sell_Value]), 'MSD Trigger Conversion'[Contact_Flag] = 1)
VAR CrossSaleCount_Contacted = CALCULATE(SUM('MSD Trigger Conversion'[TMD_X_Sell_Count]), 'MSD Trigger Conversion'[Contact_Flag] = 1)

VAR AvgXsellPerCustomer = DIVIDE(CrossSaleValue_Contacted, CrossSaleCount_Contacted)

VAR FinalImpact = Uplift * AvgXsellPerCustomer * TotalContacted

RETURN
FinalImpact







Trigger Search Flag (Measure) = 
VAR selectedTrigger = SELECTEDVALUE(msd_trigger[Trigger Value])
RETURN
IF (
    ISBLANK(selectedTrigger),
    1,
    IF (
        CONTAINSSTRING(MAX('MSD Trigger Conversion'[Trigger_1]), selectedTrigger) ||
        CONTAINSSTRING(MAX('MSD Trigger Conversion'[Trigger_2]), selectedTrigger) ||
        CONTAINSSTRING(MAX('MSD Trigger Conversion'[Trigger_3]), selectedTrigger) ||
        CONTAINSSTRING(MAX('MSD Trigger Conversion'[Trigger_4]), selectedTrigger),
        1,
        0
    )
)








Trigger Search Flag = 
VAR selectedTrigger = SELECTEDVALUE(Msd_trigger[Trigger_Value])
RETURN
IF (
    ISBLANK(selectedTrigger),
    1,
    IF (
        COUNTROWS(
            FILTER(
                'MSD Trigger Conversion',
                CONTAINSSTRING('MSD Trigger Conversion'[TRIGGER_1], selectedTrigger) ||
                CONTAINSSTRING('MSD Trigger Conversion'[TRIGGER_2], selectedTrigger) ||
                CONTAINSSTRING('MSD Trigger Conversion'[TRIGGER_3], selectedTrigger) ||
                CONTAINSSTRING('MSD Trigger Conversion'[TRIGGER_4], selectedTrigger)
            )
        ) > 0,
        1,
        0
    )
)






Trigger Search Flag = 
VAR selectedTrigger = SELECTEDVALUE(Msd_trigger[Trigger_Value])
RETURN
IF (
    ISBLANK(selectedTrigger),
    1,
    IF (
        CONTAINSSTRING('MSD Trigger Conversion'[Trigger_1], selectedTrigger) ||
        CONTAINSSTRING('MSD Trigger Conversion'[Trigger_2], selectedTrigger) ||
        CONTAINSSTRING('MSD Trigger Conversion'[Trigger_3], selectedTrigger) ||
        CONTAINSSTRING('MSD Trigger Conversion'[Trigger_4], selectedTrigger),
        1,
        0
    )
)





Trigger Search Flag = 
VAR selectedTrigger = SELECTEDVALUE(TriggerSlicerTable[Trigger_Value])
RETURN
IF (
    ISBLANK(selectedTrigger),
    1,
    IF (
        'MSD Trigger Conversion'[Trigger_1] = selectedTrigger ||
        'MSD Trigger Conversion'[Trigger_2] = selectedTrigger ||
        'MSD Trigger Conversion'[Trigger_3] = selectedTrigger ||
        'MSD Trigger Conversion'[Trigger_4] = selectedTrigger,
        1,
        0
    )
)





Trigger Match Flag = 
VAR selectedTrigger = SELECTEDVALUE(TriggerSlicerTable[Trigger_Value])
RETURN
IF (
    ISBLANK(selectedTrigger),
    1,
    IF (
        CONTAINSSTRING(MainData[Trigger_1], selectedTrigger)
        || CONTAINSSTRING(MainData[Trigger_2], selectedTrigger)
        || CONTAINSSTRING(MainData[Trigger_3], selectedTrigger)
        || CONTAINSSTRING(MainData[Trigger_4], selectedTrigger),
        1,
        0
    )
)





Trigger Match Flag = 
VAR selectedTrigger = SELECTEDVALUE(TriggerSlicerTable[Trigger_Value])
RETURN
IF (
    ISBLANK(selectedTrigger),
    1,  -- no filter, show all
    IF (
        selectedTrigger IN {
            SELECTEDVALUE('MainData'[Trigger_1]),
            SELECTEDVALUE('MainData'[Trigger_2]),
            SELECTEDVALUE('MainData'[Trigger_3]),
            SELECTEDVALUE('MainData'[Trigger_4])
        },
        1,
        0
    )
)





ContactRate_HTML =
VAR curr = [Contact Rate]
VAR prev =
    CALCULATE(
        [Contact Rate],
        DATEADD('DateDim_MSD'[Date], -1, MONTH)
    )
VAR diff = DIVIDE(curr - prev, prev, 0)
VAR arrow = IF(
    diff > 0,
    "<span style='color:green;font-size:20px'>▲</span>",
    "<span style='color:red;font-size:20px'>▼</span>"
)
VAR percent = FORMAT(ABS(diff), "0.00%")
RETURN
"<div style='font-size:26px;font-weight:bold'>" &
FORMAT(curr, "0.00%") & "</div>" &
"<div style='font-size:16px'>" &
FORMAT(prev, "0.00%") & " (" & arrow & " " & percent & ")</div>"





ContactRate_KPI_Display =
VAR curr = [ContactRate]
VAR prev =
    CALCULATE(
        [ContactRate],
        DATEADD('Calendar'[Date], -1, MONTH)
    )
VAR diff = DIVIDE(curr - prev, prev, 0)
VAR arrow = IF(diff > 0, "▲", IF(diff < 0, "▼", "-"))
VAR percent = FORMAT(ABS(diff), "0.00%")

RETURN
FORMAT(curr, "0.00%") & UNICHAR(10) &
FORMAT(prev, "0.00%") & " (" & arrow & " " & percent & ")"





KPI_CostConversion_Display =
VAR curr = 
    CALCULATE(
        SUM('SalesData'[CostConversion]),
        'SalesData'[Month] = MAX('SalesData'[Month])
    )

VAR prev = 
    CALCULATE(
        SUM('SalesData'[CostConversion]),
        'SalesData'[Month] = 
            CALCULATE(
                MAX('SalesData'[Month]),
                FILTER(
                    ALL('SalesData'),
                    'SalesData'[Month] < MAX('SalesData'[Month])
                )
            )
    )

VAR diff = DIVIDE(curr - prev, prev, 0)

VAR arrow = IF(diff > 0, "▲", IF(diff < 0, "▼", "-"))

VAR percent = FORMAT(ABS(diff), "0.00%")

RETURN
"$" & FORMAT(curr, "#,##0") & UNICHAR(10) &
"$" & FORMAT(prev, "#,##0") & " (" & arrow & " " & percent & ")"







Dynamic Chart Title = 
"Trend of " & [Selected Metric] & 
IF(
    [Selected Metric] IN {"Contact%", "Appointment%", "Conversion%"},
    " (%)",
    " (Number)"
)




Selected Metric Format = 
SWITCH(
    [Selected Metric],
    "Contact%", FORMAT([Contact Rate], "0.00%"),
    "Appointment%", FORMAT([Appointment Rate], "0.00%"),
    "Conversion%", FORMAT([Conversion %], "0.00%"),
    "Inc Casa Lift", FORMAT([Inc Casa Lift NUM1], "#,##0"),
    "Inc TRB Lift", FORMAT([Inc TRB Lift NUM1], "#,##0"),
    BLANK()
)





Selected Metric = 
SELECTEDVALUE('SIX_MONTHS_PARAMETER'[Metric], "Contact%")


Selected Metric Value = 
SWITCH(
    [Selected Metric],
    "Contact%", [Contact Rate],
    "Appointment%", [Appointment Rate],
    "Conversion%", [Conversion %],
    "Inc Casa Lift", [Inc Casa Lift NUM1],
    "Inc TRB Lift", [Inc TRB Lift NUM1],
    BLANK()
)
SIX_MONTHS_PARAMETER = 
DATATABLE (
    "Metric", STRING,
    "Index", INTEGER,
    {
        { "Contact%", 0 },
        { "Appointment%", 1 },
        { "Conversion%", 2 },
        { "Inc Casa Lift", 3 },
        { "Inc TRB Lift", 4 }
    }
)









Hi Pranil,

This is to inform you that, as per our earlier discussion regarding the MST first cut scheduled for the 18th, we are proposing to extend the timeline.

Due to additional workstreams involving DBMI and Activity MIOS branching, we need to prioritize validation and testing to ensure proper alignment before moving to production. Since MST is an extension of the Branching Semi module, it’s essential that all dependencies are functioning correctly.

Therefore, we are planning to extend the deadline for the first cut of MST by one week — from 18th July to 25th July. The next two days are earmarked for finalizing DBMI and Activity MIOS, following which Branching Semi will be published in production. MST trigger conversion can then be added in parallel.







Hi Vandita and Vedha,

We need the details of all GI-related campaigns that were sent out over email—whether via PEGA or non-PEGA channels.
If you have the content IDs handy, could you please share them with me, ideally broken down by channel?

Thanks in advance!







%let today = %sysfunc(today());
%let last_run_num = %sysfunc(inputn(&last_run_dt, yymmdd10.));
%let days_back = %eval(&today - &last_run_num);





filename lastdate "&base_path/last_run_date.txt";

data _null_;
    infile lastdate;
    input last_run_date : yymmdd8.;
    call symputx('last_run_dt', put(last_run_date, yymmdd10.));
run;






This Week Updates
	•	NPS:
	•	Continued working on NPS-related SAS query support due to multiple ongoing issues.
	•	MSF:
	•	Developed the MSF ORG file creation code from base, as MSF is now considered a separate channel.
	•	Integrated customer data support to Permit campaigns.
	•	RNPS:
	•	Provided data support for RNPS activities and validation.
	•	Campaigns:
	•	Supported non-PEGA data issues, connected with Gupshup team to set up the process for data repush.
	•	Established a weekly process for data repush; currently awaiting Pega team’s response on backend data issues.
	•	Worked on campaign add-ons including wealth penetration, renewal credit card communications, etc.
	•	Parallelly working on Campaign Dashboard Enhancements, including the addition of Content ID to the dashboard.
	•	Sales Revenue:
	•	Provided NDB and ETB data to the global team for sales revenue reporting.
	•	CSMIS Dashboard:
	•	Completed modifications for the DBMIA metrics page on the dashboard.
	•	MSD:
	•	Worked on MSD trigger conversion code and the trigger conversion dashboard page, which is part of the MSD conversion project.
	•	Approximately 35% of the MSD dashboard work has been completed.




IF ROLE = 'CEB' 
   AND STRIP(PEOPLE_SOFT_ID) NE '' 
   AND STRIP(PEOPLE_SOFT_ID) NE '.' THEN DO;






PROC SQL;
    CREATE TABLE MSF_ORG1 AS
    SELECT a.*,

           /* Area Head mapping */
           PROPCASE(b.Planner_Name) AS Lead_Name,
           b.People_Soft_ID AS Lead_ID,
           LOWCASE(b.Planner_Ext_Email_ID) AS Lead_Email,

           /* Level 3 mapping based on cluster */
           PROPCASE(c.Planner_Name) AS Level3_Name,
           c.People_Soft_ID AS Level3_ID

    FROM MSF1 a

    /* Join for Area Head info */
    LEFT JOIN MSF1_AH b
        ON UPCASE(a.AREA) = UPCASE(b.AREA)

    /* Join for Level 3 info based on cluster */
    LEFT JOIN MSF1_AH c
        ON UPCASE(a.CLUSTER) = UPCASE(c.CLUSTER);
QUIT;






/* Step 1: Ensure MSF1_AH (Area Head table) is sorted by AREA */
PROC SORT DATA=MSF1_AH;
    BY AREA;
RUN;

/* Step 2: Sort MSF1 (main planner dataset) by AREA */
PROC SORT DATA=MSF1;
    BY AREA;
RUN;

/* Step 3: Merge Area Head info into MSF1 based on AREA */
DATA MSF_ORG1;
    MERGE MSF1 (IN=a)
          MSF1_AH (IN=b RENAME=(
              People_Soft_ID=Lead_ID
              Planner_Name=Lead_Name
              Planner_Ext_Email_ID=Lead_Email
          ));
    BY AREA;

    IF a; /* keep only records from MSF1 */

    /* Formatting for Lead Name and Email */
    Lead_Name = PROPCASE(Lead_Name);
    Lead_Email = LOWCASE(Lead_Email);

RUN;






Selected Metric Value = 
SWITCH(
    [Selected Metric],
    "Contact%", [Contact Rate],
    "Appointment%", [Appointment Rate],
    "Conversion%", [Conversion %],
    "Inc Casa Lift", [Inc Casa Lift NUM1],
    "Inc TRB Lift", [Inc TRB Lift NUM1],
    BLANK()
)






SelectedOrLatestMonth = 
VAR SelectedMonth = SELECTEDVALUE('MSG Trigger Conversion'[Month_Year_Date])
VAR LatestMonth = CALCULATE(MAX('MSG Trigger Conversion'[Month_Year_Date]), ALL('MSG Trigger Conversion'))
RETURN
IF(
    ISBLANK(SelectedMonth),
    LatestMonth,
    SelectedMonth
)





LatestMonthFlag = 
IF(
    'MSG Trigger Conversion'[Month_Year_Date] = 
        CALCULATE(MAX('MSG Trigger Conversion'[Month_Year_Date]), ALL('MSG Trigger Conversion')),
    1,
    0
)






LatestMonthFlag = 
IF(
    'YourTable'[Month_Year_Date] = CALCULATE(MAX('YourTable'[Month_Year_Date]), ALL('YourTable')),
    1,
    0
)




Month_Year_Date = 
DATE(
    2000 + VALUE(RIGHT('YourTable'[MonthYear],2)),
    SWITCH(
        LEFT('YourTable'[MonthYear],3),
        "Jan",1,
        "Feb",2,
        "Mar",3,
        "Apr",4,
        "May",5,
        "Jun",6,
        "Jul",7,
        "Aug",8,
        "Sep",9,
        "Oct",10,
        "Nov",11,
        "Dec",12,
        BLANK()
    ),
    1
)





Hi Team,

As discussed in today’s meeting, please find the minutes:
	•	Every Wednesday, we will share one automated email for each channel, resulting in a total of three emails covering Email, SMS, and WhatsApp.
	•	Each email will include the file report for each day of the week.

Additional points:
	•	In case of any missing files or below threshold cases, the respective file needs to be reposted on the same day.
	•	If there is a missing file or below threshold case due to no campaign being sent on that day, then a communication message must be shared stating that no communication was sent on that particular day.
	•	This will help us track all missing files systematically, as per the agreed process.




Inc_TRB_Lift =
VAR DiffTable_Contacted =
    ADDCOLUMNS(
        FILTER(
            'MSD Trigger Conversion',
            'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 &&
            NOT(ISBLANK('MSD Trigger Conversion'[POST_2_MON_AVG_TRB])) &&
            NOT(ISBLANK('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB]))
        ),
        "TRB_Diff", 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB] - 'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB]
    )
VAR Perc10_Contacted = PERCENTILEX.INC(DiffTable_Contacted, [TRB_Diff], 0.10)
VAR Perc95_Contacted = PERCENTILEX.INC(DiffTable_Contacted, [TRB_Diff], 0.95)
VAR Trimmed_Contacted =
    FILTER(
        DiffTable_Contacted,
        [TRB_Diff] >= Perc10_Contacted &&
        [TRB_Diff] <= Perc95_Contacted
    )
VAR Avg_Contacted = AVERAGEX(Trimmed_Contacted, [TRB_Diff])
VAR Count_Contacted = COUNTROWS(Trimmed_Contacted)

VAR DiffTable_NonContacted =
    ADDCOLUMNS(
        FILTER(
            'MSD Trigger Conversion',
            'MSD Trigger Conversion'[CONTACTED_FLAG] <> 1 &&
            NOT(ISBLANK('MSD Trigger Conversion'[POST_2_MON_AVG_TRB])) &&
            NOT(ISBLANK('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB]))
        ),
        "TRB_Diff", 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB] - 'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB]
    )
VAR Perc10_NonContacted = PERCENTILEX.INC(DiffTable_NonContacted, [TRB_Diff], 0.10)
VAR Perc95_NonContacted = PERCENTILEX.INC(DiffTable_NonContacted, [TRB_Diff], 0.95)
VAR Trimmed_NonContacted =
    FILTER(
        DiffTable_NonContacted,
        [TRB_Diff] >= Perc10_NonContacted &&
        [TRB_Diff] <= Perc95_NonContacted
    )
VAR Avg_NonContacted = AVERAGEX(Trimmed_NonContacted, [TRB_Diff])

VAR Result = 
    IF(
        Count_Contacted <> 0,
        "₹ " & FORMAT(
            MAX(0, (Avg_Contacted - Avg_NonContacted) * Count_Contacted / 10000000),
            "0.00"
        ) & " Cr",
        BLANK()
    )
RETURN
    Result








// 1. Calculated column in 'MSD Trigger Conversion'
TRB_Diff = 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB] - 'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB]

// 2. Measures
Avg_TRB_Diff_Contacted_No_Outlier =
VAR Perc10 = PERCENTILEX.INC(
    FILTER(
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 &&
        NOT(ISBLANK('MSD Trigger Conversion'[TRB_Diff]))
    ),
    'MSD Trigger Conversion'[TRB_Diff], 0.10)
VAR Perc95 = PERCENTILEX.INC(
    FILTER(
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 &&
        NOT(ISBLANK('MSD Trigger Conversion'[TRB_Diff]))
    ),
    'MSD Trigger Conversion'[TRB_Diff], 0.95)
RETURN
    AVERAGEX(
        FILTER(
            'MSD Trigger Conversion',
            'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 &&
            'MSD Trigger Conversion'[TRB_Diff] >= Perc10 &&
            'MSD Trigger Conversion'[TRB_Diff] <= Perc95
        ),
        'MSD Trigger Conversion'[TRB_Diff]
    )

Avg_TRB_Diff_NonContacted_No_Outlier =
VAR Perc10 = PERCENTILEX.INC(
    FILTER(
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[CONTACTED_FLAG] <> 1 &&
        NOT(ISBLANK('MSD Trigger Conversion'[TRB_Diff]))
    ),
    'MSD Trigger Conversion'[TRB_Diff], 0.10)
VAR Perc95 = PERCENTILEX.INC(
    FILTER(
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[CONTACTED_FLAG] <> 1 &&
        NOT(ISBLANK('MSD Trigger Conversion'[TRB_Diff]))
    ),
    'MSD Trigger Conversion'[TRB_Diff], 0.95)
RETURN
    AVERAGEX(
        FILTER(
            'MSD Trigger Conversion',
            'MSD Trigger Conversion'[CONTACTED_FLAG] <> 1 &&
            'MSD Trigger Conversion'[TRB_Diff] >= Perc10 &&
            'MSD Trigger Conversion'[TRB_Diff] <= Perc95
        ),
        'MSD Trigger Conversion'[TRB_Diff]
    )

Count_Contacted_No_Outlier =
VAR Perc10 = PERCENTILEX.INC(
    FILTER(
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 &&
        NOT(ISBLANK('MSD Trigger Conversion'[TRB_Diff]))
    ),
    'MSD Trigger Conversion'[TRB_Diff], 0.10)
VAR Perc95 = PERCENTILEX.INC(
    FILTER(
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 &&
        NOT(ISBLANK('MSD Trigger Conversion'[TRB_Diff]))
    ),
    'MSD Trigger Conversion'[TRB_Diff], 0.95)
RETURN
    CALCULATE(
        COUNT('MSD Trigger Conversion'[GA_CUST_ID]),
        'MSD Trigger Conversion'[CONTACTED_FLAG] = 1,
        'MSD Trigger Conversion'[TRB_Diff] >= Perc10,
        'MSD Trigger Conversion'[TRB_Diff] <= Perc95
    )

Inc_TRB_Lift =
VAR A = [Avg_TRB_Diff_Contacted_No_Outlier]
VAR B = [Avg_TRB_Diff_NonContacted_No_Outlier]
VAR ContactedCount = [Count_Contacted_No_Outlier]
RETURN
IF(
    ContactedCount <> 0,
    "₹ " & FORMAT(
        MAX(0, (A - B) * ContactedCount / 10000000),
        "0.00"
    ) & " Cr",
    BLANK()
)








Inc TRB Lift = 

-- Contacted Customers
VAR ContactedTop5Pct = 
    PERCENTILEX.EXC(
        FILTER(
            'MSD Trigger Conversion',
            'MSD Trigger Conversion'[CONTACTED_FLAG] = 1
        ),
        ('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] + 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB]) / 2,
        0.95
    )

VAR ContactedBottom10Pct = 
    PERCENTILEX.EXC(
        FILTER(
            'MSD Trigger Conversion',
            'MSD Trigger Conversion'[CONTACTED_FLAG] = 1
        ),
        ('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] + 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB]) / 2,
        0.10
    )

VAR ContactedFiltered =
    FILTER(
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[CONTACTED_FLAG] = 1
        && (('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] + 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB]) / 2) <= ContactedTop5Pct
        && (('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] + 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB]) / 2) >= ContactedBottom10Pct
    )

VAR ContactedAvg_Post =
    CALCULATE(
        AVERAGE('MSD Trigger Conversion'[POST_2_MON_AVG_TRB]),
        ContactedFiltered
    )

VAR ContactedAvg_Pre =
    CALCULATE(
        AVERAGE('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB]),
        ContactedFiltered
    )

VAR ContactedCount =
    CALCULATE(
        COUNT('MSD Trigger Conversion'[GA_CUST_ID]),
        ContactedFiltered
    )

----------------------------------------------------------

-- Non-Contacted Customers
VAR NonContactedTop5Pct = 
    PERCENTILEX.EXC(
        FILTER(
            'MSD Trigger Conversion',
            'MSD Trigger Conversion'[CONTACTED_FLAG] <> 1
        ),
        ('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] + 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB]) / 2,
        0.95
    )

VAR NonContactedBottom10Pct = 
    PERCENTILEX.EXC(
        FILTER(
            'MSD Trigger Conversion',
            'MSD Trigger Conversion'[CONTACTED_FLAG] <> 1
        ),
        ('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] + 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB]) / 2,
        0.10
    )

VAR NonContactedFiltered =
    FILTER(
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[CONTACTED_FLAG] <> 1
        && (('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] + 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB]) / 2) <= NonContactedTop5Pct
        && (('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] + 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB]) / 2) >= NonContactedBottom10Pct
    )

VAR NonContactedAvg_Post =
    CALCULATE(
        AVERAGE('MSD Trigger Conversion'[POST_2_MON_AVG_TRB]),
        NonContactedFiltered
    )

VAR NonContactedAvg_Pre =
    CALCULATE(
        AVERAGE('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB]),
        NonContactedFiltered
    )

----------------------------------------------------------

VAR A = ContactedAvg_Post - ContactedAvg_Pre
VAR B = NonContactedAvg_Post - NonContactedAvg_Pre

RETURN
IF(
    ContactedCount <> 0,
    "₹ " & FORMAT(
        MAX(0, (A - B) * ContactedCount / 10000000),
        "0.00"
    ) & " Cr",
    BLANK()
)









Inc TRB Lift = 

-- Contacted Customers
VAR ContactedTable =
    FILTER (
        ADDCOLUMNS (
            'MSD Trigger Conversion',
            "AvgTRB", 
                ( 'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] + 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB] ) / 2
        ),
        'MSD Trigger Conversion'[CONTACTED_FLAG] = 1
    )

VAR ContactedTop5Pct =
    PERCENTILEX.EXC (ContactedTable, [AvgTRB], 0.95)

VAR ContactedBottom10Pct =
    PERCENTILEX.EXC (ContactedTable, [AvgTRB], 0.10)

VAR ContactedFiltered =
    FILTER (
        ContactedTable,
        [AvgTRB] <= ContactedTop5Pct
            && [AvgTRB] >= ContactedBottom10Pct
    )

VAR ContactedAvg_Post =
    AVERAGEX (
        ContactedFiltered,
        'MSD Trigger Conversion'[POST_2_MON_AVG_TRB]
    )

VAR ContactedAvg_Pre =
    AVERAGEX (
        ContactedFiltered,
        'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB]
    )

----------------------------------------------------------

-- Non-Contacted Customers
VAR NonContactedTable =
    FILTER (
        ADDCOLUMNS (
            'MSD Trigger Conversion',
            "AvgTRB", 
                ( 'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] + 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB] ) / 2
        ),
        'MSD Trigger Conversion'[CONTACTED_FLAG] <> 1
    )

VAR NonContactedTop5Pct =
    PERCENTILEX.EXC (NonContactedTable, [AvgTRB], 0.95)

VAR NonContactedBottom10Pct =
    PERCENTILEX.EXC (NonContactedTable, [AvgTRB], 0.10)

VAR NonContactedFiltered =
    FILTER (
        NonContactedTable,
        [AvgTRB] <= NonContactedTop5Pct
            && [AvgTRB] >= NonContactedBottom10Pct
    )

VAR NonContactedAvg_Post =
    AVERAGEX (
        NonContactedFiltered,
        'MSD Trigger Conversion'[POST_2_MON_AVG_TRB]
    )

VAR NonContactedAvg_Pre =
    AVERAGEX (
        NonContactedFiltered,
        'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB]
    )

----------------------------------------------------------

VAR A = ContactedAvg_Post - ContactedAvg_Pre
VAR B = NonContactedAvg_Post - NonContactedAvg_Pre

VAR ContactedCount =
    CALCULATE (
        COUNT('MSD Trigger Conversion'[GA_CUST_ID]),
        'MSD Trigger Conversion'[CONTACTED_FLAG] = 1
    )

RETURN
IF(
    ContactedCount <> 0,
    "₹ " & FORMAT(
        MAX(0, (A - B) * ContactedCount / 10000000),
        "0.00"
    ) & " Cr",
    BLANK()
)









Inc TRB Lift = 
VAR ContactedTable_Post =
    FILTER (
        ADDCOLUMNS (
            'MSD Trigger Conversion',
            "TRB", 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB]
        ),
        'MSD Trigger Conversion'[CONTACTED_FLAG] = 1
    )

VAR ContactedTop5Pct_Post =
    PERCENTILEX.EXC (ContactedTable_Post, [TRB], 0.95)

VAR ContactedBottom10Pct_Post =
    PERCENTILEX.EXC (ContactedTable_Post, [TRB], 0.10)

VAR ContactedFiltered_Post =
    FILTER (
        ContactedTable_Post,
        [TRB] <= ContactedTop5Pct_Post
            && [TRB] >= ContactedBottom10Pct_Post
    )

VAR ContactedAvg_Post =
    AVERAGEX (ContactedFiltered_Post, [TRB])

----------------------------------------------------------

VAR ContactedTable_Pre =
    FILTER (
        ADDCOLUMNS (
            'MSD Trigger Conversion',
            "TRB", 'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB]
        ),
        'MSD Trigger Conversion'[CONTACTED_FLAG] = 1
    )

VAR ContactedTop5Pct_Pre =
    PERCENTILEX.EXC (ContactedTable_Pre, [TRB], 0.95)

VAR ContactedBottom10Pct_Pre =
    PERCENTILEX.EXC (ContactedTable_Pre, [TRB], 0.10)

VAR ContactedFiltered_Pre =
    FILTER (
        ContactedTable_Pre,
        [TRB] <= ContactedTop5Pct_Pre
            && [TRB] >= ContactedBottom10Pct_Pre
    )

VAR ContactedAvg_Pre =
    AVERAGEX (ContactedFiltered_Pre, [TRB])

----------------------------------------------------------

VAR NonContactedTable_Post =
    FILTER (
        ADDCOLUMNS (
            'MSD Trigger Conversion',
            "TRB", 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB]
        ),
        'MSD Trigger Conversion'[CONTACTED_FLAG] <> 1
    )

VAR NonContactedTop5Pct_Post =
    PERCENTILEX.EXC (NonContactedTable_Post, [TRB], 0.95)

VAR NonContactedBottom10Pct_Post =
    PERCENTILEX.EXC (NonContactedTable_Post, [TRB], 0.10)

VAR NonContactedFiltered_Post =
    FILTER (
        NonContactedTable_Post,
        [TRB] <= NonContactedTop5Pct_Post
            && [TRB] >= NonContactedBottom10Pct_Post
    )

VAR NonContactedAvg_Post =
    AVERAGEX (NonContactedFiltered_Post, [TRB])

----------------------------------------------------------

VAR NonContactedTable_Pre =
    FILTER (
        ADDCOLUMNS (
            'MSD Trigger Conversion',
            "TRB", 'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB]
        ),
        'MSD Trigger Conversion'[CONTACTED_FLAG] <> 1
    )

VAR NonContactedTop5Pct_Pre =
    PERCENTILEX.EXC (NonContactedTable_Pre, [TRB], 0.95)

VAR NonContactedBottom10Pct_Pre =
    PERCENTILEX.EXC (NonContactedTable_Pre, [TRB], 0.10)

VAR NonContactedFiltered_Pre =
    FILTER (
        NonContactedTable_Pre,
        [TRB] <= NonContactedTop5Pct_Pre
            && [TRB] >= NonContactedBottom10Pct_Pre
    )

VAR NonContactedAvg_Pre =
    AVERAGEX (NonContactedFiltered_Pre, [TRB])

----------------------------------------------------------

VAR A = ContactedAvg_Post - ContactedAvg_Pre
VAR B = NonContactedAvg_Post - NonContactedAvg_Pre

VAR ContactedCount =
    CALCULATE (
        COUNT('MSD Trigger Conversion'[GA_CUST_ID]),
        'MSD Trigger Conversion'[CONTACTED_FLAG] = 1
    )

RETURN
IF(
    ContactedCount <> 0,
    "₹ " & FORMAT(
        MAX(0, (A - B) * ContactedCount / 10000000),
        "0.00"
    ) & " Cr",
    BLANK()
)








Please find below my updates for last week and the plan for this week:

Last Week Updates:
	•	Majority of the time went into NPS support due to multiple ongoing issues.
	•	Worked on RM Wealth data validation and prepared it for further processing.
	•	Progressed the RM 2.0 dashboard:
	•	Published it in UAT.
	•	Identified data issues in the PECMA backend table – data is not flowing correctly in the IH table and GupShub table. Tested the data and connected with the team for resolution.
	•	Received queries related to two product conversion numbers not showing correctly and started working on them.
	•	For Brand Sales MI:
	•	Published it in Unity.
	•	Completed a few validation checks.
	•	For Activity MI:
	•	Connected with Sakshi for plan alignment.
	•	Worked on the MSD Conversion Dashboard which will be part of Brand Sales MI:
	•	Approximately 30% work completed.
	•	Refreshed the Campaign Dashboard:
	•	Prepared the non-PEGA backend data and refreshed the dashboard.
	•	Identified PEGA backend data issues; connected with GupShub regarding files not uploading. Awaiting their reply for resolution before re-refreshing the dashboard with corrected data.
	•	Dedicated a full day for YTD campaign-related work as per Panuwan’s request.

This Week Plan:
	•	Update non-PEGA data for the period June 15th to June 30th and refresh the Campaign Dashboard accordingly.
	•	Provide required mapping and refresh the Campaign Dashboard again post updates.
	•	Continue work on adding the Content ID to the Campaign Dashboard:
	•	Targeting to complete this by end of next week and publish it for stakeholders.
	•	Prepare PEGA data for 15 to 20 zones for each channel.
	•	Connect with GupShup to ensure daily reposting of files when automated mails are received.
	•	Once PEGA data issues are resolved:
	•	Update and publish CRM 2.0 dashboard in Prod, which is currently ready in Unity.
	•	Implement product conversion updates (e.g. Home Loans) by connecting with Abhijeet and closing this within the week.
	•	Major focus area:
	•	Progress the MSG Conversion Tracking for this year to reflect first customer conversions.
	•	Prepare the first cut by July 18th.