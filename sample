Group = 
SWITCH(TRUE(),
    -- DBMI_RM group
    COMPRESS(UPPER('YourTable'[ROLE])) IN {"FRM","PPRM","SPRM","PRMCSUITE","EPRM","GPRM"}, "DBMI_RM",

    -- DBMI_GPB_RM
    COMPRESS(UPPER('YourTable'[ROLE])) IN {"TOP_TIER_RM","GPB_RM"}, "DBMI_GPB_RM",

    -- RM_OT
    COMPRESS(UPPER('YourTable'[ROLE])) IN {"RM-OT"}, "DBMI_OT_RM",

    -- DBS_RM
    COMPRESS(UPPER('YourTable'[ROLE])) IN {"DBS_RM"}, "DBMI_DBS_RM",

    -- PFC
    COMPRESS(UPPER('YourTable'[ROLE])) IN {"PFC"}, "DBMI_PFC_RM",

    -- RBB_RM
    COMPRESS(UPPER('YourTable'[ROLE])) IN {"RBB_RM"}, "DBMI_RBB_RM",

    -- BAS_TG etc.
    COMPRESS(UPPER('YourTable'[ROLE])) IN {"INS","BAS","REGIONALSUPPORT","BAS_LG","BAS_TG","BAS_GPB"}, "DBMI_BAS",

    -- DBMI_SM
    COMPRESS(UPPER('YourTable'[ROLE])) IN {"MANAGERBAS","REGIONALMANAGERBAS","BSM"}, "DBMI_SM",

    -- DBMI_GPB_RH
    COMPRESS(UPPER('YourTable'[ROLE])) IN {"TOPTIERREGIONALHEAD","GBREGIONALHEAD"}, "DBMI_GPB_RH",

    -- DBMI_PSM
    COMPRESS(UPPER('YourTable'[ROLE])) IN {"PSE","UB","JR_UB","SR_UB","SPE2","PSM","PSM1","TOP_TIER_PSM","MIHY","GPB_PSM"}, "DBMI_PSM",

    -- DBMI_CSM
    COMPRESS(UPPER('YourTable'[ROLE])) IN {"CSM","CSM_PSM","CSM_PSE","CSM_UB","UB_LEADER"}, "DBMI_CSM",

    -- DBMI_DBM
    COMPRESS(UPPER('YourTable'[ROLE])) = "DBM", "DBMI_DBM",

    -- Default case
    "None"
)








Total Sales Last 6 Months =
CALCULATE(
    SUM('SalesData'[SalesAmount]),
    FILTER(
        'DateTable',
        'DateTable'[Date] >= EOMONTH(MAX('SalesData'[TransactionDate]), -5) + 1 &&
        'DateTable'[Date] <= MAX('SalesData'[TransactionDate])
    )
)





Hi Shantanu,

In my current layout, I’m using three different text slicers. The issue I’m facing is that when I search using one slicer, it does not filter or interact with the others. This is limiting my ability to apply cross-slicer filtering.

Let me know if there’s a workaround or configuration to resolve this.










Product Value Title =
VAR Product = SELECTEDVALUE('PRODUCT SELECTOR'[Metric])
RETURN Product & " Sales Value (₹ Cr)"


Product Gain Title =
VAR Product = SELECTEDVALUE('PRODUCT SELECTOR'[Metric])
RETURN Product & " Gain (₹ Cr)"





Product Count Title =
VAR Product = SELECTEDVALUE('PRODUCT SELECTOR'[Metric])
RETURN Product & " Sales Count"






Selected Product Sales Count = 
VAR SelectedProduct = SELECTEDVALUE('PRODUCT SELECTOR'[Metric])

VAR RawCount =
    SWITCH(
        TRUE(),
        SelectedProduct = "TMD",
            CALCULATE(SUM('MSD Trigger Conversion'[TMD_SALES_COUNT]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        SelectedProduct = "INV",
            CALCULATE(SUM('MSD Trigger Conversion'[INV_SALES_COUNT]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        SelectedProduct = "INS",
            CALCULATE(SUM('MSD Trigger Conversion'[LT_GI_SALES_COUNT]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        SelectedProduct = "PIL",
            CALCULATE(SUM('MSD Trigger Conversion'[PIL_SALES_COUNT]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        SelectedProduct = "AIF_PMS",
            CALCULATE(SUM('MSD Trigger Conversion'[AIF_PMS_SALES_COUNT]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        0
    )

RETURN IF(RawCount <= 0, 0, RawCount)







Formatted Product Gain =
VAR SelectedProduct = SELECTEDVALUE('PRODUCT SELECTOR'[Metric])
VAR RawValue =
    SWITCH(
        TRUE(),
        SelectedProduct = "TMD", [TMD Gain],
        SelectedProduct = "INV", [Investment Gain],
        SelectedProduct = "INS", [Insurance Gain],
        SelectedProduct = "PIL", [PIL Gain],
        SelectedProduct = "CARD", [CARD Gain],
        SelectedProduct = "AIF PMS", [AIF PMS Gain]
    )
VAR FinalValue = IF(RawValue <= 0, 0, RawValue)
RETURN
    FORMAT(FinalValue, "₹#,##0.00") & " Cr"








Selected Product Gain Cr Formatted = 
VAR SelectedProduct = SELECTEDVALUE('PRODUCT SELECTOR'[Metric])

VAR RawGain =
    SWITCH(
        TRUE(),
        SelectedProduct = "TMD",
            CALCULATE(SUM('MSD Trigger Conversion'[TMD_GAIN]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        SelectedProduct = "INV",
            CALCULATE(SUM('MSD Trigger Conversion'[INV_GAIN]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        SelectedProduct = "INS",
            CALCULATE(SUM('MSD Trigger Conversion'[LT_GI_GAIN]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        SelectedProduct = "PIL",
            CALCULATE(SUM('MSD Trigger Conversion'[PIL_GAIN]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        SelectedProduct = "AIF_PMS",
            CALCULATE(SUM('MSD Trigger Conversion'[AIF_PMS_GAIN]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        0
    )

VAR FinalGain = DIVIDE(RawGain, 10000000)   -- Convert to ₹ Cr

RETURN 
    IF(FinalGain <= 0, 
        "₹0 Cr", 
        "₹" & FORMAT(FinalGain, "0.00") & " Cr"
    )




Selected Product Sales Value Cr = 
VAR SelectedProduct = SELECTEDVALUE('PRODUCT SELECTOR'[Metric])

VAR RawValue =
    SWITCH(
        TRUE(),
        SelectedProduct = "TMD",
            CALCULATE(SUM('MSD Trigger Conversion'[TMD_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        SelectedProduct = "INV",
            CALCULATE(SUM('MSD Trigger Conversion'[INV_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        SelectedProduct = "INS",
            CALCULATE(SUM('MSD Trigger Conversion'[LT_GI_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        SelectedProduct = "PIL",
            CALCULATE(SUM('MSD Trigger Conversion'[PIL_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted_Flag] = 1),

        SelectedProduct = "AIF_PMS",
            CALCULATE(
                SUM('MSD Trigger Conversion'[AIF_PMS_SALES_VALUE]),
                'MSD Trigger Conversion'[Contacted_Flag] = 1
            ),

        0
    )

VAR FinalValue = DIVIDE(RawValue, 10000000)  -- convert to ₹ Cr

RETURN IF(FinalValue <= 0, 0, FinalValue)





Selected Product Sales Value = 
VAR SelectedProduct = SELECTEDVALUE('PRODUCT SELECTOR'[Metric])
VAR RawValue =
    SWITCH(
        TRUE(),
        SelectedProduct = "TMD", 
            CALCULATE(SUM('MSD Trigger Conversion'[TMD_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted Flag] = 1),

        SelectedProduct = "INV", 
            CALCULATE(SUM('MSD Trigger Conversion'[INV_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted Flag] = 1),

        SelectedProduct = "CASA", 
            CALCULATE(SUM('MSD Trigger Conversion'[CASA_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted Flag] = 1),

        SelectedProduct = "INS", 
            CALCULATE(SUM('MSD Trigger Conversion'[INS_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted Flag] = 1),

        SelectedProduct = "PIL", 
            CALCULATE(SUM('MSD Trigger Conversion'[PIL_SALES_VALUE]), 'MSD Trigger Conversion'[Contacted Flag] = 1),

        SelectedProduct = "AIF_PMS", 
            CALCULATE(
                SUM('MSD Trigger Conversion'[AIF_SALES_VALUE]) + 
                SUM('MSD Trigger Conversion'[PMS_SALES_VALUE]),
                'MSD Trigger Conversion'[Contacted Flag] = 1
            ),

        0
    )
VAR FinalValue = DIVIDE(RawValue, 10000000)  -- convert to ₹ Cr
RETURN IF(FinalValue <= 0, 0, FinalValue)










TMD_Uplift_Impact_Cr =
VAR ContactedSales = CALCULATE(SUM('MSD Trigger Conversion'[TMD_Sales_Count]), 'MSD Trigger Conversion'[Contact_Flag] = 1)
VAR NotContactedSales = CALCULATE(SUM('MSD Trigger Conversion'[TMD_Sales_Count]), 'MSD Trigger Conversion'[Contact_Flag] = 0)

VAR TotalContacted = CALCULATE(COUNTROWS('MSD Trigger Conversion'), 'MSD Trigger Conversion'[Contact_Flag] = 1)
VAR TotalNotContacted = CALCULATE(COUNTROWS('MSD Trigger Conversion'), 'MSD Trigger Conversion'[Contact_Flag] = 0)

VAR A = DIVIDE(ContactedSales, TotalContacted)
VAR B = DIVIDE(NotContactedSales, TotalNotContacted)

VAR Uplift = A - B

VAR CrossSaleValue_Contacted = CALCULATE(SUM('MSD Trigger Conversion'[TMD_X_Sell_Value]), 'MSD Trigger Conversion'[Contact_Flag] = 1)
VAR CrossSaleCount_Contacted = CALCULATE(SUM('MSD Trigger Conversion'[TMD_X_Sell_Count]), 'MSD Trigger Conversion'[Contact_Flag] = 1)

VAR AvgXsellPerCustomer = DIVIDE(CrossSaleValue_Contacted, CrossSaleCount_Contacted)

VAR FinalImpact = Uplift * AvgXsellPerCustomer * TotalContacted
VAR FinalImpactCr = FinalImpact / 10000000

RETURN
IF(
    FinalImpactCr > 0,
    FORMAT(FinalImpactCr, "₹#,##0.00\ Cr"),
    "₹0.00 Cr"
)






TMD_Uplift_Impact =
VAR ContactedSales = CALCULATE(SUM('MSD Trigger Conversion'[TMD_Sales_Count]), 'MSD Trigger Conversion'[Contact_Flag] = 1)
VAR NotContactedSales = CALCULATE(SUM('MSD Trigger Conversion'[TMD_Sales_Count]), 'MSD Trigger Conversion'[Contact_Flag] = 0)

VAR TotalContacted = CALCULATE(COUNTROWS('MSD Trigger Conversion'), 'MSD Trigger Conversion'[Contact_Flag] = 1)
VAR TotalNotContacted = CALCULATE(COUNTROWS('MSD Trigger Conversion'), 'MSD Trigger Conversion'[Contact_Flag] = 0)

VAR A = DIVIDE(ContactedSales, TotalContacted)
VAR B = DIVIDE(NotContactedSales, TotalNotContacted)

VAR Uplift = A - B

VAR CrossSaleValue_Contacted = CALCULATE(SUM('MSD Trigger Conversion'[TMD_X_Sell_Value]), 'MSD Trigger Conversion'[Contact_Flag] = 1)
VAR CrossSaleCount_Contacted = CALCULATE(SUM('MSD Trigger Conversion'[TMD_X_Sell_Count]), 'MSD Trigger Conversion'[Contact_Flag] = 1)

VAR AvgXsellPerCustomer = DIVIDE(CrossSaleValue_Contacted, CrossSaleCount_Contacted)

VAR FinalImpact = Uplift * AvgXsellPerCustomer * TotalContacted

RETURN
FinalImpact







Trigger Search Flag (Measure) = 
VAR selectedTrigger = SELECTEDVALUE(msd_trigger[Trigger Value])
RETURN
IF (
    ISBLANK(selectedTrigger),
    1,
    IF (
        CONTAINSSTRING(MAX('MSD Trigger Conversion'[Trigger_1]), selectedTrigger) ||
        CONTAINSSTRING(MAX('MSD Trigger Conversion'[Trigger_2]), selectedTrigger) ||
        CONTAINSSTRING(MAX('MSD Trigger Conversion'[Trigger_3]), selectedTrigger) ||
        CONTAINSSTRING(MAX('MSD Trigger Conversion'[Trigger_4]), selectedTrigger),
        1,
        0
    )
)








Trigger Search Flag = 
VAR selectedTrigger = SELECTEDVALUE(Msd_trigger[Trigger_Value])
RETURN
IF (
    ISBLANK(selectedTrigger),
    1,
    IF (
        COUNTROWS(
            FILTER(
                'MSD Trigger Conversion',
                CONTAINSSTRING('MSD Trigger Conversion'[TRIGGER_1], selectedTrigger) ||
                CONTAINSSTRING('MSD Trigger Conversion'[TRIGGER_2], selectedTrigger) ||
                CONTAINSSTRING('MSD Trigger Conversion'[TRIGGER_3], selectedTrigger) ||
                CONTAINSSTRING('MSD Trigger Conversion'[TRIGGER_4], selectedTrigger)
            )
        ) > 0,
        1,
        0
    )
)






Trigger Search Flag = 
VAR selectedTrigger = SELECTEDVALUE(Msd_trigger[Trigger_Value])
RETURN
IF (
    ISBLANK(selectedTrigger),
    1,
    IF (
        CONTAINSSTRING('MSD Trigger Conversion'[Trigger_1], selectedTrigger) ||
        CONTAINSSTRING('MSD Trigger Conversion'[Trigger_2], selectedTrigger) ||
        CONTAINSSTRING('MSD Trigger Conversion'[Trigger_3], selectedTrigger) ||
        CONTAINSSTRING('MSD Trigger Conversion'[Trigger_4], selectedTrigger),
        1,
        0
    )
)





Trigger Search Flag = 
VAR selectedTrigger = SELECTEDVALUE(TriggerSlicerTable[Trigger_Value])
RETURN
IF (
    ISBLANK(selectedTrigger),
    1,
    IF (
        'MSD Trigger Conversion'[Trigger_1] = selectedTrigger ||
        'MSD Trigger Conversion'[Trigger_2] = selectedTrigger ||
        'MSD Trigger Conversion'[Trigger_3] = selectedTrigger ||
        'MSD Trigger Conversion'[Trigger_4] = selectedTrigger,
        1,
        0
    )
)





Trigger Match Flag = 
VAR selectedTrigger = SELECTEDVALUE(TriggerSlicerTable[Trigger_Value])
RETURN
IF (
    ISBLANK(selectedTrigger),
    1,
    IF (
        CONTAINSSTRING(MainData[Trigger_1], selectedTrigger)
        || CONTAINSSTRING(MainData[Trigger_2], selectedTrigger)
        || CONTAINSSTRING(MainData[Trigger_3], selectedTrigger)
        || CONTAINSSTRING(MainData[Trigger_4], selectedTrigger),
        1,
        0
    )
)





Trigger Match Flag = 
VAR selectedTrigger = SELECTEDVALUE(TriggerSlicerTable[Trigger_Value])
RETURN
IF (
    ISBLANK(selectedTrigger),
    1,  -- no filter, show all
    IF (
        selectedTrigger IN {
            SELECTEDVALUE('MainData'[Trigger_1]),
            SELECTEDVALUE('MainData'[Trigger_2]),
            SELECTEDVALUE('MainData'[Trigger_3]),
            SELECTEDVALUE('MainData'[Trigger_4])
        },
        1,
        0
    )
)





ContactRate_HTML =
VAR curr = [Contact Rate]
VAR prev =
    CALCULATE(
        [Contact Rate],
        DATEADD('DateDim_MSD'[Date], -1, MONTH)
    )
VAR diff = DIVIDE(curr - prev, prev, 0)
VAR arrow = IF(
    diff > 0,
    "<span style='color:green;font-size:20px'>▲</span>",
    "<span style='color:red;font-size:20px'>▼</span>"
)
VAR percent = FORMAT(ABS(diff), "0.00%")
RETURN
"<div style='font-size:26px;font-weight:bold'>" &
FORMAT(curr, "0.00%") & "</div>" &
"<div style='font-size:16px'>" &
FORMAT(prev, "0.00%") & " (" & arrow & " " & percent & ")</div>"





ContactRate_KPI_Display =
VAR curr = [ContactRate]
VAR prev =
    CALCULATE(
        [ContactRate],
        DATEADD('Calendar'[Date], -1, MONTH)
    )
VAR diff = DIVIDE(curr - prev, prev, 0)
VAR arrow = IF(diff > 0, "▲", IF(diff < 0, "▼", "-"))
VAR percent = FORMAT(ABS(diff), "0.00%")

RETURN
FORMAT(curr, "0.00%") & UNICHAR(10) &
FORMAT(prev, "0.00%") & " (" & arrow & " " & percent & ")"





KPI_CostConversion_Display =
VAR curr = 
    CALCULATE(
        SUM('SalesData'[CostConversion]),
        'SalesData'[Month] = MAX('SalesData'[Month])
    )

VAR prev = 
    CALCULATE(
        SUM('SalesData'[CostConversion]),
        'SalesData'[Month] = 
            CALCULATE(
                MAX('SalesData'[Month]),
                FILTER(
                    ALL('SalesData'),
                    'SalesData'[Month] < MAX('SalesData'[Month])
                )
            )
    )

VAR diff = DIVIDE(curr - prev, prev, 0)

VAR arrow = IF(diff > 0, "▲", IF(diff < 0, "▼", "-"))

VAR percent = FORMAT(ABS(diff), "0.00%")

RETURN
"$" & FORMAT(curr, "#,##0") & UNICHAR(10) &
"$" & FORMAT(prev, "#,##0") & " (" & arrow & " " & percent & ")"







Dynamic Chart Title = 
"Trend of " & [Selected Metric] & 
IF(
    [Selected Metric] IN {"Contact%", "Appointment%", "Conversion%"},
    " (%)",
    " (Number)"
)




Selected Metric Format = 
SWITCH(
    [Selected Metric],
    "Contact%", FORMAT([Contact Rate], "0.00%"),
    "Appointment%", FORMAT([Appointment Rate], "0.00%"),
    "Conversion%", FORMAT([Conversion %], "0.00%"),
    "Inc Casa Lift", FORMAT([Inc Casa Lift NUM1], "#,##0"),
    "Inc TRB Lift", FORMAT([Inc TRB Lift NUM1], "#,##0"),
    BLANK()
)





Selected Metric = 
SELECTEDVALUE('SIX_MONTHS_PARAMETER'[Metric], "Contact%")


Selected Metric Value = 
SWITCH(
    [Selected Metric],
    "Contact%", [Contact Rate],
    "Appointment%", [Appointment Rate],
    "Conversion%", [Conversion %],
    "Inc Casa Lift", [Inc Casa Lift NUM1],
    "Inc TRB Lift", [Inc TRB Lift NUM1],
    BLANK()
)
SIX_MONTHS_PARAMETER = 
DATATABLE (
    "Metric", STRING,
    "Index", INTEGER,
    {
        { "Contact%", 0 },
        { "Appointment%", 1 },
        { "Conversion%", 2 },
        { "Inc Casa Lift", 3 },
        { "Inc TRB Lift", 4 }
    }
)









Hi Pranil,

This is to inform you that, as per our earlier discussion regarding the MST first cut scheduled for the 18th, we are proposing to extend the timeline.

Due to additional workstreams involving DBMI and Activity MIOS branching, we need to prioritize validation and testing to ensure proper alignment before moving to production. Since MST is an extension of the Branching Semi module, it’s essential that all dependencies are functioning correctly.

Therefore, we are planning to extend the deadline for the first cut of MST by one week — from 18th July to 25th July. The next two days are earmarked for finalizing DBMI and Activity MIOS, following which Branching Semi will be published in production. MST trigger conversion can then be added in parallel.







Hi Vandita and Vedha,

We need the details of all GI-related campaigns that were sent out over email—whether via PEGA or non-PEGA channels.
If you have the content IDs handy, could you please share them with me, ideally broken down by channel?

Thanks in advance!







%let today = %sysfunc(today());
%let last_run_num = %sysfunc(inputn(&last_run_dt, yymmdd10.));
%let days_back = %eval(&today - &last_run_num);





filename lastdate "&base_path/last_run_date.txt";

data _null_;
    infile lastdate;
    input last_run_date : yymmdd8.;
    call symputx('last_run_dt', put(last_run_date, yymmdd10.));
run;






This Week Updates
	•	NPS:
	•	Continued working on NPS-related SAS query support due to multiple ongoing issues.
	•	MSF:
	•	Developed the MSF ORG file creation code from base, as MSF is now considered a separate channel.
	•	Integrated customer data support to Permit campaigns.
	•	RNPS:
	•	Provided data support for RNPS activities and validation.
	•	Campaigns:
	•	Supported non-PEGA data issues, connected with Gupshup team to set up the process for data repush.
	•	Established a weekly process for data repush; currently awaiting Pega team’s response on backend data issues.
	•	Worked on campaign add-ons including wealth penetration, renewal credit card communications, etc.
	•	Parallelly working on Campaign Dashboard Enhancements, including the addition of Content ID to the dashboard.
	•	Sales Revenue:
	•	Provided NDB and ETB data to the global team for sales revenue reporting.
	•	CSMIS Dashboard:
	•	Completed modifications for the DBMIA metrics page on the dashboard.
	•	MSD:
	•	Worked on MSD trigger conversion code and the trigger conversion dashboard page, which is part of the MSD conversion project.
	•	Approximately 35% of the MSD dashboard work has been completed.




IF ROLE = 'CEB' 
   AND STRIP(PEOPLE_SOFT_ID) NE '' 
   AND STRIP(PEOPLE_SOFT_ID) NE '.' THEN DO;






PROC SQL;
    CREATE TABLE MSF_ORG1 AS
    SELECT a.*,

           /* Area Head mapping */
           PROPCASE(b.Planner_Name) AS Lead_Name,
           b.People_Soft_ID AS Lead_ID,
           LOWCASE(b.Planner_Ext_Email_ID) AS Lead_Email,

           /* Level 3 mapping based on cluster */
           PROPCASE(c.Planner_Name) AS Level3_Name,
           c.People_Soft_ID AS Level3_ID

    FROM MSF1 a

    /* Join for Area Head info */
    LEFT JOIN MSF1_AH b
        ON UPCASE(a.AREA) = UPCASE(b.AREA)

    /* Join for Level 3 info based on cluster */
    LEFT JOIN MSF1_AH c
        ON UPCASE(a.CLUSTER) = UPCASE(c.CLUSTER);
QUIT;






/* Step 1: Ensure MSF1_AH (Area Head table) is sorted by AREA */
PROC SORT DATA=MSF1_AH;
    BY AREA;
RUN;

/* Step 2: Sort MSF1 (main planner dataset) by AREA */
PROC SORT DATA=MSF1;
    BY AREA;
RUN;

/* Step 3: Merge Area Head info into MSF1 based on AREA */
DATA MSF_ORG1;
    MERGE MSF1 (IN=a)
          MSF1_AH (IN=b RENAME=(
              People_Soft_ID=Lead_ID
              Planner_Name=Lead_Name
              Planner_Ext_Email_ID=Lead_Email
          ));
    BY AREA;

    IF a; /* keep only records from MSF1 */

    /* Formatting for Lead Name and Email */
    Lead_Name = PROPCASE(Lead_Name);
    Lead_Email = LOWCASE(Lead_Email);

RUN;






Selected Metric Value = 
SWITCH(
    [Selected Metric],
    "Contact%", [Contact Rate],
    "Appointment%", [Appointment Rate],
    "Conversion%", [Conversion %],
    "Inc Casa Lift", [Inc Casa Lift NUM1],
    "Inc TRB Lift", [Inc TRB Lift NUM1],
    BLANK()
)






SelectedOrLatestMonth = 
VAR SelectedMonth = SELECTEDVALUE('MSG Trigger Conversion'[Month_Year_Date])
VAR LatestMonth = CALCULATE(MAX('MSG Trigger Conversion'[Month_Year_Date]), ALL('MSG Trigger Conversion'))
RETURN
IF(
    ISBLANK(SelectedMonth),
    LatestMonth,
    SelectedMonth
)





LatestMonthFlag = 
IF(
    'MSG Trigger Conversion'[Month_Year_Date] = 
        CALCULATE(MAX('MSG Trigger Conversion'[Month_Year_Date]), ALL('MSG Trigger Conversion')),
    1,
    0
)






LatestMonthFlag = 
IF(
    'YourTable'[Month_Year_Date] = CALCULATE(MAX('YourTable'[Month_Year_Date]), ALL('YourTable')),
    1,
    0
)




Month_Year_Date = 
DATE(
    2000 + VALUE(RIGHT('YourTable'[MonthYear],2)),
    SWITCH(
        LEFT('YourTable'[MonthYear],3),
        "Jan",1,
        "Feb",2,
        "Mar",3,
        "Apr",4,
        "May",5,
        "Jun",6,
        "Jul",7,
        "Aug",8,
        "Sep",9,
        "Oct",10,
        "Nov",11,
        "Dec",12,
        BLANK()
    ),
    1
)





Hi Team,

As discussed in today’s meeting, please find the minutes:
	•	Every Wednesday, we will share one automated email for each channel, resulting in a total of three emails covering Email, SMS, and WhatsApp.
	•	Each email will include the file report for each day of the week.

Additional points:
	•	In case of any missing files or below threshold cases, the respective file needs to be reposted on the same day.
	•	If there is a missing file or below threshold case due to no campaign being sent on that day, then a communication message must be shared stating that no communication was sent on that particular day.
	•	This will help us track all missing files systematically, as per the agreed process.




Inc_TRB_Lift =
VAR DiffTable_Contacted =
    ADDCOLUMNS(
        FILTER(
            'MSD Trigger Conversion',
            'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 &&
            NOT(ISBLANK('MSD Trigger Conversion'[POST_2_MON_AVG_TRB])) &&
            NOT(ISBLANK('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB]))
        ),
        "TRB_Diff", 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB] - 'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB]
    )
VAR Perc10_Contacted = PERCENTILEX.INC(DiffTable_Contacted, [TRB_Diff], 0.10)
VAR Perc95_Contacted = PERCENTILEX.INC(DiffTable_Contacted, [TRB_Diff], 0.95)
VAR Trimmed_Contacted =
    FILTER(
        DiffTable_Contacted,
        [TRB_Diff] >= Perc10_Contacted &&
        [TRB_Diff] <= Perc95_Contacted
    )
VAR Avg_Contacted = AVERAGEX(Trimmed_Contacted, [TRB_Diff])
VAR Count_Contacted = COUNTROWS(Trimmed_Contacted)

VAR DiffTable_NonContacted =
    ADDCOLUMNS(
        FILTER(
            'MSD Trigger Conversion',
            'MSD Trigger Conversion'[CONTACTED_FLAG] <> 1 &&
            NOT(ISBLANK('MSD Trigger Conversion'[POST_2_MON_AVG_TRB])) &&
            NOT(ISBLANK('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB]))
        ),
        "TRB_Diff", 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB] - 'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB]
    )
VAR Perc10_NonContacted = PERCENTILEX.INC(DiffTable_NonContacted, [TRB_Diff], 0.10)
VAR Perc95_NonContacted = PERCENTILEX.INC(DiffTable_NonContacted, [TRB_Diff], 0.95)
VAR Trimmed_NonContacted =
    FILTER(
        DiffTable_NonContacted,
        [TRB_Diff] >= Perc10_NonContacted &&
        [TRB_Diff] <= Perc95_NonContacted
    )
VAR Avg_NonContacted = AVERAGEX(Trimmed_NonContacted, [TRB_Diff])

VAR Result = 
    IF(
        Count_Contacted <> 0,
        "₹ " & FORMAT(
            MAX(0, (Avg_Contacted - Avg_NonContacted) * Count_Contacted / 10000000),
            "0.00"
        ) & " Cr",
        BLANK()
    )
RETURN
    Result








// 1. Calculated column in 'MSD Trigger Conversion'
TRB_Diff = 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB] - 'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB]

// 2. Measures
Avg_TRB_Diff_Contacted_No_Outlier =
VAR Perc10 = PERCENTILEX.INC(
    FILTER(
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 &&
        NOT(ISBLANK('MSD Trigger Conversion'[TRB_Diff]))
    ),
    'MSD Trigger Conversion'[TRB_Diff], 0.10)
VAR Perc95 = PERCENTILEX.INC(
    FILTER(
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 &&
        NOT(ISBLANK('MSD Trigger Conversion'[TRB_Diff]))
    ),
    'MSD Trigger Conversion'[TRB_Diff], 0.95)
RETURN
    AVERAGEX(
        FILTER(
            'MSD Trigger Conversion',
            'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 &&
            'MSD Trigger Conversion'[TRB_Diff] >= Perc10 &&
            'MSD Trigger Conversion'[TRB_Diff] <= Perc95
        ),
        'MSD Trigger Conversion'[TRB_Diff]
    )

Avg_TRB_Diff_NonContacted_No_Outlier =
VAR Perc10 = PERCENTILEX.INC(
    FILTER(
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[CONTACTED_FLAG] <> 1 &&
        NOT(ISBLANK('MSD Trigger Conversion'[TRB_Diff]))
    ),
    'MSD Trigger Conversion'[TRB_Diff], 0.10)
VAR Perc95 = PERCENTILEX.INC(
    FILTER(
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[CONTACTED_FLAG] <> 1 &&
        NOT(ISBLANK('MSD Trigger Conversion'[TRB_Diff]))
    ),
    'MSD Trigger Conversion'[TRB_Diff], 0.95)
RETURN
    AVERAGEX(
        FILTER(
            'MSD Trigger Conversion',
            'MSD Trigger Conversion'[CONTACTED_FLAG] <> 1 &&
            'MSD Trigger Conversion'[TRB_Diff] >= Perc10 &&
            'MSD Trigger Conversion'[TRB_Diff] <= Perc95
        ),
        'MSD Trigger Conversion'[TRB_Diff]
    )

Count_Contacted_No_Outlier =
VAR Perc10 = PERCENTILEX.INC(
    FILTER(
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 &&
        NOT(ISBLANK('MSD Trigger Conversion'[TRB_Diff]))
    ),
    'MSD Trigger Conversion'[TRB_Diff], 0.10)
VAR Perc95 = PERCENTILEX.INC(
    FILTER(
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[CONTACTED_FLAG] = 1 &&
        NOT(ISBLANK('MSD Trigger Conversion'[TRB_Diff]))
    ),
    'MSD Trigger Conversion'[TRB_Diff], 0.95)
RETURN
    CALCULATE(
        COUNT('MSD Trigger Conversion'[GA_CUST_ID]),
        'MSD Trigger Conversion'[CONTACTED_FLAG] = 1,
        'MSD Trigger Conversion'[TRB_Diff] >= Perc10,
        'MSD Trigger Conversion'[TRB_Diff] <= Perc95
    )

Inc_TRB_Lift =
VAR A = [Avg_TRB_Diff_Contacted_No_Outlier]
VAR B = [Avg_TRB_Diff_NonContacted_No_Outlier]
VAR ContactedCount = [Count_Contacted_No_Outlier]
RETURN
IF(
    ContactedCount <> 0,
    "₹ " & FORMAT(
        MAX(0, (A - B) * ContactedCount / 10000000),
        "0.00"
    ) & " Cr",
    BLANK()
)








Inc TRB Lift = 

-- Contacted Customers
VAR ContactedTop5Pct = 
    PERCENTILEX.EXC(
        FILTER(
            'MSD Trigger Conversion',
            'MSD Trigger Conversion'[CONTACTED_FLAG] = 1
        ),
        ('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] + 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB]) / 2,
        0.95
    )

VAR ContactedBottom10Pct = 
    PERCENTILEX.EXC(
        FILTER(
            'MSD Trigger Conversion',
            'MSD Trigger Conversion'[CONTACTED_FLAG] = 1
        ),
        ('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] + 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB]) / 2,
        0.10
    )

VAR ContactedFiltered =
    FILTER(
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[CONTACTED_FLAG] = 1
        && (('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] + 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB]) / 2) <= ContactedTop5Pct
        && (('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] + 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB]) / 2) >= ContactedBottom10Pct
    )

VAR ContactedAvg_Post =
    CALCULATE(
        AVERAGE('MSD Trigger Conversion'[POST_2_MON_AVG_TRB]),
        ContactedFiltered
    )

VAR ContactedAvg_Pre =
    CALCULATE(
        AVERAGE('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB]),
        ContactedFiltered
    )

VAR ContactedCount =
    CALCULATE(
        COUNT('MSD Trigger Conversion'[GA_CUST_ID]),
        ContactedFiltered
    )

----------------------------------------------------------

-- Non-Contacted Customers
VAR NonContactedTop5Pct = 
    PERCENTILEX.EXC(
        FILTER(
            'MSD Trigger Conversion',
            'MSD Trigger Conversion'[CONTACTED_FLAG] <> 1
        ),
        ('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] + 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB]) / 2,
        0.95
    )

VAR NonContactedBottom10Pct = 
    PERCENTILEX.EXC(
        FILTER(
            'MSD Trigger Conversion',
            'MSD Trigger Conversion'[CONTACTED_FLAG] <> 1
        ),
        ('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] + 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB]) / 2,
        0.10
    )

VAR NonContactedFiltered =
    FILTER(
        'MSD Trigger Conversion',
        'MSD Trigger Conversion'[CONTACTED_FLAG] <> 1
        && (('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] + 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB]) / 2) <= NonContactedTop5Pct
        && (('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] + 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB]) / 2) >= NonContactedBottom10Pct
    )

VAR NonContactedAvg_Post =
    CALCULATE(
        AVERAGE('MSD Trigger Conversion'[POST_2_MON_AVG_TRB]),
        NonContactedFiltered
    )

VAR NonContactedAvg_Pre =
    CALCULATE(
        AVERAGE('MSD Trigger Conversion'[PRE_2_MON_AVG_TRB]),
        NonContactedFiltered
    )

----------------------------------------------------------

VAR A = ContactedAvg_Post - ContactedAvg_Pre
VAR B = NonContactedAvg_Post - NonContactedAvg_Pre

RETURN
IF(
    ContactedCount <> 0,
    "₹ " & FORMAT(
        MAX(0, (A - B) * ContactedCount / 10000000),
        "0.00"
    ) & " Cr",
    BLANK()
)









Inc TRB Lift = 

-- Contacted Customers
VAR ContactedTable =
    FILTER (
        ADDCOLUMNS (
            'MSD Trigger Conversion',
            "AvgTRB", 
                ( 'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] + 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB] ) / 2
        ),
        'MSD Trigger Conversion'[CONTACTED_FLAG] = 1
    )

VAR ContactedTop5Pct =
    PERCENTILEX.EXC (ContactedTable, [AvgTRB], 0.95)

VAR ContactedBottom10Pct =
    PERCENTILEX.EXC (ContactedTable, [AvgTRB], 0.10)

VAR ContactedFiltered =
    FILTER (
        ContactedTable,
        [AvgTRB] <= ContactedTop5Pct
            && [AvgTRB] >= ContactedBottom10Pct
    )

VAR ContactedAvg_Post =
    AVERAGEX (
        ContactedFiltered,
        'MSD Trigger Conversion'[POST_2_MON_AVG_TRB]
    )

VAR ContactedAvg_Pre =
    AVERAGEX (
        ContactedFiltered,
        'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB]
    )

----------------------------------------------------------

-- Non-Contacted Customers
VAR NonContactedTable =
    FILTER (
        ADDCOLUMNS (
            'MSD Trigger Conversion',
            "AvgTRB", 
                ( 'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB] + 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB] ) / 2
        ),
        'MSD Trigger Conversion'[CONTACTED_FLAG] <> 1
    )

VAR NonContactedTop5Pct =
    PERCENTILEX.EXC (NonContactedTable, [AvgTRB], 0.95)

VAR NonContactedBottom10Pct =
    PERCENTILEX.EXC (NonContactedTable, [AvgTRB], 0.10)

VAR NonContactedFiltered =
    FILTER (
        NonContactedTable,
        [AvgTRB] <= NonContactedTop5Pct
            && [AvgTRB] >= NonContactedBottom10Pct
    )

VAR NonContactedAvg_Post =
    AVERAGEX (
        NonContactedFiltered,
        'MSD Trigger Conversion'[POST_2_MON_AVG_TRB]
    )

VAR NonContactedAvg_Pre =
    AVERAGEX (
        NonContactedFiltered,
        'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB]
    )

----------------------------------------------------------

VAR A = ContactedAvg_Post - ContactedAvg_Pre
VAR B = NonContactedAvg_Post - NonContactedAvg_Pre

VAR ContactedCount =
    CALCULATE (
        COUNT('MSD Trigger Conversion'[GA_CUST_ID]),
        'MSD Trigger Conversion'[CONTACTED_FLAG] = 1
    )

RETURN
IF(
    ContactedCount <> 0,
    "₹ " & FORMAT(
        MAX(0, (A - B) * ContactedCount / 10000000),
        "0.00"
    ) & " Cr",
    BLANK()
)









Inc TRB Lift = 
VAR ContactedTable_Post =
    FILTER (
        ADDCOLUMNS (
            'MSD Trigger Conversion',
            "TRB", 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB]
        ),
        'MSD Trigger Conversion'[CONTACTED_FLAG] = 1
    )

VAR ContactedTop5Pct_Post =
    PERCENTILEX.EXC (ContactedTable_Post, [TRB], 0.95)

VAR ContactedBottom10Pct_Post =
    PERCENTILEX.EXC (ContactedTable_Post, [TRB], 0.10)

VAR ContactedFiltered_Post =
    FILTER (
        ContactedTable_Post,
        [TRB] <= ContactedTop5Pct_Post
            && [TRB] >= ContactedBottom10Pct_Post
    )

VAR ContactedAvg_Post =
    AVERAGEX (ContactedFiltered_Post, [TRB])

----------------------------------------------------------

VAR ContactedTable_Pre =
    FILTER (
        ADDCOLUMNS (
            'MSD Trigger Conversion',
            "TRB", 'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB]
        ),
        'MSD Trigger Conversion'[CONTACTED_FLAG] = 1
    )

VAR ContactedTop5Pct_Pre =
    PERCENTILEX.EXC (ContactedTable_Pre, [TRB], 0.95)

VAR ContactedBottom10Pct_Pre =
    PERCENTILEX.EXC (ContactedTable_Pre, [TRB], 0.10)

VAR ContactedFiltered_Pre =
    FILTER (
        ContactedTable_Pre,
        [TRB] <= ContactedTop5Pct_Pre
            && [TRB] >= ContactedBottom10Pct_Pre
    )

VAR ContactedAvg_Pre =
    AVERAGEX (ContactedFiltered_Pre, [TRB])

----------------------------------------------------------

VAR NonContactedTable_Post =
    FILTER (
        ADDCOLUMNS (
            'MSD Trigger Conversion',
            "TRB", 'MSD Trigger Conversion'[POST_2_MON_AVG_TRB]
        ),
        'MSD Trigger Conversion'[CONTACTED_FLAG] <> 1
    )

VAR NonContactedTop5Pct_Post =
    PERCENTILEX.EXC (NonContactedTable_Post, [TRB], 0.95)

VAR NonContactedBottom10Pct_Post =
    PERCENTILEX.EXC (NonContactedTable_Post, [TRB], 0.10)

VAR NonContactedFiltered_Post =
    FILTER (
        NonContactedTable_Post,
        [TRB] <= NonContactedTop5Pct_Post
            && [TRB] >= NonContactedBottom10Pct_Post
    )

VAR NonContactedAvg_Post =
    AVERAGEX (NonContactedFiltered_Post, [TRB])

----------------------------------------------------------

VAR NonContactedTable_Pre =
    FILTER (
        ADDCOLUMNS (
            'MSD Trigger Conversion',
            "TRB", 'MSD Trigger Conversion'[PRE_2_MON_AVG_TRB]
        ),
        'MSD Trigger Conversion'[CONTACTED_FLAG] <> 1
    )

VAR NonContactedTop5Pct_Pre =
    PERCENTILEX.EXC (NonContactedTable_Pre, [TRB], 0.95)

VAR NonContactedBottom10Pct_Pre =
    PERCENTILEX.EXC (NonContactedTable_Pre, [TRB], 0.10)

VAR NonContactedFiltered_Pre =
    FILTER (
        NonContactedTable_Pre,
        [TRB] <= NonContactedTop5Pct_Pre
            && [TRB] >= NonContactedBottom10Pct_Pre
    )

VAR NonContactedAvg_Pre =
    AVERAGEX (NonContactedFiltered_Pre, [TRB])

----------------------------------------------------------

VAR A = ContactedAvg_Post - ContactedAvg_Pre
VAR B = NonContactedAvg_Post - NonContactedAvg_Pre

VAR ContactedCount =
    CALCULATE (
        COUNT('MSD Trigger Conversion'[GA_CUST_ID]),
        'MSD Trigger Conversion'[CONTACTED_FLAG] = 1
    )

RETURN
IF(
    ContactedCount <> 0,
    "₹ " & FORMAT(
        MAX(0, (A - B) * ContactedCount / 10000000),
        "0.00"
    ) & " Cr",
    BLANK()
)








Please find below my updates for last week and the plan for this week:

Last Week Updates:
	•	Majority of the time went into NPS support due to multiple ongoing issues.
	•	Worked on RM Wealth data validation and prepared it for further processing.
	•	Progressed the RM 2.0 dashboard:
	•	Published it in UAT.
	•	Identified data issues in the PECMA backend table – data is not flowing correctly in the IH table and GupShub table. Tested the data and connected with the team for resolution.
	•	Received queries related to two product conversion numbers not showing correctly and started working on them.
	•	For Brand Sales MI:
	•	Published it in Unity.
	•	Completed a few validation checks.
	•	For Activity MI:
	•	Connected with Sakshi for plan alignment.
	•	Worked on the MSD Conversion Dashboard which will be part of Brand Sales MI:
	•	Approximately 30% work completed.
	•	Refreshed the Campaign Dashboard:
	•	Prepared the non-PEGA backend data and refreshed the dashboard.
	•	Identified PEGA backend data issues; connected with GupShub regarding files not uploading. Awaiting their reply for resolution before re-refreshing the dashboard with corrected data.
	•	Dedicated a full day for YTD campaign-related work as per Panuwan’s request.

This Week Plan:
	•	Update non-PEGA data for the period June 15th to June 30th and refresh the Campaign Dashboard accordingly.
	•	Provide required mapping and refresh the Campaign Dashboard again post updates.
	•	Continue work on adding the Content ID to the Campaign Dashboard:
	•	Targeting to complete this by end of next week and publish it for stakeholders.
	•	Prepare PEGA data for 15 to 20 zones for each channel.
	•	Connect with GupShup to ensure daily reposting of files when automated mails are received.
	•	Once PEGA data issues are resolved:
	•	Update and publish CRM 2.0 dashboard in Prod, which is currently ready in Unity.
	•	Implement product conversion updates (e.g. Home Loans) by connecting with Abhijeet and closing this within the week.
	•	Major focus area:
	•	Progress the MSG Conversion Tracking for this year to reflect first customer conversions.
	•	Prepare the first cut by July 18th.