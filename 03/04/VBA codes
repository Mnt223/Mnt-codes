proc sort data=your_dataset; 
    by cust_id; 
run;

data updated_data;
    set your_dataset;
    by cust_id;

    /* Keep card_count only in first record */
    if first.cust_id then card_count_new = card_count;
    else card_count_new = .;

    drop card_count;
    rename card_count_new = card_count;
run;











/* Step 1: Get max LAST_TRN_DATE and max MONTH_KEY per customer */
proc sql;
    create table cust_summary as
    select 
        cust_id,
        max(input(put(last_trn_date, 8.), yymmdd8.)) as max_trn_dt format=date9.,
        max(month_key) as max_month_key
    from your_dataset
    group by cust_id;
quit;

/* Step 2: Sort both tables for merging */
proc sort data=your_dataset; by cust_id; run;
proc sort data=cust_summary; by cust_id; run;

/* Step 3: Merge and create all 3 flags */
data final_flagged_data;
    merge your_dataset (in=a)
          cust_summary (in=b);
    by cust_id;

    /* Convert ACCT_OPN_DT to SAS date */
    acct_opn_dt_sas = input(put(acct_opn_dt, 8.), yymmdd8.);

    /* ------------------ FLAG 1: ACTIVITY DURATION FLAG ------------------ */
    active_months = intck('month', acct_opn_dt_sas, max_trn_dt);
    if active_months < 1 then act_flag = '<1M';
    else if active_months < 3 then act_flag = '<3M';
    else if active_months < 6 then act_flag = '<6M';
    else act_flag = '>=6M';

    /* ------------------ FLAG 2: NEW ACQUISITION ------------------ */
    if '01APR2025'd <= acct_opn_dt_sas <= '30APR2025'd then new_acq_flag = 'YES';
    else new_acq_flag = 'NO';

    /* ------------------ FLAG 3: ACCOUNT CLOSED ------------------ */
    if max_trn_dt < '01MAR2025'd and max_month_key < 202503 then acct_closed_flag = 'YES';
    else acct_closed_flag = 'NO';

run;










/* Step 1: Get Max LAST_TRN_DATE per Customer */
proc sql;
    create table cust_last_trn as
    select 
        cust_id,
        max(input(put(last_trn_date, 8.), yymmdd8.)) as max_trn_dt format=date9.
    from your_dataset
    where last_trn_date ne .
    group by cust_id;
quit;

/* Step 2: Sort both tables by cust_id */
proc sort data=your_dataset; 
    by cust_id; 
run;

proc sort data=cust_last_trn; 
    by cust_id; 
run;

/* Step 3: Merge and retain all fields with the new activity flag */
data with_flag;
    merge your_dataset (in=a) 
          cust_last_trn (in=b);
    by cust_id;

    /* Convert account open date to SAS date format */
    acct_opn_dt_sas = input(put(acct_opn_dt, 8.), yymmdd8.);

    /* Calculate active months between account open and max transaction date */
    active_months = intck('month', acct_opn_dt_sas, max_trn_dt);

    /* Categorize into flags */
    if active_months < 1 then act_flag = '<1M';
    else if active_months < 3 then act_flag = '<3M';
    else if active_months < 6 then act_flag = '<6M';
    else act_flag = '>=6M';
run;






Sub PasswordProtectAllFiles()

    Dim folderPath As String
    Dim fileName As String
    Dim wb As Workbook
    Dim password As String
    
    ' Set the folder path (with trailing backslash)
    folderPath = "C:\Your\Folder\Path\"
    
    ' Set the password to apply
    password = "hsbc123@"
    
    ' Loop through all Excel files in the folder
    fileName = Dir(folderPath & "*.xls*")
    
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    
    Do While fileName <> ""
        ' Open workbook
        Set wb = Workbooks.Open(folderPath & fileName)
        
        ' Save with password protection
        wb.SaveAs _
            Filename:=folderPath & fileName, _
            FileFormat:=xlOpenXMLWorkbook, _
            Password:=password
        
        wb.Close SaveChanges:=False
        fileName = Dir
    Loop

    Application.DisplayAlerts = True
    Application.ScreenUpdating = True

    MsgBox "All files password-protected successfully.", vbInformation

End Sub