%let base_path = \\server\share\archive\;  /* Path 1: Original ZIP folder location */
%let extract_path = \\server\temp\extracted\; /* Path 2: Extracted folder location */
%let days_back = 45;                      /* 0 to 44 days */
%let size_threshold = 102400;             /* 100KB threshold */
%let recipient_email = your.email@domain.com; /* Update email */

/* Delete previous data */
proc delete data=backlog; run;
proc delete data=summary; run;

/* Initialize dataset */
data backlog;
    length file_date $10 folder_status $20 file_status $25 file_size 8;
    stop;
run;

%macro extract_and_process;

/* Step 1: Extract all ZIP folders from Path 1 to Path 2 */
x "mkdir &extract_path";  
x "powershell -Command Get-ChildItem -Path '&base_path' -Filter '*.zip' | ForEach-Object {Expand-Archive -Path $_.FullName -DestinationPath '&extract_path\' -Force}";

%do i = 0 %to %eval(&days_back - 1);
    /* Generate date components */
    %let raw_date = %sysfunc(intnx(day, %sysfunc(today()), -&i, b));
    %let check_date = %sysfunc(putn(&raw_date, yymmddd10.));
    
    /* Construct extracted folder paths */
    %let extracted_folder = &extract_path.%sysfunc(putn(&raw_date, yymmddd10.));

    /* Debugging output */
    %put #########################################;
    %put Checking extracted folder: &extracted_folder;
    
    /* 1. Check if extracted folder exists */
    data _null_;
        length extracted_path $512;
        extracted_path = resolve("&extracted_folder");
        dir_id = dopen(extracted_path);
        if dir_id > 0 then do;
            call symputx('folder_found', 1);
            rc = dclose(dir_id);
        end;
        else call symputx('folder_found', 0);
    run;

    %if &folder_found %then %do;
        /* 2. Check CSV file sizes inside extracted folder */
        filename dirlist pipe "dir /b &extracted_folder\*.csv";
        
        data _null_;
            infile dirlist truncover;
            input csv_file $256.;
            length csv_path $512;
            csv_path = resolve(catx('\', "&extracted_folder", csv_file));

            /* Get file size */
            file_id = fopen(csv_path, 'I', 'B', 'recfm=n');
            if file_id > 0 then do;
                file_size = fsize(file_id);
                rc = fclose(file_id);
                call symputx('file_size', file_size);
                call symputx('file_found', 1);
            end;
            else do;
                call symputx('file_found', 0);
                call symputx('file_size', 0);
            end;
        run;

        /* Determine final status */
        %let status=Valid CSV;
        %if &file_size < &size_threshold %then %let status=Valid CSV (Below Threshold);

        data temp;
            file_date = "&check_date";
            folder_status = "Exists";
            file_status = "&status";
            file_size = &file_size;
        run;
        proc append base=backlog data=temp; run;
    %end;
    %else %do;
        /* Case: Extracted folder missing */
        data temp;
            file_date = "&check_date";
            folder_status = "Extract Failed";
            file_status = "-";
            file_size = .;
        run;
        proc append base=backlog data=temp; run;
    %end;
%end;
%mend;

%extract_and_process;

/* Step 3: Delete all extracted folders from Path 2 */
x "powershell -Command Remove-Item -Path '&extract_path\*' -Recurse -Force";

/* Step 4: Create summary statistics */
proc sql;
    create table summary as
    select 
        file_date,
        sum(case when folder_status = 'Exists' then 1 else 0 end) as Folders_Exist,
        sum(case when folder_status = 'Extract Failed' then 1 else 0 end) as Extraction_Failures,
        sum(case when file_status contains 'Valid' then 1 else 0 end) as Valid_CSVs,
        sum(case when file_status contains 'Below Threshold' then 1 else 0 end) as Size_Warnings
    from backlog
    group by file_date;
quit;

/* Step 5: Send HTML email report */
filename mail email &recipient_email
    subject="Server File Audit Report - Last &days_back Days"
    type="text/html";

data _null_;
    file mail;
    put '<html><body style="font-family: Arial, sans-serif; margin: 20px;">';
    
    put '<h2 style="color: #2c3e50; border-bottom: 2px solid #3498db;">';
    put "Server File Audit Report";
    put '</h2>';
    
    put '<div style="margin-bottom: 30px;">';
    put "<p><strong>Base Path:</strong> &base_path</p>";
    put "<p><strong>Extract Path:</strong> &extract_path</p>";
    put "<p><strong>Report Period:</strong> Last &days_back Days</p>";
    put "<p><strong>Generated:</strong> %sysfunc(datetime(), datetime20.)</p>";
    put '</div>';
    
    put '<h3 style="color: #34495e;">Daily Status Details</h3>';
    put '<table border="1" style="border-collapse: collapse; width: 100%; margin-bottom: 30px;">';
    put '<tr style="background-color: #3498db; color: white;">';
    put '<th>Date</th><th>Folder Status</th><th>File Status</th><th>File Size</th></tr>';
    
    do until (eof);
        set backlog end=eof;
        put '<tr>';
        put '<td style="padding: 8px;">' file_date '</td>';
        put '<td style="padding: 8px;">' folder_status '</td>';
        put '<td style="padding: 8px;">' file_status '</td>';
        put '<td style="padding: 8px;">' file_size '</td>';
        put '</tr>';
    end;
    
    put '</table>';
    put '</body></html>';
run;