%let base_path = \\server\share\archive\;  /* Path 1 - Original location */
%let unzipped_path = \\server\share\unzipped\;  /* Path 2 - Unzipped folder location */
%let days_back = 45;                      /* 0 to 44 days */
%let size_threshold = 102400;             /* 100KB threshold */
%let recipient_email = your.email@domain.com; /* Update email */

/* Delete previous data */
proc delete data=backlog; run;
proc delete data=summary; run;

/* Initialize dataset */
data backlog;
    length file_date $10 folder_status $20 file_status $25 file_size 8;
    stop;
run;

%macro check_files;

%do i = 0 %to %eval(&days_back - 1);
    /* Generate date components */
    %let raw_date = %sysfunc(intnx(day, %sysfunc(today()), -&i, b));
    %let check_date = %sysfunc(putn(&raw_date, yymmddd10.));
    
    /* Construct server paths */
    %let folder_path = %sysfunc(translate(&base_path.%sysfunc(putn(&raw_date, yymmddd10.)), '/', '\'));
    %let unzip_folder = %sysfunc(translate(&unzipped_path.%sysfunc(putn(&raw_date, yymmddd10.)), '/', '\'));
    %let file_name = %sysfunc(putn(&raw_date, yymmddd10.))..zip;

    /* Debugging output */
    %put #########################################;
    %put Checking: &folder_path;
    %put Looking for: &file_name;
    
    /* 1. Folder existence check */
    data _null_;
        length resolved_path $512;
        resolved_path = resolve("&folder_path");
        folder_exists = fileexist(resolved_path);
        call symputx('folder_found', folder_exists);
    run;

    %if &folder_found %then %do;
        /* 2. File existence & size check */
        data _null_;
            length full_path $512;
            full_path = resolve(catx('\', "&folder_path", "&file_name"));
            
            file_exists = fileexist(full_path);
            
            if file_exists then do;
                file_id = fopen(full_path, 'I', 'B', 'recfm=n');
                if file_id > 0 then do;
                    file_size = fsize(file_id);
                    rc = fclose(file_id);
                    call symputx('file_size', file_size);
                    call symputx('file_exists', 1);
                end;
                else do;
                    call symputx('file_exists', 0);
                    call symputx('file_size', 0);
                end;
            end;
            else do;
                call symputx('file_exists', 0);
                call symputx('file_size', 0);
            end;
        run;

        %if not &file_exists %then %do;
            /* Case 1: File missing */
            data temp;
                file_date = "&check_date";
                folder_status = "Exists";
                file_status = "Missing";
                file_size = .;
            run;
            proc append base=backlog data=temp; run;
        %end;
        %else %do;
            /* 3. Unzip the file */
            %let unzip_command = "unzip -o &folder_path/&file_name -d &unzip_folder";
            %sysexec &unzip_command;
            
            /* Check if unzipped folder exists */
            data _null_;
                length resolved_unzip_path $512;
                resolved_unzip_path = resolve("&unzip_folder");
                unzip_exists = fileexist(resolved_unzip_path);
                call symputx('unzip_found', unzip_exists);
            run;

            %if &unzip_found %then %do;
                /* 4. Perform the same validation process on unzipped files */
                data _null_;
                    length unzip_full_path $512;
                    unzip_full_path = resolve(catx('\', "&unzip_folder", "&file_name"));
                    
                    unzip_file_exists = fileexist(unzip_full_path);
                    
                    if unzip_file_exists then do;
                        unzip_file_id = fopen(unzip_full_path, 'I', 'B', 'recfm=n');
                        if unzip_file_id > 0 then do;
                            unzip_file_size = fsize(unzip_file_id);
                            rc = fclose(unzip_file_id);
                            call symputx('unzip_file_size', unzip_file_size);
                            call symputx('unzip_file_exists', 1);
                        end;
                        else do;
                            call symputx('unzip_file_exists', 0);
                            call symputx('unzip_file_size', 0);
                        end;
                    end;
                    else do;
                        call symputx('unzip_file_exists', 0);
                        call symputx('unzip_file_size', 0);
                    end;
                run;

                /* Determine final status */
                %let status=Valid;
                %if &unzip_file_size < &size_threshold %then %let status=Valid (Below Threshold);

                data temp;
                    file_date = "&check_date";
                    folder_status = "Unzipped Exists";
                    file_status = "&status";
                    file_size = &unzip_file_size;
                run;
                proc append base=backlog data=temp; run;
            %end;
            %else %do;
                /* Case 2: Unzipped folder missing */
                data temp;
                    file_date = "&check_date";
                    folder_status = "Unzip Failed";
                    file_status = "Error";
                    file_size = .;
                run;
                proc append base=backlog data=temp; run;
            %end;
        %end;
    %end;
    %else %do;
        /* Case 3: Folder missing */
        data temp;
            file_date = "&check_date";
            folder_status = "Missing";
            file_status = "-";
            file_size = .;
        run;
        proc append base=backlog data=temp; run;
    %end;
%end;
%mend;

%check_files;

/* Create summary statistics */
proc sql;
    create table summary as
    select 
        file_date,
        sum(case when folder_status = 'Exists' then 1 else 0 end) as Folders_Exist,
        sum(case when folder_status = 'Unzipped Exists' then 1 else 0 end) as Unzipped_Folders_Exist,
        sum(case when folder_status = 'Missing' then 1 else 0 end) as Folders_Missing,
        sum(case when file_status = 'Valid' then 1 else 0 end) as Valid_Files,
        sum(case when file_status = 'Missing' then 1 else 0 end) as Missing_Files,
        sum(case when file_status contains 'Threshold' then 1 else 0 end) as Size_Warnings
    from backlog
    group by file_date;
quit;

/* Delete all files in the unzipped folder */
%sysexec del /Q &unzipped_path\*.*;

/* Send HTML email report */
filename mail email &recipient_email
    subject="Server File Audit Report - Last &days_back Days"
    type="text/html";

data _null_;
    file mail;
    put "<html><body>";
    put "<h2>Server File Audit Report</h2>";
    put "<p>Base Path: &base_path</p>";
    put "<p>Unzipped Path: &unzipped_path</p>";
    put "<p>Report Period: Last &days_back Days</p>";
    put "<p>Generated: %sysfunc(datetime(), datetime20.)</p>";
    put "<h3>Summary Statistics</h3>";
    put "<table border='1'>";
    put "<tr><th>Date</th><th>Folders Exist</th><th>Unzipped Folders Exist</th><th>Valid Files</th><th>Missing Files</th><th>Size Warnings</th></tr>";
    set summary;
    put "<tr><td>" file_date "</td><td>" Folders_Exist "</td><td>" Unzipped_Folders_Exist "</td><td>" Valid_Files "</td><td>" Missing_Files "</td><td>" Size_Warnings "</td></tr>";
    put "</table>";
    put "</body></html>";
run;